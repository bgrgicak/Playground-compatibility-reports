file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237
        throw new Error(y, { cause: u });
              ^

Error: [31-May-2025 06:35:03 UTC] PHP Deprecated:  Required parameter $page_url follows optional parameter $closed in /wordpress/wp-content/plugins/dynamic-wordpress-greetbox/includes/dynamic-wp-greetbox.class.php on line 261
[31-May-2025 06:35:03 UTC] PHP Deprecated:  Required parameter $page_title follows optional parameter $closed in /wordpress/wp-content/plugins/dynamic-wordpress-greetbox/includes/dynamic-wp-greetbox.class.php on line 261
[31-May-2025 06:35:04 UTC] PHP Deprecated:  Required parameter $page_url follows optional parameter $closed in /wordpress/wp-content/plugins/dynamic-wordpress-greetbox/includes/dynamic-wp-greetbox.class.php on line 261
[31-May-2025 06:35:04 UTC] PHP Deprecated:  Required parameter $page_title follows optional parameter $closed in /wordpress/wp-content/plugins/dynamic-wordpress-greetbox/includes/dynamic-wp-greetbox.class.php on line 261
[31-May-2025 06:35:12 UTC] PHP Deprecated:  Required parameter $page_url follows optional parameter $closed in /wordpress/wp-content/plugins/dynamic-wordpress-greetbox/includes/dynamic-wp-greetbox.class.php on line 261
[31-May-2025 06:35:12 UTC] PHP Deprecated:  Required parameter $page_title follows optional parameter $closed in /wordpress/wp-content/plugins/dynamic-wordpress-greetbox/includes/dynamic-wp-greetbox.class.php on line 261
[31-May-2025 06:35:13 UTC] PHP Deprecated:  Required parameter $page_url follows optional parameter $closed in /wordpress/wp-content/plugins/dynamic-wordpress-greetbox/includes/dynamic-wp-greetbox.class.php on line 261
[31-May-2025 06:35:13 UTC] PHP Deprecated:  Required parameter $page_title follows optional parameter $closed in /wordpress/wp-content/plugins/dynamic-wordpress-greetbox/includes/dynamic-wp-greetbox.class.php on line 261
[31-May-2025 06:35:21 UTC] PHP Deprecated:  Required parameter $page_url follows optional parameter $closed in /wordpress/wp-content/plugins/dynamic-wordpress-greetbox/includes/dynamic-wp-greetbox.class.php on line 261
[31-May-2025 06:35:21 UTC] PHP Deprecated:  Required parameter $page_title follows optional parameter $closed in /wordpress/wp-content/plugins/dynamic-wordpress-greetbox/includes/dynamic-wp-greetbox.class.php on line 261
[31-May-2025 06:35:21 UTC] PHP Deprecated:  Required parameter $page_url follows optional parameter $closed in /wordpress/wp-content/plugins/dynamic-wordpress-greetbox/includes/dynamic-wp-greetbox.class.php on line 261
[31-May-2025 06:35:21 UTC] PHP Deprecated:  Required parameter $page_title follows optional parameter $closed in /wordpress/wp-content/plugins/dynamic-wordpress-greetbox/includes/dynamic-wp-greetbox.class.php on line 261
[31-May-2025 06:37:53 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>woocommerce</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href="https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121
[31-May-2025 06:38:36 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>woocommerce</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href="https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121
[31-May-2025 06:38:43 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS `wp_mvx_vendor_orders` (
            `ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `order_id` bigint(20) NOT NULL,
            `commission_id` bigint(20) NOT NULL,
            `commission_status` varchar(100) NOT NULL DEFAULT 'unpaid',
            `commission_paid_date` timestamp NULL,
            `vendor_id` bigint(20) NOT NULL,
            `shipping_status` varchar(255) NOT NULL,
            `order_item_id` bigint(20) NOT NULL,
            `line_item_type` longtext NULL,
            `product_id` bigint(20) NOT NULL,
            `variation_id` bigint(20) NOT NULL DEFAULT 0,
            `quantity` bigint(20) NOT NULL DEFAULT 1,
            `commission_amount` varchar(255) NOT NULL,
            `shipping` varchar(255) NOT NULL,
            `tax` varchar(255) NOT NULL,
            `shipping_tax_amount` varchar(255) NOT NULL DEFAULT 0,
            `is_trashed` varchar(10) NOT NULL,
            `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`ID`),
            CONSTRAINT vendor_orders UNIQUE (order_id, vendor_id, commission_id, order_item_id)
        ) ;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, ID, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, order_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, commission_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, commission_status, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, commission_paid_date, timestamp</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, vendor_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, shipping_status, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, order_item_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, line_item_type, longtext</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, product_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, variation_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, quantity, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, commission_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, shipping, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, tax, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, shipping_tax_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, is_trashed, varchar(10)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, created, timestamp</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_mvx_vendor_orders&quot; (
&quot;ID&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;order_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;commission_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;commission_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 'unpaid' COLLATE NOCASE,
&quot;commission_paid_date&quot; text COLLATE NOCASE,
&quot;vendor_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;shipping_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;order_item_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;line_item_type&quot; text COLLATE NOCASE,
&quot;product_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;variation_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;quantity&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 1,
&quot;commission_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;shipping&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;tax&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;shipping_tax_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;is_trashed&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT CURRENT_TIMESTAMP COLLATE NOCASE) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_mvx_vendor_orders__&quot; ON &quot;wp_mvx_vendor_orders&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, wp_mvx_vendor_orders__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(312): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(23): MVX_Install->mvx_plugin_tables_install()
#3 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/mvx-core-functions.php(759): MVX_Install->__construct()
#4 /wordpress/wp-includes/class-wp-hook.php(324): activate_mvx_plugin(false)
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_dc-woo...', false)
#8 /internal/eval.php(20): activate_plugin('dc-woocommerce-...')
#9 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS `wp_mvx_vendor_orders` (
            `ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `order_id` bigint(20) NOT NULL,
            `commission_id` bigint(20) NOT NULL,
            `commission_status` varchar(100) NOT NULL DEFAULT 'unpaid',
            `commission_paid_date` timestamp NULL,
            `vendor_id` bigint(20) NOT NULL,
            `shipping_status` varchar(255) NOT NULL,
            `order_item_id` bigint(20) NOT NULL,
            `line_item_type` longtext NULL,
            `product_id` bigint(20) NOT NULL,
            `variation_id` bigint(20) NOT NULL DEFAULT 0,
            `quantity` bigint(20) NOT NULL DEFAULT 1,
            `commission_amount` varchar(255) NOT NULL,
            `shipping` varchar(255) NOT NULL,
            `tax` varchar(255) NOT NULL,
            `shipping_tax_amount` varchar(255) NOT NULL DEFAULT 0,
            `is_trashed` varchar(10) NOT NULL,
            `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`ID`),
            CONSTRAINT vendor_orders UNIQUE (order_id, vendor_id, commission_id, order_item_id)
        ) ; made by activate_plugin, do_action('activate_dc-woocommerce-multi-vendor/dc_product_vendor.php'), WP_Hook->do_action, WP_Hook->apply_filters, activate_mvx_plugin, MVX_Install->__construct, MVX_Install->mvx_plugin_tables_install, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[31-May-2025 06:38:43 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS `wp_mvx_visitors_stats` (
            `ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `vendor_id` BIGINT UNSIGNED NOT NULL DEFAULT 0,
            `user_id` BIGINT UNSIGNED NOT NULL DEFAULT 0,
            `user_cookie` varchar(255) NOT NULL,
            `session_id` varchar(191) NOT NULL,
            `ip` varchar(60) NOT NULL,
            `lat` varchar(60) NOT NULL,
            `lon` varchar(60) NOT NULL,
            `city` text NOT NULL,
            `zip` varchar(20) NOT NULL,
            `regionCode` text NOT NULL,
            `region` text NOT NULL,
            `countryCode` text NOT NULL,
            `country` text NOT NULL,
            `isp` text NOT NULL,
            `timezone` varchar(255) NOT NULL,
            `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`ID`),
            CONSTRAINT visitor UNIQUE (vendor_id, session_id),
            KEY vendor_id (vendor_id),
            KEY user_id (user_id),
            KEY user_cookie (user_cookie(191)),
            KEY session_id (session_id(191)),
            KEY ip (ip)
        ) ;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, ID, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, vendor_id, bigint UNSIGNED</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, user_id, bigint UNSIGNED</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, user_cookie, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, session_id, varchar(191)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, ip, varchar(60)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, lat, varchar(60)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, lon, varchar(60)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, city, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, zip, varchar(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, regionCode, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, region, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, countryCode, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, country, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, isp, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, timezone, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, created, timestamp</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_mvx_visitors_stats&quot; (
&quot;ID&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;vendor_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;user_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;user_cookie&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;session_id&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;ip&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;lat&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;lon&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;city&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;zip&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;regionCode&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;region&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;countryCode&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;country&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;isp&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;timezone&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT CURRENT_TIMESTAMP COLLATE NOCASE) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_mvx_visitors_stats__&quot; ON &quot;wp_mvx_visitors_stats&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, wp_mvx_visitors_stats__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(312): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(23): MVX_Install->mvx_plugin_tables_install()
#3 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/mvx-core-functions.php(759): MVX_Install->__construct()
#4 /wordpress/wp-includes/class-wp-hook.php(324): activate_mvx_plugin(false)
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_dc-woo...', false)
#8 /internal/eval.php(20): activate_plugin('dc-woocommerce-...')
#9 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS `wp_mvx_visitors_stats` (
            `ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `vendor_id` BIGINT UNSIGNED NOT NULL DEFAULT 0,
            `user_id` BIGINT UNSIGNED NOT NULL DEFAULT 0,
            `user_cookie` varchar(255) NOT NULL,
            `session_id` varchar(191) NOT NULL,
            `ip` varchar(60) NOT NULL,
            `lat` varchar(60) NOT NULL,
            `lon` varchar(60) NOT NULL,
            `city` text NOT NULL,
            `zip` varchar(20) NOT NULL,
            `regionCode` text NOT NULL,
            `region` text NOT NULL,
            `countryCode` text NOT NULL,
            `country` text NOT NULL,
            `isp` text NOT NULL,
            `timezone` varchar(255) NOT NULL,
            `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`ID`),
            CONSTRAINT visitor UNIQUE (vendor_id, session_id),
            KEY vendor_id (vendor_id),
            KEY user_id (user_id),
            KEY user_cookie (user_cookie(191)),
            KEY session_id (session_id(191)),
            KEY ip (ip)
        ) ; made by activate_plugin, do_action('activate_dc-woocommerce-multi-vendor/dc_product_vendor.php'), WP_Hook->do_action, WP_Hook->apply_filters, activate_mvx_plugin, MVX_Install->__construct, MVX_Install->mvx_plugin_tables_install, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[31-May-2025 06:38:43 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS `wp_mvx_cust_answers` (
            `ans_ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `ques_ID` BIGINT UNSIGNED NOT NULL DEFAULT '0',
            `ans_details` text NOT NULL,
            `ans_by` BIGINT UNSIGNED NOT NULL DEFAULT '0',
            `ans_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            `ans_vote` longtext NULL,
            PRIMARY KEY (`ans_ID`),
            CONSTRAINT ques_id UNIQUE (ques_ID)
        ) ;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_ID, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ques_ID, bigint UNSIGNED</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_details, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_by, bigint UNSIGNED</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_created, timestamp</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_vote, longtext</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_mvx_cust_answers&quot; (
&quot;ans_ID&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;ques_ID&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT '0',
&quot;ans_details&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;ans_by&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT '0',
&quot;ans_created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT CURRENT_TIMESTAMP COLLATE NOCASE,
&quot;ans_vote&quot; text COLLATE NOCASE) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_mvx_cust_answers__&quot; ON &quot;wp_mvx_cust_answers&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, wp_mvx_cust_answers__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(312): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(23): MVX_Install->mvx_plugin_tables_install()
#3 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/mvx-core-functions.php(759): MVX_Install->__construct()
#4 /wordpress/wp-includes/class-wp-hook.php(324): activate_mvx_plugin(false)
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_dc-woo...', false)
#8 /internal/eval.php(20): activate_plugin('dc-woocommerce-...')
#9 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS `wp_mvx_cust_answers` (
            `ans_ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `ques_ID` BIGINT UNSIGNED NOT NULL DEFAULT '0',
            `ans_details` text NOT NULL,
            `ans_by` BIGINT UNSIGNED NOT NULL DEFAULT '0',
            `ans_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            `ans_vote` longtext NULL,
            PRIMARY KEY (`ans_ID`),
            CONSTRAINT ques_id UNIQUE (ques_ID)
        ) ; made by activate_plugin, do_action('activate_dc-woocommerce-multi-vendor/dc_product_vendor.php'), WP_Hook->do_action, WP_Hook->apply_filters, activate_mvx_plugin, MVX_Install->__construct, MVX_Install->mvx_plugin_tables_install, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[31-May-2025 06:38:46 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS `wp_mvx_vendor_orders` (
            `ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `order_id` bigint(20) NOT NULL,
            `commission_id` bigint(20) NOT NULL,
            `commission_status` varchar(100) NOT NULL DEFAULT 'unpaid',
            `commission_paid_date` timestamp NULL,
            `vendor_id` bigint(20) NOT NULL,
            `shipping_status` varchar(255) NOT NULL,
            `order_item_id` bigint(20) NOT NULL,
            `line_item_type` longtext NULL,
            `product_id` bigint(20) NOT NULL,
            `variation_id` bigint(20) NOT NULL DEFAULT 0,
            `quantity` bigint(20) NOT NULL DEFAULT 1,
            `commission_amount` varchar(255) NOT NULL,
            `shipping` varchar(255) NOT NULL,
            `tax` varchar(255) NOT NULL,
            `shipping_tax_amount` varchar(255) NOT NULL DEFAULT 0,
            `is_trashed` varchar(10) NOT NULL,
            `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`ID`),
            CONSTRAINT vendor_orders UNIQUE (order_id, vendor_id, commission_id, order_item_id)
        ) ;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, ID, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, order_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, commission_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, commission_status, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, commission_paid_date, timestamp</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, vendor_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, shipping_status, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, order_item_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, line_item_type, longtext</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, product_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, variation_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, quantity, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, commission_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, shipping, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, tax, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, shipping_tax_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, is_trashed, varchar(10)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, created, timestamp</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_mvx_vendor_orders&quot; (
&quot;ID&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;order_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;commission_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;commission_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 'unpaid' COLLATE NOCASE,
&quot;commission_paid_date&quot; text COLLATE NOCASE,
&quot;vendor_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;shipping_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;order_item_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;line_item_type&quot; text COLLATE NOCASE,
&quot;product_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;variation_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;quantity&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 1,
&quot;commission_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;shipping&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;tax&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;shipping_tax_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;is_trashed&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT CURRENT_TIMESTAMP COLLATE NOCASE) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_mvx_vendor_orders__&quot; ON &quot;wp_mvx_vendor_orders&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, wp_mvx_vendor_orders__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(312): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(23): MVX_Install->mvx_plugin_tables_install()
#3 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/mvx-core-functions.php(759): MVX_Install->__construct()
#4 /wordpress/wp-includes/class-wp-hook.php(324): activate_mvx_plugin('')
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-settings.php(578): do_action('plugins_loaded')
#8 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#9 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#10 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#11 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS `wp_mvx_vendor_orders` (
            `ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `order_id` bigint(20) NOT NULL,
            `commission_id` bigint(20) NOT NULL,
            `commission_status` varchar(100) NOT NULL DEFAULT 'unpaid',
            `commission_paid_date` timestamp NULL,
            `vendor_id` bigint(20) NOT NULL,
            `shipping_status` varchar(255) NOT NULL,
            `order_item_id` bigint(20) NOT NULL,
            `line_item_type` longtext NULL,
            `product_id` bigint(20) NOT NULL,
            `variation_id` bigint(20) NOT NULL DEFAULT 0,
            `quantity` bigint(20) NOT NULL DEFAULT 1,
            `commission_amount` varchar(255) NOT NULL,
            `shipping` varchar(255) NOT NULL,
            `tax` varchar(255) NOT NULL,
            `shipping_tax_amount` varchar(255) NOT NULL DEFAULT 0,
            `is_trashed` varchar(10) NOT NULL,
            `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`ID`),
            CONSTRAINT vendor_orders UNIQUE (order_id, vendor_id, commission_id, order_item_id)
        ) ; made by require_once('wp-load.php'), require_once('wp-config.php'), require_once('wp-settings.php'), do_action('plugins_loaded'), WP_Hook->do_action, WP_Hook->apply_filters, activate_mvx_plugin, MVX_Install->__construct, MVX_Install->mvx_plugin_tables_install, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[31-May-2025 06:38:46 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS `wp_mvx_visitors_stats` (
            `ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `vendor_id` BIGINT UNSIGNED NOT NULL DEFAULT 0,
            `user_id` BIGINT UNSIGNED NOT NULL DEFAULT 0,
            `user_cookie` varchar(255) NOT NULL,
            `session_id` varchar(191) NOT NULL,
            `ip` varchar(60) NOT NULL,
            `lat` varchar(60) NOT NULL,
            `lon` varchar(60) NOT NULL,
            `city` text NOT NULL,
            `zip` varchar(20) NOT NULL,
            `regionCode` text NOT NULL,
            `region` text NOT NULL,
            `countryCode` text NOT NULL,
            `country` text NOT NULL,
            `isp` text NOT NULL,
            `timezone` varchar(255) NOT NULL,
            `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`ID`),
            CONSTRAINT visitor UNIQUE (vendor_id, session_id),
            KEY vendor_id (vendor_id),
            KEY user_id (user_id),
            KEY user_cookie (user_cookie(191)),
            KEY session_id (session_id(191)),
            KEY ip (ip)
        ) ;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, ID, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, vendor_id, bigint UNSIGNED</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, user_id, bigint UNSIGNED</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, user_cookie, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, session_id, varchar(191)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, ip, varchar(60)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, lat, varchar(60)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, lon, varchar(60)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, city, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, zip, varchar(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, regionCode, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, region, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, countryCode, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, country, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, isp, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, timezone, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, created, timestamp</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_mvx_visitors_stats&quot; (
&quot;ID&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;vendor_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;user_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;user_cookie&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;session_id&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;ip&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;lat&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;lon&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;city&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;zip&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;regionCode&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;region&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;countryCode&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;country&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;isp&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;timezone&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT CURRENT_TIMESTAMP COLLATE NOCASE) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_mvx_visitors_stats__&quot; ON &quot;wp_mvx_visitors_stats&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, wp_mvx_visitors_stats__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(312): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(23): MVX_Install->mvx_plugin_tables_install()
#3 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/mvx-core-functions.php(759): MVX_Install->__construct()
#4 /wordpress/wp-includes/class-wp-hook.php(324): activate_mvx_plugin('')
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-settings.php(578): do_action('plugins_loaded')
#8 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#9 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#10 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#11 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS `wp_mvx_visitors_stats` (
            `ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `vendor_id` BIGINT UNSIGNED NOT NULL DEFAULT 0,
            `user_id` BIGINT UNSIGNED NOT NULL DEFAULT 0,
            `user_cookie` varchar(255) NOT NULL,
            `session_id` varchar(191) NOT NULL,
            `ip` varchar(60) NOT NULL,
            `lat` varchar(60) NOT NULL,
            `lon` varchar(60) NOT NULL,
            `city` text NOT NULL,
            `zip` varchar(20) NOT NULL,
            `regionCode` text NOT NULL,
            `region` text NOT NULL,
            `countryCode` text NOT NULL,
            `country` text NOT NULL,
            `isp` text NOT NULL,
            `timezone` varchar(255) NOT NULL,
            `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`ID`),
            CONSTRAINT visitor UNIQUE (vendor_id, session_id),
            KEY vendor_id (vendor_id),
            KEY user_id (user_id),
            KEY user_cookie (user_cookie(191)),
            KEY session_id (session_id(191)),
            KEY ip (ip)
        ) ; made by require_once('wp-load.php'), require_once('wp-config.php'), require_once('wp-settings.php'), do_action('plugins_loaded'), WP_Hook->do_action, WP_Hook->apply_filters, activate_mvx_plugin, MVX_Install->__construct, MVX_Install->mvx_plugin_tables_install, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[31-May-2025 06:38:46 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS `wp_mvx_cust_answers` (
            `ans_ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `ques_ID` BIGINT UNSIGNED NOT NULL DEFAULT '0',
            `ans_details` text NOT NULL,
            `ans_by` BIGINT UNSIGNED NOT NULL DEFAULT '0',
            `ans_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            `ans_vote` longtext NULL,
            PRIMARY KEY (`ans_ID`),
            CONSTRAINT ques_id UNIQUE (ques_ID)
        ) ;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_ID, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ques_ID, bigint UNSIGNED</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_details, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_by, bigint UNSIGNED</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_created, timestamp</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_vote, longtext</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_mvx_cust_answers&quot; (
&quot;ans_ID&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;ques_ID&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT '0',
&quot;ans_details&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;ans_by&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT '0',
&quot;ans_created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT CURRENT_TIMESTAMP COLLATE NOCASE,
&quot;ans_vote&quot; text COLLATE NOCASE) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_mvx_cust_answers__&quot; ON &quot;wp_mvx_cust_answers&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, wp_mvx_cust_answers__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(312): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(23): MVX_Install->mvx_plugin_tables_install()
#3 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/mvx-core-functions.php(759): MVX_Install->__construct()
#4 /wordpress/wp-includes/class-wp-hook.php(324): activate_mvx_plugin('')
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-settings.php(578): do_action('plugins_loaded')
#8 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#9 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#10 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#11 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS `wp_mvx_cust_answers` (
            `ans_ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `ques_ID` BIGINT UNSIGNED NOT NULL DEFAULT '0',
            `ans_details` text NOT NULL,
            `ans_by` BIGINT UNSIGNED NOT NULL DEFAULT '0',
            `ans_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            `ans_vote` longtext NULL,
            PRIMARY KEY (`ans_ID`),
            CONSTRAINT ques_id UNIQUE (ques_ID)
        ) ; made by require_once('wp-load.php'), require_once('wp-config.php'), require_once('wp-settings.php'), do_action('plugins_loaded'), WP_Hook->do_action, WP_Hook->apply_filters, activate_mvx_plugin, MVX_Install->__construct, MVX_Install->mvx_plugin_tables_install, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[31-May-2025 06:39:19 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>woocommerce</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href="https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121
[31-May-2025 06:39:26 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS `wp_mvx_vendor_orders` (
            `ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `order_id` bigint(20) NOT NULL,
            `commission_id` bigint(20) NOT NULL,
            `commission_status` varchar(100) NOT NULL DEFAULT 'unpaid',
            `commission_paid_date` timestamp NULL,
            `vendor_id` bigint(20) NOT NULL,
            `shipping_status` varchar(255) NOT NULL,
            `order_item_id` bigint(20) NOT NULL,
            `line_item_type` longtext NULL,
            `product_id` bigint(20) NOT NULL,
            `variation_id` bigint(20) NOT NULL DEFAULT 0,
            `quantity` bigint(20) NOT NULL DEFAULT 1,
            `commission_amount` varchar(255) NOT NULL,
            `shipping` varchar(255) NOT NULL,
            `tax` varchar(255) NOT NULL,
            `shipping_tax_amount` varchar(255) NOT NULL DEFAULT 0,
            `is_trashed` varchar(10) NOT NULL,
            `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`ID`),
            CONSTRAINT vendor_orders UNIQUE (order_id, vendor_id, commission_id, order_item_id)
        ) ;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, ID, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, order_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, commission_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, commission_status, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, commission_paid_date, timestamp</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, vendor_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, shipping_status, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, order_item_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, line_item_type, longtext</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, product_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, variation_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, quantity, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, commission_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, shipping, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, tax, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, shipping_tax_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, is_trashed, varchar(10)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, created, timestamp</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_mvx_vendor_orders&quot; (
&quot;ID&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;order_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;commission_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;commission_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 'unpaid' COLLATE NOCASE,
&quot;commission_paid_date&quot; text COLLATE NOCASE,
&quot;vendor_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;shipping_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;order_item_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;line_item_type&quot; text COLLATE NOCASE,
&quot;product_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;variation_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;quantity&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 1,
&quot;commission_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;shipping&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;tax&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;shipping_tax_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;is_trashed&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT CURRENT_TIMESTAMP COLLATE NOCASE) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_mvx_vendor_orders__&quot; ON &quot;wp_mvx_vendor_orders&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, wp_mvx_vendor_orders__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(312): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(23): MVX_Install->mvx_plugin_tables_install()
#3 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/mvx-core-functions.php(759): MVX_Install->__construct()
#4 /wordpress/wp-includes/class-wp-hook.php(324): activate_mvx_plugin(false)
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_dc-woo...', false)
#8 /internal/eval.php(20): activate_plugin('dc-woocommerce-...')
#9 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS `wp_mvx_vendor_orders` (
            `ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `order_id` bigint(20) NOT NULL,
            `commission_id` bigint(20) NOT NULL,
            `commission_status` varchar(100) NOT NULL DEFAULT 'unpaid',
            `commission_paid_date` timestamp NULL,
            `vendor_id` bigint(20) NOT NULL,
            `shipping_status` varchar(255) NOT NULL,
            `order_item_id` bigint(20) NOT NULL,
            `line_item_type` longtext NULL,
            `product_id` bigint(20) NOT NULL,
            `variation_id` bigint(20) NOT NULL DEFAULT 0,
            `quantity` bigint(20) NOT NULL DEFAULT 1,
            `commission_amount` varchar(255) NOT NULL,
            `shipping` varchar(255) NOT NULL,
            `tax` varchar(255) NOT NULL,
            `shipping_tax_amount` varchar(255) NOT NULL DEFAULT 0,
            `is_trashed` varchar(10) NOT NULL,
            `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`ID`),
            CONSTRAINT vendor_orders UNIQUE (order_id, vendor_id, commission_id, order_item_id)
        ) ; made by activate_plugin, do_action('activate_dc-woocommerce-multi-vendor/dc_product_vendor.php'), WP_Hook->do_action, WP_Hook->apply_filters, activate_mvx_plugin, MVX_Install->__construct, MVX_Install->mvx_plugin_tables_install, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[31-May-2025 06:39:26 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS `wp_mvx_visitors_stats` (
            `ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `vendor_id` BIGINT UNSIGNED NOT NULL DEFAULT 0,
            `user_id` BIGINT UNSIGNED NOT NULL DEFAULT 0,
            `user_cookie` varchar(255) NOT NULL,
            `session_id` varchar(191) NOT NULL,
            `ip` varchar(60) NOT NULL,
            `lat` varchar(60) NOT NULL,
            `lon` varchar(60) NOT NULL,
            `city` text NOT NULL,
            `zip` varchar(20) NOT NULL,
            `regionCode` text NOT NULL,
            `region` text NOT NULL,
            `countryCode` text NOT NULL,
            `country` text NOT NULL,
            `isp` text NOT NULL,
            `timezone` varchar(255) NOT NULL,
            `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`ID`),
            CONSTRAINT visitor UNIQUE (vendor_id, session_id),
            KEY vendor_id (vendor_id),
            KEY user_id (user_id),
            KEY user_cookie (user_cookie(191)),
            KEY session_id (session_id(191)),
            KEY ip (ip)
        ) ;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, ID, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, vendor_id, bigint UNSIGNED</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, user_id, bigint UNSIGNED</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, user_cookie, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, session_id, varchar(191)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, ip, varchar(60)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, lat, varchar(60)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, lon, varchar(60)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, city, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, zip, varchar(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, regionCode, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, region, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, countryCode, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, country, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, isp, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, timezone, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, created, timestamp</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_mvx_visitors_stats&quot; (
&quot;ID&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;vendor_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;user_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;user_cookie&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;session_id&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;ip&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;lat&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;lon&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;city&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;zip&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;regionCode&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;region&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;countryCode&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;country&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;isp&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;timezone&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT CURRENT_TIMESTAMP COLLATE NOCASE) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_mvx_visitors_stats__&quot; ON &quot;wp_mvx_visitors_stats&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, wp_mvx_visitors_stats__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(312): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(23): MVX_Install->mvx_plugin_tables_install()
#3 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/mvx-core-functions.php(759): MVX_Install->__construct()
#4 /wordpress/wp-includes/class-wp-hook.php(324): activate_mvx_plugin(false)
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_dc-woo...', false)
#8 /internal/eval.php(20): activate_plugin('dc-woocommerce-...')
#9 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS `wp_mvx_visitors_stats` (
            `ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `vendor_id` BIGINT UNSIGNED NOT NULL DEFAULT 0,
            `user_id` BIGINT UNSIGNED NOT NULL DEFAULT 0,
            `user_cookie` varchar(255) NOT NULL,
            `session_id` varchar(191) NOT NULL,
            `ip` varchar(60) NOT NULL,
            `lat` varchar(60) NOT NULL,
            `lon` varchar(60) NOT NULL,
            `city` text NOT NULL,
            `zip` varchar(20) NOT NULL,
            `regionCode` text NOT NULL,
            `region` text NOT NULL,
            `countryCode` text NOT NULL,
            `country` text NOT NULL,
            `isp` text NOT NULL,
            `timezone` varchar(255) NOT NULL,
            `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`ID`),
            CONSTRAINT visitor UNIQUE (vendor_id, session_id),
            KEY vendor_id (vendor_id),
            KEY user_id (user_id),
            KEY user_cookie (user_cookie(191)),
            KEY session_id (session_id(191)),
            KEY ip (ip)
        ) ; made by activate_plugin, do_action('activate_dc-woocommerce-multi-vendor/dc_product_vendor.php'), WP_Hook->do_action, WP_Hook->apply_filters, activate_mvx_plugin, MVX_Install->__construct, MVX_Install->mvx_plugin_tables_install, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[31-May-2025 06:39:26 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS `wp_mvx_cust_answers` (
            `ans_ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `ques_ID` BIGINT UNSIGNED NOT NULL DEFAULT '0',
            `ans_details` text NOT NULL,
            `ans_by` BIGINT UNSIGNED NOT NULL DEFAULT '0',
            `ans_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            `ans_vote` longtext NULL,
            PRIMARY KEY (`ans_ID`),
            CONSTRAINT ques_id UNIQUE (ques_ID)
        ) ;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_ID, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ques_ID, bigint UNSIGNED</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_details, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_by, bigint UNSIGNED</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_created, timestamp</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_vote, longtext</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_mvx_cust_answers&quot; (
&quot;ans_ID&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;ques_ID&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT '0',
&quot;ans_details&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;ans_by&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT '0',
&quot;ans_created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT CURRENT_TIMESTAMP COLLATE NOCASE,
&quot;ans_vote&quot; text COLLATE NOCASE) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_mvx_cust_answers__&quot; ON &quot;wp_mvx_cust_answers&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, wp_mvx_cust_answers__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(312): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(23): MVX_Install->mvx_plugin_tables_install()
#3 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/mvx-core-functions.php(759): MVX_Install->__construct()
#4 /wordpress/wp-includes/class-wp-hook.php(324): activate_mvx_plugin(false)
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_dc-woo...', false)
#8 /internal/eval.php(20): activate_plugin('dc-woocommerce-...')
#9 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS `wp_mvx_cust_answers` (
            `ans_ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `ques_ID` BIGINT UNSIGNED NOT NULL DEFAULT '0',
            `ans_details` text NOT NULL,
            `ans_by` BIGINT UNSIGNED NOT NULL DEFAULT '0',
            `ans_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            `ans_vote` longtext NULL,
            PRIMARY KEY (`ans_ID`),
            CONSTRAINT ques_id UNIQUE (ques_ID)
        ) ; made by activate_plugin, do_action('activate_dc-woocommerce-multi-vendor/dc_product_vendor.php'), WP_Hook->do_action, WP_Hook->apply_filters, activate_mvx_plugin, MVX_Install->__construct, MVX_Install->mvx_plugin_tables_install, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[31-May-2025 06:39:28 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS `wp_mvx_vendor_orders` (
            `ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `order_id` bigint(20) NOT NULL,
            `commission_id` bigint(20) NOT NULL,
            `commission_status` varchar(100) NOT NULL DEFAULT 'unpaid',
            `commission_paid_date` timestamp NULL,
            `vendor_id` bigint(20) NOT NULL,
            `shipping_status` varchar(255) NOT NULL,
            `order_item_id` bigint(20) NOT NULL,
            `line_item_type` longtext NULL,
            `product_id` bigint(20) NOT NULL,
            `variation_id` bigint(20) NOT NULL DEFAULT 0,
            `quantity` bigint(20) NOT NULL DEFAULT 1,
            `commission_amount` varchar(255) NOT NULL,
            `shipping` varchar(255) NOT NULL,
            `tax` varchar(255) NOT NULL,
            `shipping_tax_amount` varchar(255) NOT NULL DEFAULT 0,
            `is_trashed` varchar(10) NOT NULL,
            `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`ID`),
            CONSTRAINT vendor_orders UNIQUE (order_id, vendor_id, commission_id, order_item_id)
        ) ;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, ID, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, order_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, commission_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, commission_status, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, commission_paid_date, timestamp</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, vendor_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, shipping_status, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, order_item_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, line_item_type, longtext</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, product_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, variation_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, quantity, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, commission_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, shipping, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, tax, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, shipping_tax_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, is_trashed, varchar(10)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, created, timestamp</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_mvx_vendor_orders&quot; (
&quot;ID&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;order_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;commission_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;commission_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 'unpaid' COLLATE NOCASE,
&quot;commission_paid_date&quot; text COLLATE NOCASE,
&quot;vendor_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;shipping_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;order_item_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;line_item_type&quot; text COLLATE NOCASE,
&quot;product_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;variation_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;quantity&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 1,
&quot;commission_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;shipping&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;tax&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;shipping_tax_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;is_trashed&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT CURRENT_TIMESTAMP COLLATE NOCASE) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_mvx_vendor_orders__&quot; ON &quot;wp_mvx_vendor_orders&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_vendor_orders, wp_mvx_vendor_orders__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(312): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(23): MVX_Install->mvx_plugin_tables_install()
#3 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/mvx-core-functions.php(759): MVX_Install->__construct()
#4 /wordpress/wp-includes/class-wp-hook.php(324): activate_mvx_plugin('')
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-settings.php(578): do_action('plugins_loaded')
#8 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#9 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#10 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#11 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS `wp_mvx_vendor_orders` (
            `ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `order_id` bigint(20) NOT NULL,
            `commission_id` bigint(20) NOT NULL,
            `commission_status` varchar(100) NOT NULL DEFAULT 'unpaid',
            `commission_paid_date` timestamp NULL,
            `vendor_id` bigint(20) NOT NULL,
            `shipping_status` varchar(255) NOT NULL,
            `order_item_id` bigint(20) NOT NULL,
            `line_item_type` longtext NULL,
            `product_id` bigint(20) NOT NULL,
            `variation_id` bigint(20) NOT NULL DEFAULT 0,
            `quantity` bigint(20) NOT NULL DEFAULT 1,
            `commission_amount` varchar(255) NOT NULL,
            `shipping` varchar(255) NOT NULL,
            `tax` varchar(255) NOT NULL,
            `shipping_tax_amount` varchar(255) NOT NULL DEFAULT 0,
            `is_trashed` varchar(10) NOT NULL,
            `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`ID`),
            CONSTRAINT vendor_orders UNIQUE (order_id, vendor_id, commission_id, order_item_id)
        ) ; made by require_once('wp-load.php'), require_once('wp-config.php'), require_once('wp-settings.php'), do_action('plugins_loaded'), WP_Hook->do_action, WP_Hook->apply_filters, activate_mvx_plugin, MVX_Install->__construct, MVX_Install->mvx_plugin_tables_install, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[31-May-2025 06:39:28 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS `wp_mvx_visitors_stats` (
            `ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `vendor_id` BIGINT UNSIGNED NOT NULL DEFAULT 0,
            `user_id` BIGINT UNSIGNED NOT NULL DEFAULT 0,
            `user_cookie` varchar(255) NOT NULL,
            `session_id` varchar(191) NOT NULL,
            `ip` varchar(60) NOT NULL,
            `lat` varchar(60) NOT NULL,
            `lon` varchar(60) NOT NULL,
            `city` text NOT NULL,
            `zip` varchar(20) NOT NULL,
            `regionCode` text NOT NULL,
            `region` text NOT NULL,
            `countryCode` text NOT NULL,
            `country` text NOT NULL,
            `isp` text NOT NULL,
            `timezone` varchar(255) NOT NULL,
            `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`ID`),
            CONSTRAINT visitor UNIQUE (vendor_id, session_id),
            KEY vendor_id (vendor_id),
            KEY user_id (user_id),
            KEY user_cookie (user_cookie(191)),
            KEY session_id (session_id(191)),
            KEY ip (ip)
        ) ;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, ID, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, vendor_id, bigint UNSIGNED</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, user_id, bigint UNSIGNED</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, user_cookie, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, session_id, varchar(191)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, ip, varchar(60)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, lat, varchar(60)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, lon, varchar(60)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, city, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, zip, varchar(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, regionCode, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, region, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, countryCode, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, country, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, isp, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, timezone, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, created, timestamp</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_mvx_visitors_stats&quot; (
&quot;ID&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;vendor_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;user_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;user_cookie&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;session_id&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;ip&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;lat&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;lon&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;city&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;zip&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;regionCode&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;region&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;countryCode&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;country&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;isp&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;timezone&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT CURRENT_TIMESTAMP COLLATE NOCASE) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_mvx_visitors_stats__&quot; ON &quot;wp_mvx_visitors_stats&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_visitors_stats, wp_mvx_visitors_stats__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(312): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(23): MVX_Install->mvx_plugin_tables_install()
#3 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/mvx-core-functions.php(759): MVX_Install->__construct()
#4 /wordpress/wp-includes/class-wp-hook.php(324): activate_mvx_plugin('')
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-settings.php(578): do_action('plugins_loaded')
#8 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#9 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#10 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#11 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS `wp_mvx_visitors_stats` (
            `ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `vendor_id` BIGINT UNSIGNED NOT NULL DEFAULT 0,
            `user_id` BIGINT UNSIGNED NOT NULL DEFAULT 0,
            `user_cookie` varchar(255) NOT NULL,
            `session_id` varchar(191) NOT NULL,
            `ip` varchar(60) NOT NULL,
            `lat` varchar(60) NOT NULL,
            `lon` varchar(60) NOT NULL,
            `city` text NOT NULL,
            `zip` varchar(20) NOT NULL,
            `regionCode` text NOT NULL,
            `region` text NOT NULL,
            `countryCode` text NOT NULL,
            `country` text NOT NULL,
            `isp` text NOT NULL,
            `timezone` varchar(255) NOT NULL,
            `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`ID`),
            CONSTRAINT visitor UNIQUE (vendor_id, session_id),
            KEY vendor_id (vendor_id),
            KEY user_id (user_id),
            KEY user_cookie (user_cookie(191)),
            KEY session_id (session_id(191)),
            KEY ip (ip)
        ) ; made by require_once('wp-load.php'), require_once('wp-config.php'), require_once('wp-settings.php'), do_action('plugins_loaded'), WP_Hook->do_action, WP_Hook->apply_filters, activate_mvx_plugin, MVX_Install->__construct, MVX_Install->mvx_plugin_tables_install, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[31-May-2025 06:39:28 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS `wp_mvx_cust_answers` (
            `ans_ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `ques_ID` BIGINT UNSIGNED NOT NULL DEFAULT '0',
            `ans_details` text NOT NULL,
            `ans_by` BIGINT UNSIGNED NOT NULL DEFAULT '0',
            `ans_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            `ans_vote` longtext NULL,
            PRIMARY KEY (`ans_ID`),
            CONSTRAINT ques_id UNIQUE (ques_ID)
        ) ;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_ID, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ques_ID, bigint UNSIGNED</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_details, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_by, bigint UNSIGNED</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_created, timestamp</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, ans_vote, longtext</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_mvx_cust_answers&quot; (
&quot;ans_ID&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;ques_ID&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT '0',
&quot;ans_details&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;ans_by&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT '0',
&quot;ans_created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT CURRENT_TIMESTAMP COLLATE NOCASE,
&quot;ans_vote&quot; text COLLATE NOCASE) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_mvx_cust_answers__&quot; ON &quot;wp_mvx_cust_answers&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_mvx_cust_answers, wp_mvx_cust_answers__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(312): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/class-mvx-install.php(23): MVX_Install->mvx_plugin_tables_install()
#3 /wordpress/wp-content/plugins/dc-woocommerce-multi-vendor/includes/mvx-core-functions.php(759): MVX_Install->__construct()
#4 /wordpress/wp-includes/class-wp-hook.php(324): activate_mvx_plugin('')
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-settings.php(578): do_action('plugins_loaded')
#8 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#9 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#10 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#11 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS `wp_mvx_cust_answers` (
            `ans_ID` bigint(20) NOT NULL AUTO_INCREMENT,
            `ques_ID` BIGINT UNSIGNED NOT NULL DEFAULT '0',
            `ans_details` text NOT NULL,
            `ans_by` BIGINT UNSIGNED NOT NULL DEFAULT '0',
            `ans_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
            `ans_vote` longtext NULL,
            PRIMARY KEY (`ans_ID`),
            CONSTRAINT ques_id UNIQUE (ques_ID)
        ) ; made by require_once('wp-load.php'), require_once('wp-config.php'), require_once('wp-settings.php'), do_action('plugins_loaded'), WP_Hook->do_action, WP_Hook->apply_filters, activate_mvx_plugin, MVX_Install->__construct, MVX_Install->mvx_plugin_tables_install, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[31-May-2025 06:41:23 UTC] PHP Warning:  Undefined array key "page" in /wordpress/wp-content/plugins/developers-codebox/codebox.php on line 196
[31-May-2025 06:41:24 UTC] PHP Warning:  Undefined array key "page" in /wordpress/wp-content/plugins/developers-codebox/codebox.php on line 196
[31-May-2025 06:41:31 UTC] PHP Warning:  Undefined array key "page" in /wordpress/wp-content/plugins/developers-codebox/codebox.php on line 196
[31-May-2025 06:41:32 UTC] PHP Warning:  Undefined array key "page" in /wordpress/wp-content/plugins/developers-codebox/codebox.php on line 196
[31-May-2025 06:41:40 UTC] PHP Warning:  Undefined array key "page" in /wordpress/wp-content/plugins/developers-codebox/codebox.php on line 196
[31-May-2025 06:41:41 UTC] PHP Warning:  Undefined array key "page" in /wordpress/wp-content/plugins/developers-codebox/codebox.php on line 196
[31-May-2025 06:41:51 UTC] PHP Warning:  Undefined variable $tag in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:41:51 UTC] PHP Warning:  Undefined variable $priority in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:41:51 UTC] PHP Warning:  Undefined variable $accepted_args in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:41:52 UTC] PHP Warning:  Undefined variable $tag in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:41:52 UTC] PHP Warning:  Undefined variable $priority in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:41:52 UTC] PHP Warning:  Undefined variable $accepted_args in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:42:00 UTC] PHP Warning:  Undefined variable $tag in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:42:00 UTC] PHP Warning:  Undefined variable $priority in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:42:00 UTC] PHP Warning:  Undefined variable $accepted_args in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:42:01 UTC] PHP Warning:  Undefined variable $tag in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:42:01 UTC] PHP Warning:  Undefined variable $priority in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:42:01 UTC] PHP Warning:  Undefined variable $accepted_args in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:42:09 UTC] PHP Warning:  Undefined variable $tag in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:42:09 UTC] PHP Warning:  Undefined variable $priority in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:42:09 UTC] PHP Warning:  Undefined variable $accepted_args in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:42:10 UTC] PHP Warning:  Undefined variable $tag in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:42:10 UTC] PHP Warning:  Undefined variable $priority in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:42:10 UTC] PHP Warning:  Undefined variable $accepted_args in /wordpress/wp-content/plugins/dform/index.php on line 37
[31-May-2025 06:44:26 UTC] PHP Deprecated:  The PSR-0 `Requests_...` class names in the Requests library are deprecated. Switch to the PSR-4 `WpOrg\Requests\...` class names at your earliest convenience. in /wordpress/wp-includes/class-requests.php on line 24
[31-May-2025 06:44:26 UTC] PHP Fatal error:  Uncaught WpOrg\Requests\Exception: cURL error 55: Send failure: Socket not connected in /wordpress/wp-includes/Requests/src/Transport/Curl.php:490
Stack trace:
#0 /wordpress/wp-includes/Requests/src/Transport/Curl.php(219): WpOrg\Requests\Transport\Curl->process_response('', Array)
#1 /wordpress/wp-includes/Requests/src/Requests.php(469): WpOrg\Requests\Transport\Curl->request('http://ma-group...', Array, '', Array)
#2 /wordpress/wp-includes/Requests/src/Requests.php(305): WpOrg\Requests\Requests::request('http://ma-group...', Array, NULL, 'GET', Array)
#3 /wordpress/wp-content/plugins/dropshipping-with-ebay-for-woocommerce/includes/functions.php(131): WpOrg\Requests\Requests::get('http://ma-group...', Array, Array)
#4 /wordpress/wp-content/plugins/dropshipping-with-ebay-for-woocommerce/includes/classes/controller/E2WL_ServiceController.php(22): e2wl_remote_get('http://ma-group...')
#5 /wordpress/wp-content/plugins/dropshipping-with-ebay-for-woocommerce/includes/init.php(70): E2WL_ServiceController->__construct()
#6 /wordpress/wp-content/plugins/dropshipping-with-ebay-for-woocommerce/includes/init.php(151): E2WL_Init::{closure}(Array)
#7 /wordpress/wp-includes/class-wp-hook.php(324): E2WL_Init->__call('e2wl_init', Array)
#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#10 /wordpress/wp-content/plugins/dropshipping-with-ebay-for-woocommerce/ebay2woo-lite.php(140): do_action('e2wl_init')
#11 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#12 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('dropshipping-wi...')
#13 /internal/eval.php(20): activate_plugin('dropshipping-wi...')
#14 {main}
  thrown in /wordpress/wp-includes/Requests/src/Transport/Curl.php on line 490
[31-May-2025 06:44:36 UTC] PHP Deprecated:  The PSR-0 `Requests_...` class names in the Requests library are deprecated. Switch to the PSR-4 `WpOrg\Requests\...` class names at your earliest convenience. in /wordpress/wp-includes/class-requests.php on line 24
[31-May-2025 06:44:36 UTC] PHP Fatal error:  Uncaught WpOrg\Requests\Exception: cURL error 52: Empty reply from server in /wordpress/wp-includes/Requests/src/Transport/Curl.php:490
Stack trace:
#0 /wordpress/wp-includes/Requests/src/Transport/Curl.php(219): WpOrg\Requests\Transport\Curl->process_response('', Array)
#1 /wordpress/wp-includes/Requests/src/Requests.php(469): WpOrg\Requests\Transport\Curl->request('http://ma-group...', Array, '', Array)
#2 /wordpress/wp-includes/Requests/src/Requests.php(305): WpOrg\Requests\Requests::request('http://ma-group...', Array, NULL, 'GET', Array)
#3 /wordpress/wp-content/plugins/dropshipping-with-ebay-for-woocommerce/includes/functions.php(131): WpOrg\Requests\Requests::get('http://ma-group...', Array, Array)
#4 /wordpress/wp-content/plugins/dropshipping-with-ebay-for-woocommerce/includes/classes/controller/E2WL_ServiceController.php(22): e2wl_remote_get('http://ma-group...')
#5 /wordpress/wp-content/plugins/dropshipping-with-ebay-for-woocommerce/includes/init.php(70): E2WL_ServiceController->__construct()
#6 /wordpress/wp-content/plugins/dropshipping-with-ebay-for-woocommerce/includes/init.php(151): E2WL_Init::{closure}(Array)
#7 /wordpress/wp-includes/class-wp-hook.php(324): E2WL_Init->__call('e2wl_init', Array)
#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#10 /wordpress/wp-content/plugins/dropshipping-with-ebay-for-woocommerce/ebay2woo-lite.php(140): do_action('e2wl_init')
#11 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#12 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('dropshipping-wi...')
#13 /internal/eval.php(20): activate_plugin('dropshipping-wi...')
#14 {main}
  thrown in /wordpress/wp-includes/Requests/src/Transport/Curl.php on line 490
[31-May-2025 06:44:46 UTC] PHP Deprecated:  The PSR-0 `Requests_...` class names in the Requests library are deprecated. Switch to the PSR-4 `WpOrg\Requests\...` class names at your earliest convenience. in /wordpress/wp-includes/class-requests.php on line 24
[31-May-2025 06:44:46 UTC] PHP Fatal error:  Uncaught WpOrg\Requests\Exception: cURL error 52: Empty reply from server in /wordpress/wp-includes/Requests/src/Transport/Curl.php:490
Stack trace:
#0 /wordpress/wp-includes/Requests/src/Transport/Curl.php(219): WpOrg\Requests\Transport\Curl->process_response('', Array)
#1 /wordpress/wp-includes/Requests/src/Requests.php(469): WpOrg\Requests\Transport\Curl->request('http://ma-group...', Array, '', Array)
#2 /wordpress/wp-includes/Requests/src/Requests.php(305): WpOrg\Requests\Requests::request('http://ma-group...', Array, NULL, 'GET', Array)
#3 /wordpress/wp-content/plugins/dropshipping-with-ebay-for-woocommerce/includes/functions.php(131): WpOrg\Requests\Requests::get('http://ma-group...', Array, Array)
#4 /wordpress/wp-content/plugins/dropshipping-with-ebay-for-woocommerce/includes/classes/controller/E2WL_ServiceController.php(22): e2wl_remote_get('http://ma-group...')
#5 /wordpress/wp-content/plugins/dropshipping-with-ebay-for-woocommerce/includes/init.php(70): E2WL_ServiceController->__construct()
#6 /wordpress/wp-content/plugins/dropshipping-with-ebay-for-woocommerce/includes/init.php(151): E2WL_Init::{closure}(Array)
#7 /wordpress/wp-includes/class-wp-hook.php(324): E2WL_Init->__call('e2wl_init', Array)
#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#10 /wordpress/wp-content/plugins/dropshipping-with-ebay-for-woocommerce/ebay2woo-lite.php(140): do_action('e2wl_init')
#11 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#12 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('dropshipping-wi...')
#13 /internal/eval.php(20): activate_plugin('dropshipping-wi...')
#14 {main}
  thrown in /wordpress/wp-includes/Requests/src/Transport/Curl.php on line 490
[31-May-2025 06:46:29 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME='wp_wfConfig'</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT `TABLE_NAME` FROM _wp_sqlite_mysql_information_schema_TABLES WHERE `TABLE_SCHEMA` = DATABASE ( ) AND `TABLE_NAME` = 'wp_wfConfig' | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 no such function: DATABASE
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 'HY000', Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('SELECT TABLE_NA...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('SELECT TABLE_NA...')
#3 /wordpress/wp-includes/class-wpdb.php(3107): WP_SQLite_DB->query('SELECT TABLE_NA...')
#4 /wordpress/wp-content/plugins/wordfence/lib/wfConfig.php(347): wpdb->get_col('SELECT TABLE_NA...')
#5 /wordpress/wp-content/plugins/wordfence/lib/wfConfig.php(296): wfConfig::updateTableExists()
#6 /wordpress/wp-content/plugins/wordfence/lib/wfConfig.php(386): wfConfig::loadAllOptions()
#7 /wordpress/wp-content/plugins/wordfence/lib/wfConfig.php(552): wfConfig::hasCachedOption('allowLegacy2FA')
#8 /wordpress/wp-content/plugins/wordfence/lib/wfCredentialsController.php(12): wfConfig::get('allowLegacy2FA', false)
#9 /wordpress/wp-content/plugins/wordfence/lib/wfCredentialsController.php(16): wfCredentialsController::allowLegacy2FA()
#10 /wordpress/wp-content/plugins/wordfence/lib/wordfenceClass.php(51): wfCredentialsController::useLegacy2FA()
#11 /wordpress/wp-content/plugins/wordfence/wordfence.php(144): require_once('/wordpress/wp-c...')
#12 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#13 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('wordfence/wordf...')
#14 /internal/eval.php(20): activate_plugin('wordfence/wordf...')
#15 {main}</pre>
 for query SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME='wp_wfConfig' made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/wordfence/wordfence.php'), require_once('/plugins/wordfence/lib/wordfenceClass.php'), wfCredentialsController::useLegacy2FA, wfCredentialsController::allowLegacy2FA, wfConfig::get, wfConfig::hasCachedOption, wfConfig::loadAllOptions, wfConfig::updateTableExists, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[31-May-2025 06:46:30 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME='wp_wfConfig'</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT `TABLE_NAME` FROM _wp_sqlite_mysql_information_schema_TABLES WHERE `TABLE_SCHEMA` = DATABASE ( ) AND `TABLE_NAME` = 'wp_wfConfig' | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 no such function: DATABASE
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 'HY000', Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('SELECT TABLE_NA...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('SELECT TABLE_NA...')
#3 /wordpress/wp-includes/class-wpdb.php(3107): WP_SQLite_DB->query('SELECT TABLE_NA...')
#4 /wordpress/wp-content/plugins/wordfence/lib/wfConfig.php(347): wpdb->get_col('SELECT TABLE_NA...')
#5 /wordpress/wp-content/plugins/wordfence/lib/wfConfig.php(296): wfConfig::updateTableExists()
#6 /wordpress/wp-content/plugins/wordfence/lib/wfConfig.php(386): wfConfig::loadAllOptions()
#7 /wordpress/wp-content/plugins/wordfence/lib/wfConfig.php(552): wfConfig::hasCachedOption
