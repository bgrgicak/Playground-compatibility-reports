file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237
        throw new Error(y, { cause: u });
              ^

Error: [06-May-2025 07:29:29 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE wp_bp_group_documents (
		  		id bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY,
		  		user_id bigint(20) NOT NULL,
		  		group_id bigint(20) NOT NULL,
		  		created_ts int NOT NULL,
				modified_ts int NOT NULL,
				file VARCHAR(255) NOT NULL,
				name VARCHAR(255) NULL,
				description TEXT NULL,
				featured BOOL DEFAULT FALSE,
				download_count bigint(20) NOT NULL DEFAULT 0,
                                KEY user_id (user_id),
                                KEY group_id (group_id),
                                KEY created_ts (created_ts),
				KEY modified_ts (modified_ts),
				KEY download_count (download_count)
		 	   ) DEFAULT CHARACTER SET utf8mb4;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unexpected token in MySQL query: featured.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-admin/includes/upgrade.php(3280): WP_SQLite_DB->query('CREATE TABLE wp...')
#2 /wordpress/wp-content/plugins/bp-group-documents/loader.php(160): dbDelta(Array)
#3 /wordpress/wp-content/plugins/bp-group-documents/loader.php(108): bp_group_documents_install_upgrade()
#4 /wordpress/wp-includes/class-wp-hook.php(324): bp_group_documents_is_installed(false)
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_bp-gro...', false)
#8 /internal/eval.php(20): activate_plugin('bp-group-docume...')
#9 {main}</pre>
 for query CREATE TABLE wp_bp_group_documents (
		  		id bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY,
		  		user_id bigint(20) NOT NULL,
		  		group_id bigint(20) NOT NULL,
		  		created_ts int NOT NULL,
				modified_ts int NOT NULL,
				file VARCHAR(255) NOT NULL,
				name VARCHAR(255) NULL,
				description TEXT NULL,
				featured BOOL DEFAULT FALSE,
				download_count bigint(20) NOT NULL DEFAULT 0,
                                KEY user_id (user_id),
                                KEY group_id (group_id),
                                KEY created_ts (created_ts),
				KEY modified_ts (modified_ts),
				KEY download_count (download_count)
		 	   ) DEFAULT CHARACTER SET utf8mb4; made by activate_plugin, do_action('activate_bp-group-documents/loader.php'), WP_Hook->do_action, WP_Hook->apply_filters, bp_group_documents_is_installed, bp_group_documents_install_upgrade, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-May-2025 07:29:46 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE wp_bp_group_documents (
		  		id bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY,
		  		user_id bigint(20) NOT NULL,
		  		group_id bigint(20) NOT NULL,
		  		created_ts int NOT NULL,
				modified_ts int NOT NULL,
				file VARCHAR(255) NOT NULL,
				name VARCHAR(255) NULL,
				description TEXT NULL,
				featured BOOL DEFAULT FALSE,
				download_count bigint(20) NOT NULL DEFAULT 0,
                                KEY user_id (user_id),
                                KEY group_id (group_id),
                                KEY created_ts (created_ts),
				KEY modified_ts (modified_ts),
				KEY download_count (download_count)
		 	   ) DEFAULT CHARACTER SET utf8mb4;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unexpected token in MySQL query: featured.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-admin/includes/upgrade.php(3280): WP_SQLite_DB->query('CREATE TABLE wp...')
#2 /wordpress/wp-content/plugins/bp-group-documents/loader.php(160): dbDelta(Array)
#3 /wordpress/wp-content/plugins/bp-group-documents/loader.php(108): bp_group_documents_install_upgrade()
#4 /wordpress/wp-includes/class-wp-hook.php(324): bp_group_documents_is_installed(false)
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_bp-gro...', false)
#8 /internal/eval.php(20): activate_plugin('bp-group-docume...')
#9 {main}</pre>
 for query CREATE TABLE wp_bp_group_documents (
		  		id bigint(20) NOT NULL AUTO_INCREMENT PRIMARY KEY,
		  		user_id bigint(20) NOT NULL,
		  		group_id bigint(20) NOT NULL,
		  		created_ts int NOT NULL,
				modified_ts int NOT NULL,
				file VARCHAR(255) NOT NULL,
				name VARCHAR(255) NULL,
				description TEXT NULL,
				featured BOOL DEFAULT FALSE,
				download_count bigint(20) NOT NULL DEFAULT 0,
                                KEY user_id (user_id),
                                KEY group_id (group_id),
                                KEY created_ts (created_ts),
				KEY modified_ts (modified_ts),
				KEY download_count (download_count)
		 	   ) DEFAULT CHARACTER SET utf8mb4; made by activate_plugin, do_action('activate_bp-group-documents/loader.php'), WP_Hook->do_action, WP_Hook->apply_filters, bp_group_documents_is_installed, bp_group_documents_install_upgrade, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error

    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237:15)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)
    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {
  [cause]: Error: Error when executing the blueprint step #5 ({"step":"installPlugin","pluginData":{"resource":"wordpress.org/plugins","slug":"betpress"},"options":{"activate":true}}) : 
  "unreachable" WASM instruction executed.
  
  The typical reason is a PHP function missing from the ASYNCIFY_ONLY
  list when building PHP.wasm.
  
  You will need to file a new issue in the WordPress Playground repository
  and paste this error message there:
  
  https://github.com/WordPress/wordpress-playground/issues/new
  
  If you're a core developer, the typical fix is to:
  
  * Isolate a minimal reproduction of the error
  * Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository
  * Run 'npm run fix-asyncify'
  * Commit the changes, push to the repo, release updated NPM packages
  
  Below is a list of all the PHP functions found in the stack trace to
  help with the minimal reproduction. If they're all already listed in
  the Dockerfile, you'll need to trigger this error again with long stack
  traces enabled. In node.js, you can do it using the --stack-trace-limit=100
  CLI option: 
  
      * php.wasm.php_pollfd_for
      * php.wasm.php_openssl_sockop_set_option
      * php.wasm._php_stream_eof
      * php.wasm.php_stream_url_wrap_http_ex
      * php.wasm.php_stream_url_wrap_http
      * php.wasm._php_stream_open_wrapper_ex
      * php.wasm.php_libxml_streams_IO_open_wrapper
  
      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12449:19)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)
      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)
      at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)
      at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {
    [cause]: Error: 
    "unreachable" WASM instruction executed.
    
    The typical reason is a PHP function missing from the ASYNCIFY_ONLY
    list when building PHP.wasm.
    
    You will need to file a new issue in the WordPress Playground repository
    and paste this error message there:
    
    https://github.com/WordPress/wordpress-playground/issues/new
    
    If you're a core developer, the typical fix is to:
    
    * Isolate a minimal reproduction of the error
    * Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository
    * Run 'npm run fix-asyncify'
    * Commit the changes, push to the repo, release updated NPM packages
    
    Below is a list of all the PHP functions found in the stack trace to
    help with the minimal reproduction. If they're all already listed in
    the Dockerfile, you'll need to trigger this error again with long stack
    traces enabled. In node.js, you can do it using the --stack-trace-limit=100
    CLI option: 
    
        * php.wasm.php_pollfd_for
        * php.wasm.php_openssl_sockop_set_option
        * php.wasm._php_stream_eof
        * php.wasm.php_stream_url_wrap_http_ex
        * php.wasm.php_stream_url_wrap_http
        * php.wasm._php_stream_open_wrapper_ex
        * php.wasm.php_libxml_streams_IO_open_wrapper
    
        at PHP.ae (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:1449:78)
        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
        at async PHP.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:984:17)
        at async wr (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:33:39)
        at async Object.gt [as installPlugin] (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:974:42)
        at async g (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12517:30)
        at async Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12446:23)
        at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)
        at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)
        at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10) {
      cause: Error: Rethrown
          at UnhandledRejectionsTarget.e (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:1426:19)
          at [nodejs.internal.kHybridDispatch] (node:internal/event_target:827:20)
          at UnhandledRejectionsTarget.dispatchEvent (node:internal/event_target:762:26)
          at t.wasmExports.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:568:15)
          at invoke_iiiii (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:99042:14)
          at php.wasm.php_execute_script (wasm://wasm/php.wasm-038c1012:wasm-function[11421]:0x63ece7)
          at php.wasm.dynCall_ii (wasm://wasm/php.wasm-038c1012:wasm-function[13272]:0x705315)
          at ret.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:98094:22)
          at t.wasmExports.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:559:18)
          at invoke_ii (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:99053:14) {
        cause: RuntimeError: unreachable
            at php.wasm.__fwritex (wasm://wasm/php.wasm-038c1012:wasm-function[4382]:0x2edd64)
            at php.wasm.out (wasm://wasm/php.wasm-038c1012:wasm-function[850]:0x8138c)
            at php.wasm.printf_core (wasm://wasm/php.wasm-038c1012:wasm-function[5479]:0x3a05c7)
            at php.wasm.__vfprintf_internal (wasm://wasm/php.wasm-038c1012:wasm-function[1502]:0xe13c0)
            at php.wasm.vsnprintf (wasm://wasm/php.wasm-038c1012:wasm-function[880]:0x8520d)
            at php.wasm.__xmlRaiseError (wasm://wasm/php.wasm-038c1012:wasm-function[122]:0x9f2a)
            at php.wasm.__xmlLoaderErr (wasm://wasm/php.wasm-038c1012:wasm-function[6552]:0x4606c4)
            at php.wasm.xmlNewInputFromFile (wasm://wasm/php.wasm-038c1012:wasm-function[4959]:0x33efb3)
            at php.wasm.xmlDefaultExternalEntityLoader (wasm://wasm/php.wasm-038c1012:wasm-function[4994]:0x3438bc)
            at php.wasm._php_libxml_pre_ext_ent_loader (wasm://wasm/php.wasm-038c1012:wasm-function[13981]:0x73c01c) {
          cause: Error
              at Asyncify.handleSleep (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:99370:45)
              at returnCallback (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:98383:51)
              at wasm_poll_socket (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:98390:12)
              at php.wasm.php_pollfd_for (wasm://wasm/php.wasm-038c1012:wasm-function[1031]:0x9c35d)
              at php.wasm.php_openssl_sockop_set_option (wasm://wasm/php.wasm-038c1012:wasm-function[11238]:0x62cafc)
              at php.wasm._php_stream_eof (wasm://wasm/php.wasm-038c1012:wasm-function[577]:0x42268)
              at php.wasm.php_stream_url_wrap_http_ex (wasm://wasm/php.wasm-038c1012:wasm-function[5574]:0x3b2e76)
              at php.wasm.php_stream_url_wrap_http (wasm://wasm/php.wasm-038c1012:wasm-function[5575]:0x3b4080)
              at php.wasm._php_stream_open_wrapper_ex (wasm://wasm/php.wasm-038c1012:wasm-function[330]:0x2593e)
              at php.wasm.php_libxml_streams_IO_open_wrapper (wasm://wasm/php.wasm-038c1012:wasm-function[3997]:0x29c182)
        },
        betterMessage: '\n' +
          '"unreachable" WASM instruction executed.\n' +
          '\n' +
          'The typical reason is a PHP function missing from the ASYNCIFY_ONLY\n' +
          'list when building PHP.wasm.\n' +
          '\n' +
          'You will need to file a new issue in the WordPress Playground repository\n' +
          'and paste this error message there:\n' +
          '\n' +
          'https://github.com/WordPress/wordpress-playground/issues/new\n' +
          '\n' +
          "If you're a core developer, the typical fix is to:\n" +
          '\n' +
          '* Isolate a minimal reproduction of the error\n' +
          '* Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository\n' +
          "* Run 'npm run fix-asyncify'\n" +
          '* Commit the changes, push to the repo, release updated NPM packages\n' +
          '\n' +
          'Below is a list of all the PHP functions found in the stack trace to\n' +
          "help with the minimal reproduction. If they're all already listed in\n" +
          "the Dockerfile, you'll need to trigger this error again with long stack\n" +
          'traces enabled. In node.js, you can do it using the --stack-trace-limit=100\n' +
          'CLI option: \n' +
          '\n' +
          '    * php.wasm.php_pollfd_for\n' +
          '    * php.wasm.php_openssl_sockop_set_option\n' +
          '    * php.wasm._php_stream_eof\n' +
          '    * php.wasm.php_stream_url_wrap_http_ex\n' +
          '    * php.wasm.php_stream_url_wrap_http\n' +
          '    * php.wasm._php_stream_open_wrapper_ex\n' +
          '    * php.wasm.php_libxml_streams_IO_open_wrapper\n'
      }
    }
  }
}

Node.js v23.11.0
