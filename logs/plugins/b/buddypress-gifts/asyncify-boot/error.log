file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/run-cli-j-geJYS3.js:325
        throw new Error($, { cause: h });
              ^

Error: [09-Jul-2025 19:02:58 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/addphp/addphp.php on line 68
[09-Jul-2025 19:03:08 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/addphp/addphp.php on line 68
[09-Jul-2025 19:03:18 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/addphp/addphp.php on line 68
[09-Jul-2025 19:04:51 UTC] PHP Deprecated:  Required parameter $respContent follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:04:51 UTC] PHP Deprecated:  Required parameter $respHeaders follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:04:51 UTC] PHP Deprecated:  Required parameter $errorMsg follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:04:52 UTC] PHP Deprecated:  Required parameter $respContent follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:04:52 UTC] PHP Deprecated:  Required parameter $respHeaders follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:04:52 UTC] PHP Deprecated:  Required parameter $errorMsg follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:05:01 UTC] PHP Deprecated:  Required parameter $respContent follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:05:01 UTC] PHP Deprecated:  Required parameter $respHeaders follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:05:01 UTC] PHP Deprecated:  Required parameter $errorMsg follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:05:01 UTC] PHP Deprecated:  Required parameter $respContent follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:05:01 UTC] PHP Deprecated:  Required parameter $respHeaders follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:05:01 UTC] PHP Deprecated:  Required parameter $errorMsg follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:05:10 UTC] PHP Deprecated:  Required parameter $respContent follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:05:10 UTC] PHP Deprecated:  Required parameter $respHeaders follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:05:10 UTC] PHP Deprecated:  Required parameter $errorMsg follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:05:11 UTC] PHP Deprecated:  Required parameter $respContent follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:05:11 UTC] PHP Deprecated:  Required parameter $respHeaders follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:05:11 UTC] PHP Deprecated:  Required parameter $errorMsg follows optional parameter $reqHeaders in /wordpress/wp-content/plugins/advanced-usps-shipping-calculator-for-woocommerce/classes/shiprateapi/ShipRateSocketPost.inc on line 56
[09-Jul-2025 19:05:50 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE INDEX aieo_idx_orderid_orders ON wp_aieo_temp_orders_table  (OrderId);</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createIndex"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('CREATE INDEX ai...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('CREATE INDEX ai...')
#4 /wordpress/wp-content/plugins/ai-eshop-optimizer/includes/sql/sprocs.php(160): WP_SQLite_DB->query('CREATE INDEX ai...')
#5 /wordpress/wp-content/plugins/ai-eshop-optimizer/ai-eshop-optimizer.php(157): aieo_create_temp_orders_table('wp_aieo_temp_or...')
#6 /wordpress/wp-includes/class-wp-hook.php(324): aieo_create_temp_tables_activation_hook(false)
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_ai-esh...', false)
#10 /internal/eval.php(20): activate_plugin('ai-eshop-optimi...')
#11 {main}</pre>
 for query CREATE INDEX aieo_idx_orderid_orders ON wp_aieo_temp_orders_table  (OrderId); made by activate_plugin, do_action('activate_ai-eshop-optimizer/ai-eshop-optimizer.php'), WP_Hook->do_action, WP_Hook->apply_filters, aieo_create_temp_tables_activation_hook, aieo_create_temp_orders_table, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[09-Jul-2025 19:05:50 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE INDEX aieo_idx_productid_orders ON wp_aieo_temp_orders_table  (ProductId);</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createIndex"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('CREATE INDEX ai...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('CREATE INDEX ai...')
#4 /wordpress/wp-content/plugins/ai-eshop-optimizer/includes/sql/sprocs.php(160): WP_SQLite_DB->query('CREATE INDEX ai...')
#5 /wordpress/wp-content/plugins/ai-eshop-optimizer/ai-eshop-optimizer.php(157): aieo_create_temp_orders_table('wp_aieo_temp_or...')
#6 /wordpress/wp-includes/class-wp-hook.php(324): aieo_create_temp_tables_activation_hook(false)
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_ai-esh...', false)
#10 /internal/eval.php(20): activate_plugin('ai-eshop-optimi...')
#11 {main}</pre>
 for query CREATE INDEX aieo_idx_productid_orders ON wp_aieo_temp_orders_table  (ProductId); made by activate_plugin, do_action('activate_ai-eshop-optimizer/ai-eshop-optimizer.php'), WP_Hook->do_action, WP_Hook->apply_filters, aieo_create_temp_tables_activation_hook, aieo_create_temp_orders_table, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[09-Jul-2025 19:05:50 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE INDEX aieo_idx_parentproductid_orders ON wp_aieo_temp_orders_table  (ParentProductId);</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createIndex"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('CREATE INDEX ai...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('CREATE INDEX ai...')
#4 /wordpress/wp-content/plugins/ai-eshop-optimizer/includes/sql/sprocs.php(160): WP_SQLite_DB->query('CREATE INDEX ai...')
#5 /wordpress/wp-content/plugins/ai-eshop-optimizer/ai-eshop-optimizer.php(157): aieo_create_temp_orders_table('wp_aieo_temp_or...')
#6 /wordpress/wp-includes/class-wp-hook.php(324): aieo_create_temp_tables_activation_hook(false)
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_ai-esh...', false)
#10 /internal/eval.php(20): activate_plugin('ai-eshop-optimi...')
#11 {main}</pre>
 for query CREATE INDEX aieo_idx_parentproductid_orders ON wp_aieo_temp_orders_table  (ParentProductId); made by activate_plugin, do_action('activate_ai-eshop-optimizer/ai-eshop-optimizer.php'), WP_Hook->do_action, WP_Hook->apply_filters, aieo_create_temp_tables_activation_hook, aieo_create_temp_orders_table, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[09-Jul-2025 19:05:50 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE INDEX aieo_idx_brandid_orders ON wp_aieo_temp_orders_table  (BrandId);</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createIndex"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('CREATE INDEX ai...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('CREATE INDEX ai...')
#4 /wordpress/wp-content/plugins/ai-eshop-optimizer/includes/sql/sprocs.php(160): WP_SQLite_DB->query('CREATE INDEX ai...')
#5 /wordpress/wp-content/plugins/ai-eshop-optimizer/ai-eshop-optimizer.php(157): aieo_create_temp_orders_table('wp_aieo_temp_or...')
#6 /wordpress/wp-includes/class-wp-hook.php(324): aieo_create_temp_tables_activation_hook(false)
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_ai-esh...', false)
#10 /internal/eval.php(20): activate_plugin('ai-eshop-optimi...')
#11 {main}</pre>
 for query CREATE INDEX aieo_idx_brandid_orders ON wp_aieo_temp_orders_table  (BrandId); made by activate_plugin, do_action('activate_ai-eshop-optimizer/ai-eshop-optimizer.php'), WP_Hook->do_action, WP_Hook->apply_filters, aieo_create_temp_tables_activation_hook, aieo_create_temp_orders_table, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[09-Jul-2025 19:05:50 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE INDEX aieo_idx_eponymousid_orders ON wp_aieo_temp_orders_table  (EponymousID);</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createIndex"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('CREATE INDEX ai...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('CREATE INDEX ai...')
#4 /wordpress/wp-content/plugins/ai-eshop-optimizer/includes/sql/sprocs.php(160): WP_SQLite_DB->query('CREATE INDEX ai...')
#5 /wordpress/wp-content/plugins/ai-eshop-optimizer/ai-eshop-optimizer.php(157): aieo_create_temp_orders_table('wp_aieo_temp_or...')
#6 /wordpress/wp-includes/class-wp-hook.php(324): aieo_create_temp_tables_activation_hook(false)
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_ai-esh...', false)
#10 /internal/eval.php(20): activate_plugin('ai-eshop-optimi...')
#11 {main}</pre>
 for query CREATE INDEX aieo_idx_eponymousid_orders ON wp_aieo_temp_orders_table  (EponymousID); made by activate_plugin, do_action('activate_ai-eshop-optimizer/ai-eshop-optimizer.php'), WP_Hook->do_action, WP_Hook->apply_filters, aieo_create_temp_tables_activation_hook, aieo_create_temp_orders_table, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[09-Jul-2025 19:05:51 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE INDEX aieo_idx_productid_products ON wp_aieo_temp_product_catalogue_table  (ProductId);</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createIndex"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('CREATE INDEX ai...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('CREATE INDEX ai...')
#4 /wordpress/wp-content/plugins/ai-eshop-optimizer/includes/sql/sprocs.php(316): WP_SQLite_DB->query('CREATE INDEX ai...')
#5 /wordpress/wp-content/plugins/ai-eshop-optimizer/ai-eshop-optimizer.php(158): aieo_create_temp_products_table('wp_aieo_temp_pr...')
#6 /wordpress/wp-includes/class-wp-hook.php(324): aieo_create_temp_tables_activation_hook(false)
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_ai-esh...', false)
#10 /internal/eval.php(20): activate_plugin('ai-eshop-optimi...')
#11 {main}</pre>
 for query CREATE INDEX aieo_idx_productid_products ON wp_aieo_temp_product_catalogue_table  (ProductId); made by activate_plugin, do_action('activate_ai-eshop-optimizer/ai-eshop-optimizer.php'), WP_Hook->do_action, WP_Hook->apply_filters, aieo_create_temp_tables_activation_hook, aieo_create_temp_products_table, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[09-Jul-2025 19:05:51 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE INDEX aieo_idx_parentproductid_products ON wp_aieo_temp_product_catalogue_table  (ParentProductId);</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createIndex"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('CREATE INDEX ai...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('CREATE INDEX ai...')
#4 /wordpress/wp-content/plugins/ai-eshop-optimizer/includes/sql/sprocs.php(316): WP_SQLite_DB->query('CREATE INDEX ai...')
#5 /wordpress/wp-content/plugins/ai-eshop-optimizer/ai-eshop-optimizer.php(158): aieo_create_temp_products_table('wp_aieo_temp_pr...')
#6 /wordpress/wp-includes/class-wp-hook.php(324): aieo_create_temp_tables_activation_hook(false)
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_ai-esh...', false)
#10 /internal/eval.php(20): activate_plugin('ai-eshop-optimi...')
#11 {main}</pre>
 for query CREATE INDEX aieo_idx_parentproductid_products ON wp_aieo_temp_product_catalogue_table  (ParentProductId); made by activate_plugin, do_action('activate_ai-eshop-optimizer/ai-eshop-optimizer.php'), WP_Hook->do_action, WP_Hook->apply_filters, aieo_create_temp_tables_activation_hook, aieo_create_temp_products_table, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[09-Jul-2025 19:05:51 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE INDEX aieo_idx_brandid_products ON wp_aieo_temp_product_catalogue_table  (BrandId);</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createIndex"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('CREATE INDEX ai...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('CREATE INDEX ai...')
#4 /wordpress/wp-content/plugins/ai-eshop-optimizer/includes/sql/sprocs.php(316): WP_SQLite_DB->query('CREATE INDEX ai...')
#5 /wordpress/wp-content/plugins/ai-eshop-optimizer/ai-eshop-optimizer.php(158): aieo_create_temp_products_table('wp_aieo_temp_pr...')
#6 /wordpress/wp-includes/class-wp-hook.php(324): aieo_create_temp_tables_activation_hook(false)
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_ai-esh...', false)
#10 /internal/eval.php(20): activate_plugin('ai-eshop-optimi...')
#11 {main}</pre>
 for query CREATE INDEX aieo_idx_brandid_products ON wp_aieo_temp_product_catalogue_table  (BrandId); made by activate_plugin, do_action('activate_ai-eshop-optimizer/ai-eshop-optimizer.php'), WP_Hook->do_action, WP_Hook->apply_filters, aieo_create_temp_tables_activation_hook, aieo_create_temp_products_table, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[09-Jul-2025 19:05:51 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE PROCEDURE wp_AIEO_UpdateOrdersWithUnsold(OUT warning_message VARCHAR(255))
proc_label: BEGIN

  -- Check if the orders table is empty
  IF (SELECT COUNT(*) FROM wp_aieo_temp_orders_table) = 0 THEN
      SET warning_message = CONCAT('Warning: ', 'wp_aieo_temp_orders_table', ' is empty. The operation cannot proceed.');
      LEAVE proc_label;
  END IF;

  START TRANSACTION;

  -- INSERT Operation
  INSERT INTO wp_aieo_temp_orders_table 
  (OrderStatus, SKU, ProductId, ParentProductId, CategoryId, TagId, CurrentPrice, CurrentRegularPrice, Stock, ItemName, ParentItemName, Brand, CategoryName, TagName, ContentIntro, ContentIntroPlain, ContentCreated, ContentLastUpdated)
  SELECT 
  st.OrderStatus, st.SKU, st.ProductId, st.ParentProductId, st.CategoryId, st.TagId, 
  st.CurrentPrice, st.CurrentRegularPrice, st.Stock, st.ItemName, st.ParentItemName, 
  st.Brand, st.CategoryName, st.TagName, st.ContentIntro, st.ContentIntroPlain, 
  st.ContentCreated, st.ContentLastUpdated
  FROM wp_aieo_temp_product_catalogue_table st
  LEFT JOIN wp_aieo_temp_orders_table atot ON atot.ProductId = st.ProductId
  WHERE atot.ProductId IS NULL;

  -- UPDATE Operation
  UPDATE wp_aieo_temp_orders_table atot
  JOIN wp_aieo_temp_product_catalogue_table st
  ON atot.ProductId = st.ProductId
  SET 
  atot.PPIdGraphUUID = st.PPIdGraphUUID,
  atot.ProdIdGraphUUID = st.ProdIdGraphUUID;

  COMMIT;

  -- Set the success message
  SET warning_message = ', and included the products that have no sales';

END;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createProcedure"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('CREATE PROCEDUR...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('CREATE PROCEDUR...')
#4 /wordpress/wp-content/plugins/ai-eshop-optimizer/includes/sql/sprocs.php(1155): WP_SQLite_DB->query('CREATE PROCEDUR...')
#5 /wordpress/wp-content/plugins/ai-eshop-optimizer/ai-eshop-optimizer.php(170): aieo_create_sp_AIEO_UpdateOrdersWithUnsold('wp_', 'wp_aieo_temp_or...', 'wp_aieo_temp_pr...')
#6 /wordpress/wp-includes/class-wp-hook.php(324): aieo_create_stored_procedures(false)
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_ai-esh...', false)
#10 /internal/eval.php(20): activate_plugin('ai-eshop-optimi...')
#11 {main}</pre>
 for query CREATE PROCEDURE wp_AIEO_UpdateOrdersWithUnsold(OUT warning_message VARCHAR(255))
proc_label: BEGIN

  -- Check if the orders table is empty
  IF (SELECT COUNT(*) FROM wp_aieo_temp_orders_table) = 0 THEN
      SET warning_message = CONCAT('Warning: ', 'wp_aieo_temp_orders_table', ' is empty. The operation cannot proceed.');
      LEAVE proc_label;
  END IF;

  START TRANSACTION;

  -- INSERT Operation
  INSERT INTO wp_aieo_temp_orders_table 
  (OrderStatus, SKU, ProductId, ParentProductId, CategoryId, TagId, CurrentPrice, CurrentRegularPrice, Stock, ItemName, ParentItemName, Brand, CategoryName, TagName, ContentIntro, ContentIntroPlain, ContentCreated, ContentLastUpdated)
  SELECT 
  st.OrderStatus, st.SKU, st.ProductId, st.ParentProductId, st.CategoryId, st.TagId, 
  st.CurrentPrice, st.CurrentRegularPrice, st.Stock, st.ItemName, st.ParentItemName, 
  st.Brand, st.CategoryName, st.TagName, st.ContentIntro, st.ContentIntroPlain, 
  st.ContentCreated, st.ContentLastUpdated
  FROM wp_aieo_temp_product_catalogue_table st
  LEFT JOIN wp_aieo_temp_orders_table atot ON atot.ProductId = st.ProductId
  WHERE atot.ProductId IS NULL;

  -- UPDATE Operation
  UPDATE wp_aieo_temp_orders_table atot
  JOIN wp_aieo_temp_product_catalogue_table st
  ON atot.ProductId = st.ProductId
  SET 
  atot.PPIdGraphUUID = st.PPIdGraphUUID,
  atot.ProdIdGraphUUID = st.ProdIdGraphUUID;

  COMMIT;

  -- Set the success message
  SET warning_message = ', and included the products that have no sales';

END; made by activate_plugin, do_action('activate_ai-eshop-optimizer/ai-eshop-optimizer.php'), WP_Hook->do_action, WP_Hook->apply_filters, aieo_create_stored_procedures, aieo_create_sp_AIEO_UpdateOrdersWithUnsold, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[09-Jul-2025 19:05:51 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE PROCEDURE wp_AIEO_FindDifferences(IN in_table_name VARCHAR(255))
    DETERMINISTIC READS SQL DATA
    BEGIN
        -- Variables declaration
        DECLARE v_sql TEXT;
        DECLARE v_diff_part TEXT DEFAULT '';
        DECLARE v_word_count_parent INT DEFAULT 0;
        DECLARE v_word_count_item INT DEFAULT 0;
        DECLARE v_iter INT DEFAULT 1;
    
        -- Calculate word count of the ParentItemName for one record as an example.
        SET @v_sql = CONCAT('SELECT ROUND((CHAR_LENGTH(ParentItemName) - CHAR_LENGTH(REPLACE(ParentItemName, '' '', ''''))) / CHAR_LENGTH('' '') + 1) INTO @v_word_count_temp FROM ', in_table_name, ' LIMIT 1');
        PREPARE stmt1 FROM @v_sql;
        EXECUTE stmt1;
        DEALLOCATE PREPARE stmt1;
    
        -- Calculate word count of the ItemName for the same record.
        SET @v_sql = CONCAT('SELECT ROUND((CHAR_LENGTH(ItemName) - CHAR_LENGTH(REPLACE(ItemName, '' '', ''''))) / CHAR_LENGTH('' '') + 1) INTO @v_word_count_temp_item FROM ', in_table_name, ' LIMIT 1');
        PREPARE stmt2 FROM @v_sql;
        EXECUTE stmt2;
        DEALLOCATE PREPARE stmt2;
    
        SET v_word_count_parent = @v_word_count_temp;
        SET v_word_count_item = @v_word_count_temp_item;
    
        -- Construct the column of differing words from ParentItemName not in ItemName
        WHILE v_iter <= v_word_count_parent DO
            SET v_diff_part = CONCAT(v_diff_part, 'IF(ItemName NOT LIKE CONCAT(''%'', SUBSTRING_INDEX(SUBSTRING_INDEX(ParentItemName, '' '', ', v_iter, '), '' '', -1), ''%''), CONCAT(SUBSTRING_INDEX(SUBSTRING_INDEX(ParentItemName, '' '', ', v_iter, '), '' '', -1), '' ''), '''')', ',');
            SET v_iter = v_iter + 1;
        END WHILE;
    
        SET v_iter = 1;
    
        -- Construct the column of differing words from ItemName not in ParentItemName
        WHILE v_iter <= v_word_count_item DO
            SET v_diff_part = CONCAT(v_diff_part, 'IF(ParentItemName NOT LIKE CONCAT(''%'', SUBSTRING_INDEX(SUBSTRING_INDEX(ItemName, '' '', ', v_iter, '), '' '', -1), ''%''), CONCAT(SUBSTRING_INDEX(SUBSTRING_INDEX(ItemName, '' '', ', v_iter, '), '' '', -1), '' ''), '''')', ',');
            SET v_iter = v_iter + 1;
        END WHILE;
    
        -- Trim the last comma
        SET v_diff_part = LEFT(v_diff_part, CHAR_LENGTH(v_diff_part) - 1);
    
        -- Begin the construction of the dynamic SQL statement to update ItemNameDiff
        SET @v_sql = CONCAT('UPDATE ', in_table_name, ' SET ItemNameDiff = REPLACE(TRIM(CONCAT_WS('' '', ', v_diff_part, ')), ''  '', '' '')');
    
        -- Execute the dynamic SQL
        PREPARE dynamic_statement FROM @v_sql;
        EXECUTE dynamic_statement;
        DEALLOCATE PREPARE dynamic_statement;
    END;
    </p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createProcedure"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('CREATE PROCEDUR...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('CREATE PROCEDUR...')
#4 /wordpress/wp-content/plugins/ai-eshop-optimizer/includes/sql/sprocs.php(1442): WP_SQLite_DB->query('CREATE PROCEDUR...')
#5 /wordpress/wp-content/plugins/ai-eshop-optimizer/ai-eshop-optimizer.php(171): aieo_create_sp_AIEO_FindDifferences('wp_')
#6 /wordpress/wp-includes/class-wp-hook.php(324): aieo_create_stored_procedures(false)
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_ai-esh...', false)
#10 /internal/eval.php(20): activate_plugin('ai-eshop-optimi...')
#11 {main}</pre>
 for query CREATE PROCEDURE wp_AIEO_FindDifferences(IN in_table_name VARCHAR(255))
    DETERMINISTIC READS SQL DATA
    BEGIN
        -- Variables declaration
        DECLARE v_sql TEXT;
        DECLARE v_diff_part TEXT DEFAULT '';
        DECLARE v_word_count_parent INT DEFAULT 0;
        DECLARE v_word_count_item INT DEFAULT 0;
        DECLARE v_iter INT DEFAULT 1;
    
        -- Calculate word count of the ParentItemName for one record as an example.
        SET @v_sql = CONCAT('SELECT ROUND((CHAR_LENGTH(ParentItemName) - CHAR_LENGTH(REPLACE(ParentItemName, '' '', ''''))) / CHAR_LENGTH('' '') + 1) INTO @v_word_count_temp FROM ', in_table_name, ' LIMIT 1');
        PREPARE stmt1 FROM @v_sql;
        EXECUTE stmt1;
        DEALLOCATE PREPARE stmt1;
    
        -- Calculate word count of the ItemName for the same record.
        SET @v_sql = CONCAT('SELECT ROUND((CHAR_LENGTH(ItemName) - CHAR_LENGTH(REPLACE(ItemName, '' '', ''''))) / CHAR_LENGTH('' '') + 1) INTO @v_word_count_temp_item FROM ', in_table_name, ' LIMIT 1');
        PREPARE stmt2 FROM @v_sql;
        EXECUTE stmt2;
        DEALLOCATE PREPARE stmt2;
    
        SET v_word_count_parent = @v_word_count_temp;
        SET v_word_count_item = @v_word_count_temp_item;
    
        -- Construct the column of differing words from ParentItemName not in ItemName
        WHILE v_iter <= v_word_count_parent DO
            SET v_diff_part = CONCAT(v_diff_part, 'IF(ItemName NOT LIKE CONCAT(''%'', SUBSTRING_INDEX(SUBSTRING_INDEX(ParentItemName, '' '', ', v_iter, '), '' '', -1), ''%''), CONCAT(SUBSTRING_INDEX(SUBSTRING_INDEX(ParentItemName, '' '', ', v_iter, '), '' '', -1), '' ''), '''')', ',');
            SET v_iter = v_iter + 1;
        END WHILE;
    
        SET v_iter = 1;
    
        -- Construct the column of differing words from ItemName not in ParentItemName
        WHILE v_iter <= v_word_count_item DO
            SET v_diff_part = CONCAT(v_diff_part, 'IF(ParentItemName NOT LIKE CONCAT(''%'', SUBSTRING_INDEX(SUBSTRING_INDEX(ItemName, '' '', ', v_iter, '), '' '', -1), ''%''), CONCAT(SUBSTRING_INDEX(SUBSTRING_INDEX(ItemName, '' '', ', v_iter, '), '' '', -1), '' ''), '''')', ',');
            SET v_iter = v_iter + 1;
        END WHILE;
    
        -- Trim the last comma
        SET v_diff_part = LEFT(v_diff_part, CHAR_LENGTH(v_diff_part) - 1);
    
        -- Begin the construction of the dynamic SQL statement to update ItemNameDiff
        SET @v_sql = CONCAT('UPDATE ', in_table_name, ' SET ItemNameDiff = REPLACE(TRIM(CONCAT_WS('' '', ', v_diff_part, ')), ''  '', '' '')');
    
        -- Execute the dynamic SQL
        PREPARE dynamic_statement FROM @v_sql;
        EXECUTE dynamic_statement;
        DEALLOCATE PREPARE dynamic_statement;
    END;
     made by activate_plugin, do_action('activate_ai-eshop-optimizer/ai-eshop-optimizer.php'), WP_Hook->do_action, WP_Hook->apply_filters, aieo_create_stored_procedures, aieo_create_sp_AIEO_FindDifferences, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[09-Jul-2025 19:05:51 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE PROCEDURE wp_AIEO_Create_Product_Catalogue_HPOS(
    IN _price_sql_choice INT, 
    IN _text_sql_choice INT,
    IN _full_text_sql_choice INT
     
  ) BEGIN 
  TRUNCATE TABLE wp_aieo_temp_product_catalogue_table;
  INSERT INTO wp_aieo_temp_product_catalogue_table 
  (OrderId, OrderStatus, SKU, ProductId, ParentProductId, CategoryId, TagId, Stock, CurrentPrice, CurrentRegularPrice, ItemName, ParentItemName, 
  ProfitabilityIndex, Brand, ContentIntro, ContentIntroPlain, ContentCreated, ContentLastUpdated, 
  CategoryName, TagName, Seasonality, ProdIdGraphUUID, PPIdGraphUUID)  
  SELECT DISTINCT
    '0' as OrderId, 
    'unsold' as OrderStatus,
    (
      CASE WHEN _text_sql_choice = 0 THEN '' ELSE  COALESCE(psku.meta_value, '')  END) as SKU,
    pmp.ID as ProductId, 
    CASE 
        WHEN pmp.post_type = 'product_variation' THEN pmp.post_parent 
        ELSE pmp.ID 
    END as ParentProductId,
    COALESCE(pc.category_ids, '') as CategoryId, 
    COALESCE(pt.tag_ids, '') AS TagId,
    COALESCE(pstock.meta_value, '') as Stock,
( 
  CASE 
  WHEN _price_sql_choice = 0 THEN '' 
  ELSE 
    CASE 
      WHEN pm_price.meta_value IS NOT NULL AND pm_price.meta_value REGEXP '^[0-9.]+$' THEN CONVERT(pm_price.meta_value, DECIMAL(7, 2)) 
      ELSE NULL 
    END 
END
) AS CurrentPrice,

(
CASE 
  WHEN _price_sql_choice = 0 THEN '' 
  ELSE 
    CASE 
      WHEN pm_regular_price.meta_value IS NOT NULL AND pm_regular_price.meta_value REGEXP '^[0-9.]+$' THEN CONVERT(pm_regular_price.meta_value, DECIMAL(7, 2)) 
      ELSE NULL 
    END
END
) AS CurrentRegularPrice,
    (
      CASE WHEN _text_sql_choice = 0 THEN '' ELSE pmp.post_title END) as ItemName,
      (
      CASE WHEN _text_sql_choice = 0 THEN '' ELSE  COALESCE(parent.post_title, pmp.post_title) END) as ParentItemName,
    '1' as ProfitabilityIndex, 
    '' as Brand,
      (
      CASE WHEN _full_text_sql_choice = 0 THEN '' ELSE COALESCE(parent.post_content, pmp.post_content) END) as ContentIntro,
      (
      CASE WHEN _full_text_sql_choice = 0 THEN '' ELSE COALESCE(parent.post_content, pmp.post_content) END) as ContentIntroPlain,
     
    pmp.post_date_gmt AS ContentCreated,
    pmp.post_modified_gmt AS ContentLastUpdated, 
    (
      CASE WHEN _text_sql_choice = 0 THEN '' ELSE COALESCE(pc.category_names, '') END ) AS CategoryName,
      (
      CASE WHEN _text_sql_choice = 0 THEN '' ELSE  COALESCE(pt.tag_names, '') END ) AS TagName, 
      '0' as Seasonality,
        UUID() as ProdIdGraphUUID,  -- UUID generation for ProductId
        (CASE 
            WHEN pmp.post_type = 'product_variation' THEN (SELECT UUID() FROM wp_posts WHERE ID = pmp.post_parent LIMIT 1) 
            ELSE UUID()
        END) as PPIdGraphUUID  -- UUID generation for ParentProductId
    FROM 
(
    SELECT DISTINCT
        pmp.ID as ProductId,
        CASE 
            WHEN pmp.post_type = 'product_variation' THEN pmp.post_parent 
            ELSE pmp.ID 
        END as ParentProductId
    FROM 
        wp_posts pmp
    WHERE 
        pmp.post_type IN ('product', 'product_variation')
) AS derivedTable

JOIN wp_posts pmp ON derivedTable.ProductId = pmp.ID
LEFT JOIN wp_posts parent ON pmp.post_parent = parent.ID

LEFT JOIN wp_postmeta AS psku 
ON psku.post_id = CASE 
                     WHEN pmp.post_type = 'product_variation' THEN pmp.ID 
                     ELSE parent.ID 
                  END 
AND psku.meta_key = '_sku'

-- Join for Price
LEFT JOIN wp_postmeta AS pm_price 
ON pmp.ID = pm_price.post_id 
AND pm_price.meta_key = '_price'

-- Join for Regular Price
LEFT JOIN wp_postmeta AS pm_regular_price 
ON pmp.ID = pm_regular_price.post_id 
AND pm_regular_price.meta_key = '_regular_price'


-- Join for Stock
LEFT JOIN wp_postmeta AS pstock 
ON pmp.ID = pstock.post_id 
AND pstock.meta_key = '_stock'


LEFT JOIN (
SELECT 
    tr.object_id AS product_id, 
    GROUP_CONCAT(t.term_id ORDER BY t.term_id ASC) AS category_ids, 
    GROUP_CONCAT(t.name ORDER BY t.term_id ASC) AS category_names 
FROM 
   wp_term_relationships tr 
JOIN wp_term_taxonomy tt ON tr.term_taxonomy_id = tt.term_taxonomy_id AND tt.taxonomy = 'product_cat' 
JOIN wp_terms t ON tt.term_id = t.term_id 
GROUP BY 
    tr.object_id
) AS pc ON (pc.product_id = pmp.ID OR pc.product_id = parent.ID)

LEFT JOIN (
SELECT 
    tr.object_id AS product_id, 
    GROUP_CONCAT(t.term_id ORDER BY t.term_id ASC) AS tag_ids, 
    GROUP_CONCAT(t.name ORDER BY t.term_id ASC) AS tag_names 
FROM 
   wp_term_relationships tr 
JOIN wp_term_taxonomy tt ON tr.term_taxonomy_id = tt.term_taxonomy_id AND tt.taxonomy = 'product_tag' 
JOIN wp_terms t ON tt.term_id = t.term_id 
GROUP BY 
    tr.object_id
) AS pt ON (pt.product_id = pmp.ID OR pt.product_id = parent.ID)
-- Now, move the WHERE condition here:
WHERE NOT (
  pmp.post_type = 'product' 
  AND derivedTable.ProductId = derivedTable.ParentProductId
  AND EXISTS (
    SELECT 1 FROM wp_posts pmp_var 
    WHERE pmp_var.post_parent = derivedTable.ParentProductId 
    AND pmp_var.post_type = 'product_variation'
  )
)
ORDER BY pmp.ID;
      END;       
    </p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createProcedure"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('CREATE PROCEDUR...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('CREATE PROCEDUR...')
#4 /wordpress/wp-content/plugins/ai-eshop-optimizer/includes/sql/sprocs.php(1597): WP_SQLite_DB->query('CREATE PROCEDUR...')
#5 /wordpress/wp-content/plugins/ai-eshop-optimizer/ai-eshop-optimizer.php(172): aieo_create_sp_AIEO_Create_Product_Catalogue_HPOS('wp_', 'wp_aieo_temp_pr...')
#6 /wordpress/wp-includes/class-wp-hook.php(324): aieo_create_stored_procedures(false)
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_ai-esh...', false)
#10 /internal/eval.php(20): activate_plugin('ai-eshop-optimi...')
#11 {main}</pre>
 for query CREATE PROCEDURE wp_AIEO_Create_Product_Catalogue_HPOS(
    IN _price_sql_choice INT, 
    IN _text_sql_choice INT,
    IN _full_text_sql_choice INT
     
  ) BEGIN 
  TRUNCATE TABLE wp_aieo_temp_product_catalogue_table;
  INSERT INTO wp_aieo_temp_product_catalogue_table 
  (OrderId, OrderStatus, SKU, ProductId, ParentProductId, CategoryId, TagId, Stock, CurrentPrice, CurrentRegularPrice, ItemName, ParentItemName, 
  ProfitabilityIndex, Brand, ContentIntro, ContentIntroPlain, ContentCreated, ContentLastUpdated, 
  CategoryName, TagName, Seasonality, ProdIdGraphUUID, PPIdGraphUUID)  
  SELECT DISTINCT
    '0' as OrderId, 
    'unsold' as OrderStatus,
    (
      CASE WHEN _text_sql_choice = 0 THEN '' ELSE  COALESCE(psku.meta_value, '')  END) as SKU,
    pmp.ID as ProductId, 
    CASE 
        WHEN pmp.post_type = 'product_variation' THEN pmp.post_parent 
        ELSE pmp.ID 
    END as ParentProductId,
    COALESCE(pc.category_ids, '') as CategoryId, 
    COALESCE(pt.tag_ids, '') AS TagId,
    COALESCE(pstock.meta_value, '') as Stock,
( 
  CASE 
  WHEN _price_sql_choice = 0 THEN '' 
  ELSE 
    CASE 
      WHEN pm_price.meta_value IS NOT NULL AND pm_price.meta_value REGEXP '^[0-9.]+$' THEN CONVERT(pm_price.meta_value, DECIMAL(7, 2)) 
      ELSE NULL 
    END 
END
) AS CurrentPrice,

(
CASE 
  WHEN _price_sql_choice = 0 THEN '' 
  ELSE 
    CASE 
      WHEN pm_regular_price.meta_value IS NOT NULL AND pm_regular_price.meta_value REGEXP '^[0-9.]+$' THEN CONVERT(pm_regular_price.meta_value, DECIMAL(7, 2)) 
      ELSE NULL 
    END
END
) AS CurrentRegularPrice,
    (
      CASE WHEN _text_sql_choice = 0 THEN '' ELSE pmp.post_title END) as ItemName,
      (
      CASE WHEN _text_sql_choice = 0 THEN '' ELSE  COALESCE(parent.post_title, pmp.post_title) END) as ParentItemName,
    '1' as ProfitabilityIndex, 
    '' as Brand,
      (
      CASE WHEN _full_text_sql_choice = 0 THEN '' ELSE COALESCE(parent.post_content, pmp.post_content) END) as ContentIntro,
      (
      CASE WHEN _full_text_sql_choice = 0 THEN '' ELSE COALESCE(parent.post_content, pmp.post_content) END) as ContentIntroPlain,
     
    pmp.post_date_gmt AS ContentCreated,
    pmp.post_modified_gmt AS ContentLastUpdated, 
    (
      CASE WHEN _text_sql_choice = 0 THEN '' ELSE COALESCE(pc.category_names, '') END ) AS CategoryName,
      (
      CASE WHEN _text_sql_choice = 0 THEN '' ELSE  COALESCE(pt.tag_names, '') END ) AS TagName, 
      '0' as Seasonality,
        UUID() as ProdIdGraphUUID,  -- UUID generation for ProductId
        (CASE 
            WHEN pmp.post_type = 'product_variation' THEN (SELECT UUID() FROM wp_posts WHERE ID = pmp.post_parent LIMIT 1) 
            ELSE UUID()
        END) as PPIdGraphUUID  -- UUID generation for ParentProductId
    FROM 
(
    SELECT DISTINCT
        pmp.ID as ProductId,
        CASE 
            WHEN pmp.post_type = 'product_variation' THEN pmp.post_parent 
            ELSE pmp.ID 
        END as ParentProductId
    FROM 
        wp_posts pmp
    WHERE 
        pmp.post_type IN ('product', 'product_variation')
) AS derivedTable

JOIN wp_posts pmp ON derivedTable.ProductId = pmp.ID
LEFT JOIN wp_posts parent ON pmp.post_parent = parent.ID

LEFT JOIN wp_postmeta AS psku 
ON psku.post_id = CASE 
                     WHEN pmp.post_type = 'product_variation' THEN pmp.ID 
                     ELSE parent.ID 
                  END 
AND psku.meta_key = '_sku'

-- Join for Price
LEFT JOIN wp_postmeta AS pm_price 
ON pmp.ID = pm_price.post_id 
AND pm_price.meta_key = '_price'

-- Join for Regular Price
LEFT JOIN wp_postmeta AS pm_regular_price 
ON pmp.ID = pm_regular_price.post_id 
AND pm_regular_price.meta_key = '_regular_price'


-- Join for Stock
LEFT JOIN wp_postmeta AS pstock 
ON pmp.ID = pstock.post_id 
AND pstock.meta_key = '_stock'


LEFT JOIN (
SELECT 
    tr.object_id AS product_id, 
    GROUP_CONCAT(t.term_id ORDER BY t.term_id ASC) AS category_ids, 
    GROUP_CONCAT(t.name ORDER BY t.term_id ASC) AS category_names 
FROM 
   wp_term_relationships tr 
JOIN wp_term_taxonomy tt ON tr.term_taxonomy_id = tt.term_taxonomy_id AND tt.taxonomy = 'product_cat' 
JOIN wp_terms t ON tt.term_id = t.term_id 
GROUP BY 
    tr.object_id
) AS pc ON (pc.product_id = pmp.ID OR pc.product_id = parent.ID)

LEFT JOIN (
SELECT 
    tr.object_id AS product_id, 
    GROUP_CONCAT(t.term_id ORDER BY t.term_id ASC) AS tag_ids, 
    GROUP_CONCAT(t.name ORDER BY t.term_id ASC) AS tag_names 
FROM 
   wp_term_relationships tr 
JOIN wp_term_taxonomy tt ON tr.term_taxonomy_id = tt.term_taxonomy_id AND tt.taxonomy = 'product_tag' 
JOIN wp_terms t ON tt.term_id = t.term_id 
GROUP BY 
    tr.object_id
) AS pt ON (pt.product_id = pmp.ID OR pt.product_id = parent.ID)
-- Now, move the WHERE condition here:
WHERE NOT (
  pmp.post_type = 'product' 
  AND derivedTable.ProductId = derivedTable.ParentProductId
  AND EXISTS (
    SELECT 1 FROM wp_posts pmp_var 
    WHERE pmp_var.post_parent = derivedTable.ParentProductId 
    AND pmp_var.post_type = 'product_variation'
  )
)
ORDER BY pmp.ID;
      END;       
     made by activate_plugin, do_action('activate_ai-eshop-optimizer/ai-eshop-optimizer.php'), WP_Hook->do_action, WP_Hook->apply_filters, aieo_create_stored_procedures, aieo_create_sp_AIEO_Create_Product_Catalogue_HPOS, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[09-Jul-2025 19:05:51 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE PROCEDURE wp_AIEO_Export_Orders_HPOS(
    IN _price_sql_choice INT, 
    IN _text_sql_choice INT, 
    IN _full_text_sql_choice INT,
    IN _eponymous_sql_choice INT, 
    IN _seasonality_sql_choice INT, 
    IN _order_id INT, 
    IN _max_records INT
  ) BEGIN 
  TRUNCATE TABLE wp_aieo_temp_orders_table;
  INSERT INTO wp_aieo_temp_orders_table
  (OrderIdGraphUUID, OrderItemIdGraphUUID, PPIdGraphUUID, ProdIdGraphUUID, EpoIdGraphUUID, O_PP_GraphUUID,O_Prod_GraphUUID, 
  O_Epo_GraphUUID, PP_Epo_GraphUUID, Prod_Epo_GraphUUID, OrderId, OrderStatus, SKU,  ProductId, ParentProductId, CategoryId, TagId, OrderDate, PrimaryQty, ItemSequence, Stock, OrderSize, 
    JourneyLinearWeight, AnonymousWeight, Price, LineValue, OrderItemsTotal, ValueLinearWeight, CurrentPrice, CurrentRegularPrice, ItemName,  ParentItemName, ItemNameDiff, 
    ProfitabilityIndex, Brand, ContentIntro, ContentIntroPlain, ContentCreated, ContentLastUpdated, 
    CategoryName, TagName, EponymousID, Seasonality)
    SELECT 
    UUID() AS OrderIdGraphUUID, 
    MD5(CONCAT(o.id)) AS OrderItemIdGraphUUID,
    MD5(CONCAT(COALESCE(oimp.meta_value, ''))) AS PPIdGraphUUID,
    MD5(CONCAT(COALESCE(CASE WHEN oimpv.meta_value = 0 THEN oimp.meta_value ELSE oimpv.meta_value END, ''))) AS ProdIdGraphUUID,
    CASE 
    WHEN _eponymous_sql_choice = 0 OR o.customer_id = 0 THEN NULL
    ELSE MD5(CONCAT(o.customer_id))
END AS EpoIdGraphUUID,

    MD5(CONCAT(COALESCE(oimp.meta_value, ''), o.id)) AS O_PP_GraphUUID,
    MD5(CONCAT(COALESCE(CASE WHEN oimpv.meta_value = 0 THEN oimp.meta_value ELSE oimpv.meta_value END, ''), o.id)) AS O_Prod_GraphUUID,
    
    CASE 
    WHEN _eponymous_sql_choice = 0 OR o.customer_id = 0 THEN NULL
    ELSE MD5(CONCAT(o.id, o.customer_id))
END AS O_Epo_GraphUUID,

CASE 
    WHEN _eponymous_sql_choice = 0 OR o.customer_id = 0 THEN NULL
    ELSE MD5(CONCAT(COALESCE(oimp.meta_value, ''), o.customer_id))
END AS PP_Epo_GraphUUID,

CASE 
    WHEN _eponymous_sql_choice = 0 OR o.customer_id = 0 THEN NULL
    ELSE MD5(CONCAT(COALESCE(CASE WHEN oimpv.meta_value = 0 THEN oimp.meta_value ELSE oimpv.meta_value END, ''), o.customer_id))
END AS Prod_Epo_GraphUUID,
    
    o.id as OrderId, 
      o.status as OrderStatus, 
    CASE WHEN _text_sql_choice = 0 THEN '' ELSE COALESCE(psku.meta_value, '') END AS SKU, 
      COALESCE(
          CASE WHEN oimpv.meta_value = 0 THEN oimp.meta_value ELSE oimpv.meta_value END, ''
      ) AS ProductId, 
      COALESCE(oimp.meta_value, '') AS ParentProductId,
      COALESCE(pc.category_ids, '') as CategoryId, 
      COALESCE(pt.tag_ids, '') AS TagId, 
      o.date_created_gmt as OrderDate, 
      COALESCE(CONVERT(oimq.meta_value, decimal(3, 0)), '') as PrimaryQty, 
      ROW_NUMBER() OVER (PARTITION BY o.id ORDER BY oi.order_item_id) as ItemSequence, 
      COALESCE(pstock.meta_value, '') as Stock,
      os.OrderSize, 
      ROW_NUMBER() OVER (PARTITION BY o.id ORDER BY oi.order_item_id) / os.OrderSize as JourneyLinearWeight, 
      CASE WHEN _eponymous_sql_choice = 0 THEN '0' ELSE '1' END AS AnonymousWeight,
      (CASE WHEN _price_sql_choice = 0 THEN '' ELSE convert(
              
                oims.meta_value 
              / oimq.meta_value,
              decimal(5, 2)
          ) END ) as Price, 
      (CASE WHEN _price_sql_choice = 0 THEN '' ELSE  convert(
              oims.meta_value, 
              decimal(7, 2)
          
          ) END ) as LineValue, 
          
          ( CASE WHEN _price_sql_choice = 0 THEN '' ELSE convert(o.total_amount , 
          decimal(7, 2)) END )   as OrderItemsTotal,
          ( CASE WHEN _price_sql_choice = 0 THEN '' ELSE 
          convert(oims.meta_value / o.total_amount , 
              decimal(7, 2)) END )   as ValueLinearWeight, 
              (
    CASE 
      WHEN _price_sql_choice = 0 THEN '' 
      ELSE (
        CASE 
          WHEN pm_price.meta_value REGEXP '^[0-9.]+$' THEN CONVERT(pm_price.meta_value, DECIMAL(7, 2)) 
          ELSE NULL 
        END 
      ) 
  END
  ) AS CurrentPrice,  
  (
    CASE 
      WHEN _price_sql_choice = 0 THEN '' 
      ELSE (
        CASE 
          WHEN pm_regular_price.meta_value REGEXP '^[0-9.]+$' THEN CONVERT(pm_regular_price.meta_value, DECIMAL(7, 2)) 
          ELSE NULL 
        END
      ) 
  END
) AS CurrentRegularPrice,
          (
            CASE WHEN _text_sql_choice = 0 THEN '' ELSE 
          
            oi.order_item_name END) as ItemName, 
            (
            CASE WHEN _text_sql_choice = 0 THEN '' ELSE  (
              CASE WHEN oimpv.meta_value = 0 THEN oi.order_item_name ELSE pmp.post_title END
            ) END ) as ParentItemName, 
            (
            CASE WHEN _text_sql_choice = 0 THEN '' ELSE '' END ) as ItemNameDiff, 
  
  '1' as ProfitabilityIndex,
  '' AS Brand,
       (
            CASE WHEN _full_text_sql_choice = 0 THEN '' ELSE     
            (
              CASE WHEN oimpv.meta_value = 0 THEN pmp.post_content ELSE (
                SELECT 
                  parent.post_content 
                FROM 
                  wp_posts parent 
                WHERE 
                  parent.ID = oimp.meta_value
              ) END
            ) END)  as ContentIntro, 
            (
            CASE WHEN _full_text_sql_choice = 0 THEN '' ELSE     
            (
              CASE WHEN oimpv.meta_value = 0 THEN pmp.post_content ELSE (
                SELECT 
                  parent.post_content 
                FROM 
                  wp_posts parent 
                WHERE 
                  parent.ID = oimp.meta_value
              ) END
            ) END) as ContentIntroPlain,
          COALESCE(pmp.post_date_gmt, '2000-01-01 00:00:00') as ContentCreated, 
          COALESCE(pmp.post_modified_gmt, '2000-01-01 00:00:00') as ContentLastUpdated,
       (
            CASE WHEN _text_sql_choice = 0 THEN '' ELSE     
       
          COALESCE(pc.category_names, '') END ) AS CategoryName, 
  (
            CASE WHEN _text_sql_choice = 0 THEN '' ELSE     
               COALESCE(pt.tag_names, '') END ) AS TagName, 
           (CASE WHEN _eponymous_sql_choice = 0 THEN '0' ELSE  o.customer_id END)  AS EponymousID, 
   
          (
            CASE WHEN _seasonality_sql_choice = 0 THEN '0' ELSE     
       '1' END) AS Seasonality
      FROM 
      wp_woocommerce_order_items oi 
      JOIN wp_wc_orders o 
          ON o.id = oi.order_id 
      JOIN wp_woocommerce_order_itemmeta oimp 
          ON oi.order_item_id = oimp.order_item_id AND oimp.meta_key = '_product_id' 
      LEFT JOIN wp_woocommerce_order_itemmeta oimpv 
          ON oi.order_item_id = oimpv.order_item_id AND oimpv.meta_key = '_variation_id' 
      LEFT JOIN wp_woocommerce_order_itemmeta oimq 
          ON oi.order_item_id = oimq.order_item_id AND oimq.meta_key = '_qty' 
    LEFT JOIN wp_woocommerce_order_itemmeta oims on oi.order_item_id = oims.order_item_id 
  and oims.meta_key = '_line_subtotal'



  
   LEFT JOIN wp_wc_order_operational_data ood 
          ON ood.order_id = o.id 
      JOIN wp_wc_order_addresses oba 
          ON oba.order_id = o.id AND oba.address_type = 'billing' 
          LEFT JOIN wp_posts pmp 
    ON pmp.ID = oimp.meta_value 


    LEFT JOIN wp_postmeta AS pm_price 
ON (
    CASE 
        WHEN oimpv.meta_value != '0' THEN oimpv.meta_value  
        ELSE oimp.meta_value                               
    END
) = pm_price.post_id 
AND pm_price.meta_key = '_price'

LEFT JOIN wp_postmeta AS pm_regular_price 
ON (
    CASE 
        WHEN oimpv.meta_value IS NOT NULL AND oimpv.meta_value != '0' THEN oimpv.meta_value
        ELSE oimp.meta_value
    END
) = pm_regular_price.post_id 
AND pm_regular_price.meta_key = '_regular_price'

LEFT JOIN wp_postmeta pstock
ON (
    CASE 
        WHEN oimpv.meta_value != '0' THEN oimpv.meta_value  
        ELSE oimp.meta_value                               
    END
) = pstock.post_id 
AND pstock.meta_key = '_stock'



  
  LEFT JOIN wp_postmeta AS psku 
      ON psku.post_id = CASE WHEN oimpv.meta_value != '0' THEN oimpv.meta_value ELSE pmp.ID END AND psku.meta_key = '_sku'
   
      LEFT JOIN (
        SELECT 
            oi.order_id, 
            COUNT(*) AS OrderSize 
        FROM 
            wp_woocommerce_order_items oi 
        WHERE 
            oi.order_item_type = 'line_item'
        GROUP BY 
            oi.order_id
    ) AS os ON o.ID = os.order_id
   
   
    LEFT JOIN (
    SELECT 
        tr.object_id AS product_id, 
        GROUP_CONCAT(t.term_id ORDER BY t.term_id ASC) AS category_ids,
        GROUP_CONCAT(t.name ORDER BY t.term_id ASC) AS category_names  -- Include category names
    FROM 
    wp_term_relationships tr 
        JOIN wp_term_taxonomy tt ON tr.term_taxonomy_id = tt.term_taxonomy_id AND tt.taxonomy = 'product_cat'
        JOIN wp_terms t ON tt.term_id = t.term_id 
    GROUP BY 
        tr.object_id
) AS pc ON pc.product_id = oimp.meta_value
    LEFT JOIN (
        SELECT 
            tr.object_id AS product_id, 
            GROUP_CONCAT(t.term_id ORDER BY t.term_id ASC) AS tag_ids,
            GROUP_CONCAT(t.name ORDER BY t.term_id ASC) AS tag_names 
        FROM 
            wp_term_relationships tr 
            JOIN wp_term_taxonomy tt ON tr.term_taxonomy_id = tt.term_taxonomy_id AND tt.taxonomy = 'product_tag'
            JOIN wp_terms t ON tt.term_id = t.term_id 
        GROUP BY 
            tr.object_id
    ) AS pt ON pt.product_id = oimp.meta_value
  WHERE 
      oi.order_item_type = 'line_item' 
      AND oi.order_id >= _order_id 
      LIMIT _max_records;

      END;       
    </p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createProcedure"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('CREATE PROCEDUR...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('CREATE PROCEDUR...')
#4 /wordpress/wp-content/plugins/ai-eshop-optimizer/includes/sql/sprocs.php(1858): WP_SQLite_DB->query('CREATE PROCEDUR...')
#5 /wordpress/wp-content/plugins/ai-eshop-optimizer/ai-eshop-optimizer.php(173): aieo_create_sp_AIEO_Export_Orders_HPOS('wp_', 'wp_aieo_temp_or...')
#6 /wordpress/wp-includes/class-wp-hook.php(324): aieo_create_stored_procedures(false)
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_ai-esh...', false)
#10 /internal/eval.php(20): activate_plugin('ai-eshop-optimi...')
#11 {main}</pre>
 for query CREATE PROCEDURE wp_AIEO_Export_Orders_HPOS(
    IN _price_sql_choice INT, 
    IN _text_sql_choice INT, 
    IN _full_text_sql_choice INT,
    IN _eponymous_sql_choice INT, 
    IN _seasonality_sql_choice INT, 
    IN _order_id INT, 
    IN _max_records INT
  ) BEGIN 
  TRUNCATE TABLE wp_aieo_temp_orders_table;
  INSERT INTO wp_aieo_temp_orders_table
  (OrderIdGraphUUID, OrderItemIdGraphUUID, PPIdGraphUUID, ProdIdGraphUUID, EpoIdGraphUUID, O_PP_GraphUUID,O_Prod_GraphUUID, 
  O_Epo_GraphUUID, PP_Epo_GraphUUID, Prod_Epo_GraphUUID, OrderId, OrderStatus, SKU,  ProductId, ParentProductId, CategoryId, TagId, OrderDate, PrimaryQty, ItemSequence, Stock, OrderSize, 
    JourneyLinearWeight, AnonymousWeight, Price, LineValue, OrderItemsTotal, ValueLinearWeight, CurrentPrice, CurrentRegularPrice, ItemName,  ParentItemName, ItemNameDiff, 
    ProfitabilityIndex, Brand, ContentIntro, ContentIntroPlain, ContentCreated, ContentLastUpdated, 
    CategoryName, TagName, EponymousID, Seasonality)
    SELECT 
    UUID() AS OrderIdGraphUUID, 
    MD5(CONCAT(o.id)) AS OrderItemIdGraphUUID,
    MD5(CONCAT(COALESCE(oimp.meta_value, ''))) AS PPIdGraphUUID,
    MD5(CONCAT(COALESCE(CASE WHEN oimpv.meta_value = 0 THEN oimp.meta_value ELSE oimpv.meta_value END, ''))) AS ProdIdGraphUUID,
    CASE 
    WHEN _eponymous_sql_choice = 0 OR o.customer_id = 0 THEN NULL
    ELSE MD5(CONCAT(o.customer_id))
END AS EpoIdGraphUUID,

    MD5(CONCAT(COALESCE(oimp.meta_value, ''), o.id)) AS O_PP_GraphUUID,
    MD5(CONCAT(COALESCE(CASE WHEN oimpv.meta_value = 0 THEN oimp.meta_value ELSE oimpv.meta_value END, ''), o.id)) AS O_Prod_GraphUUID,
    
    CASE 
    WHEN _eponymous_sql_choice = 0 OR o.customer_id = 0 THEN NULL
    ELSE MD5(CONCAT(o.id, o.customer_id))
END AS O_Epo_GraphUUID,

CASE 
    WHEN _eponymous_sql_choice = 0 OR o.customer_id = 0 THEN NULL
    ELSE MD5(CONCAT(COALESCE(oimp.meta_value, ''), o.customer_id))
END AS PP_Epo_GraphUUID,

CASE 
    WHEN _eponymous_sql_choice = 0 OR o.customer_id = 0 THEN NULL
    ELSE MD5(CONCAT(COALESCE(CASE WHEN oimpv.meta_value = 0 THEN oimp.meta_value ELSE oimpv.meta_value END, ''), o.customer_id))
END AS Prod_Epo_GraphUUID,
    
    o.id as OrderId, 
      o.status as OrderStatus, 
    CASE WHEN _text_sql_choice = 0 THEN '' ELSE COALESCE(psku.meta_value, '') END AS SKU, 
      COALESCE(
          CASE WHEN oimpv.meta_value = 0 THEN oimp.meta_value ELSE oimpv.meta_value END, ''
      ) AS ProductId, 
      COALESCE(oimp.meta_value, '') AS ParentProductId,
      COALESCE(pc.category_ids, '') as CategoryId, 
      COALESCE(pt.tag_ids, '') AS TagId, 
      o.date_created_gmt as OrderDate, 
      COALESCE(CONVERT(oimq.meta_value, decimal(3, 0)), '') as PrimaryQty, 
      ROW_NUMBER() OVER (PARTITION BY o.id ORDER BY oi.order_item_id) as ItemSequence, 
      COALESCE(pstock.meta_value, '') as Stock,
      os.OrderSize, 
      ROW_NUMBER() OVER (PARTITION BY o.id ORDER BY oi.order_item_id) / os.OrderSize as JourneyLinearWeight, 
      CASE WHEN _eponymous_sql_choice = 0 THEN '0' ELSE '1' END AS AnonymousWeight,
      (CASE WHEN _price_sql_choice = 0 THEN '' ELSE convert(
              
                oims.meta_value 
              / oimq.meta_value,
              decimal(5, 2)
          ) END ) as Price, 
      (CASE WHEN _price_sql_choice = 0 THEN '' ELSE  convert(
              oims.meta_value, 
              decimal(7, 2)
          
          ) END ) as LineValue, 
          
          ( CASE WHEN _price_sql_choice = 0 THEN '' ELSE convert(o.total_amount , 
          decimal(7, 2)) END )   as OrderItemsTotal,
          ( CASE WHEN _price_sql_choice = 0 THEN '' ELSE 
          convert(oims.meta_value / o.total_amount , 
              decimal(7, 2)) END )   as ValueLinearWeight, 
              (
    CASE 
      WHEN _price_sql_choice = 0 THEN '' 
      ELSE (
        CASE 
          WHEN pm_price.meta_value REGEXP '^[0-9.]+$' THEN CONVERT(pm_price.meta_value, DECIMAL(7, 2)) 
          ELSE NULL 
        END 
      ) 
  END
  ) AS CurrentPrice,  
  (
    CASE 
      WHEN _
