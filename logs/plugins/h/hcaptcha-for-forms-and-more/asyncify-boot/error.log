file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12404
    const l = new Error(
              ^

Error: Invalid blueprint: must have required property 'path' at /steps/2/pluginData
    at Qt (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12404:15)
    at cs (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12321:15)
    at async f (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:144:9)
    at async pe (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:155:13)
    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {
  errors: [
    {
      instancePath: '/steps/2/pluginData',
      schemaPath: '#/definitions/VFSReference/required',
      keyword: 'required',
      params: { missingProperty: 'path' },
      message: "must have required property 'path'"
    },
    {
      instancePath: '/steps/2/pluginData',
      schemaPath: '#/definitions/LiteralReference/required',
      keyword: 'required',
      params: { missingProperty: 'name' },
      message: "must have required property 'name'"
    },
    {
      instancePath: '/steps/2/pluginData',
      schemaPath: '#/definitions/CoreThemeReference/required',
      keyword: 'required',
      params: { missingProperty: 'slug' },
      message: "must have required property 'slug'"
    },
    {
      instancePath: '/steps/2/pluginData',
      schemaPath: '#/definitions/CorePluginReference/required',
      keyword: 'required',
      params: { missingProperty: 'slug' },
      message: "must have required property 'slug'"
    },
    {
      instancePath: '/steps/2/pluginData/resource',
      schemaPath: '#/definitions/UrlReference/properties/resource/const',
      keyword: 'const',
      params: { allowedValue: 'url' },
      message: 'must be equal to constant'
    },
    {
      instancePath: '/steps/2/pluginData',
      schemaPath: '#/definitions/BundledReference/required',
      keyword: 'required',
      params: { missingProperty: 'path' },
      message: "must have required property 'path'"
    },
    {
      instancePath: '/steps/2/pluginData',
      schemaPath: '#/anyOf',
      keyword: 'anyOf',
      params: {},
      message: 'must match a schema in anyOf'
    },
    {
      instancePath: '/steps/2/pluginData',
      schemaPath: '#/definitions/GitDirectoryReference/required',
      keyword: 'required',
      params: { missingProperty: 'ref' },
      message: "must have required property 'ref'"
    },
    {
      instancePath: '/steps/2/pluginData',
      schemaPath: '#/required',
      keyword: 'required',
      params: { missingProperty: 'files' },
      message: "must have required property 'files'"
    },
    {
      instancePath: '/steps/2/pluginData',
      schemaPath: '#/anyOf',
      keyword: 'anyOf',
      params: {},
      message: 'must match a schema in anyOf'
    },
    {
      instancePath: '/steps/2/pluginData',
      schemaPath: '#/oneOf/9/properties/pluginData/anyOf',
      keyword: 'anyOf',
      params: {},
      message: 'must match a schema in anyOf'
    },
    {
      instancePath: '/steps/2',
      schemaPath: '#/properties/steps/items/anyOf/1/type',
      keyword: 'type',
      params: { type: 'string' },
      message: 'must be string'
    },
    {
      instancePath: '/steps/2',
      schemaPath: '#/properties/steps/items/anyOf/2/not',
      keyword: 'not',
      params: {},
      message: 'must NOT be valid'
    },
    {
      instancePath: '/steps/2',
      schemaPath: '#/properties/steps/items/anyOf/3/type',
      keyword: 'type',
      params: { type: 'boolean' },
      message: 'must be boolean'
    },
    {
      instancePath: '/steps/2',
      schemaPath: '#/properties/steps/items/anyOf/3/const',
      keyword: 'const',
      params: { allowedValue: false },
      message: 'must be equal to constant'
    },
    {
      instancePath: '/steps/2',
      schemaPath: '#/properties/steps/items/anyOf/4/type',
      keyword: 'type',
      params: { type: 'null' },
      message: 'must be null'
    },
    {
      instancePath: '/steps/2',
      schemaPath: '#/properties/steps/items/anyOf',
      keyword: 'anyOf',
      params: {},
      message: 'must match a schema in anyOf'
    }
  ]
}

Node.js v23.11.0
