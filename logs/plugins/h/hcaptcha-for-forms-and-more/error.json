[
  {
    "message": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12363\n    const f = new Error(\n              ^\n\nError: Invalid blueprint: must have required property 'path' at /steps/5/pluginData\n    at os (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12363:15)\n    at g (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:19:7)\n    at J (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:19:136) {\n  errors: [\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/definitions/VFSReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'path' },\n      message: \"must have required property 'path'\"\n    },\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/definitions/LiteralReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'name' },\n      message: \"must have required property 'name'\"\n    },\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/definitions/CoreThemeReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'slug' },\n      message: \"must have required property 'slug'\"\n    },\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/definitions/CorePluginReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'slug' },\n      message: \"must have required property 'slug'\"\n    },\n    {\n      instancePath: '/steps/5/pluginData/resource',\n      schemaPath: '#/definitions/UrlReference/properties/resource/const',\n      keyword: 'const',\n      params: { allowedValue: 'url' },\n      message: 'must be equal to constant'\n    },\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/definitions/GitDirectoryReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'ref' },\n      message: \"must have required property 'ref'\"\n    },\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/required',\n      keyword: 'required',\n      params: { missingProperty: 'files' },\n      message: \"must have required property 'files'\"\n    },\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/oneOf/9/properties/pluginData/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/5',\n      schemaPath: '#/properties/steps/items/anyOf/1/type',\n      keyword: 'type',\n      params: { type: 'string' },\n      message: 'must be string'\n    },\n    {\n      instancePath: '/steps/5',\n      schemaPath: '#/properties/steps/items/anyOf/2/not',\n      keyword: 'not',\n      params: {},\n      message: 'must NOT be valid'\n    },\n    {\n      instancePath: '/steps/5',\n      schemaPath: '#/properties/steps/items/anyOf/3/type',\n      keyword: 'type',\n      params: { type: 'boolean' },\n      message: 'must be boolean'\n    },\n    {\n      instancePath: '/steps/5',\n      schemaPath: '#/properties/steps/items/anyOf/3/const',\n      keyword: 'const',\n      params: { allowedValue: false },\n      message: 'must be equal to constant'\n    },\n    {\n      instancePath: '/steps/5',\n      schemaPath: '#/properties/steps/items/anyOf/4/type',\n      keyword: 'type',\n      params: { type: 'null' },\n      message: 'must be null'\n    },\n    {\n      instancePath: '/steps/5',\n      schemaPath: '#/properties/steps/items/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    }\n  ]\n}\n\n",
    "level": "FATAL",
    "type": "PLAYGROUND",
    "test": "ast-sqlite-boot",
    "plugin": "hcaptcha-for-forms-and-more",
    "details": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12363\n    const f = new Error(\n              ^\n\nError: Invalid blueprint: must have required property 'path' at /steps/5/pluginData\n    at os (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12363:15)\n    at g (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:19:7)\n    at J (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:19:136) {\n  errors: [\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/definitions/VFSReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'path' },\n      message: \"must have required property 'path'\"\n    },\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/definitions/LiteralReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'name' },\n      message: \"must have required property 'name'\"\n    },\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/definitions/CoreThemeReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'slug' },\n      message: \"must have required property 'slug'\"\n    },\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/definitions/CorePluginReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'slug' },\n      message: \"must have required property 'slug'\"\n    },\n    {\n      instancePath: '/steps/5/pluginData/resource',\n      schemaPath: '#/definitions/UrlReference/properties/resource/const',\n      keyword: 'const',\n      params: { allowedValue: 'url' },\n      message: 'must be equal to constant'\n    },\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/definitions/GitDirectoryReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'ref' },\n      message: \"must have required property 'ref'\"\n    },\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/required',\n      keyword: 'required',\n      params: { missingProperty: 'files' },\n      message: \"must have required property 'files'\"\n    },\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/5/pluginData',\n      schemaPath: '#/oneOf/9/properties/pluginData/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/5',\n      schemaPath: '#/properties/steps/items/anyOf/1/type',\n      keyword: 'type',\n      params: { type: 'string' },\n      message: 'must be string'\n    },\n    {\n      instancePath: '/steps/5',\n      schemaPath: '#/properties/steps/items/anyOf/2/not',\n      keyword: 'not',\n      params: {},\n      message: 'must NOT be valid'\n    },\n    {\n      instancePath: '/steps/5',\n      schemaPath: '#/properties/steps/items/anyOf/3/type',\n      keyword: 'type',\n      params: { type: 'boolean' },\n      message: 'must be boolean'\n    },\n    {\n      instancePath: '/steps/5',\n      schemaPath: '#/properties/steps/items/anyOf/3/const',\n      keyword: 'const',\n      params: { allowedValue: false },\n      message: 'must be equal to constant'\n    },\n    {\n      instancePath: '/steps/5',\n      schemaPath: '#/properties/steps/items/anyOf/4/type',\n      keyword: 'type',\n      params: { type: 'null' },\n      message: 'must be null'\n    },\n    {\n      instancePath: '/steps/5',\n      schemaPath: '#/properties/steps/items/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    }\n  ]\n}\n\n",
    "log": "/tmp/tmp.JWxnGQwuRn"
  },
  {
    "message": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12363\n    const f = new Error(\n              ^\n\nError: Invalid blueprint: must have required property 'path' at /steps/1/pluginData\n    at os (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12363:15)\n    at g (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:19:7)\n    at J (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:19:136) {\n  errors: [\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/VFSReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'path' },\n      message: \"must have required property 'path'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/LiteralReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'name' },\n      message: \"must have required property 'name'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/CoreThemeReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'slug' },\n      message: \"must have required property 'slug'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/CorePluginReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'slug' },\n      message: \"must have required property 'slug'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData/resource',\n      schemaPath: '#/definitions/UrlReference/properties/resource/const',\n      keyword: 'const',\n      params: { allowedValue: 'url' },\n      message: 'must be equal to constant'\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/GitDirectoryReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'ref' },\n      message: \"must have required property 'ref'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/required',\n      keyword: 'required',\n      params: { missingProperty: 'files' },\n      message: \"must have required property 'files'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/oneOf/9/properties/pluginData/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/1/type',\n      keyword: 'type',\n      params: { type: 'string' },\n      message: 'must be string'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/2/not',\n      keyword: 'not',\n      params: {},\n      message: 'must NOT be valid'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/3/type',\n      keyword: 'type',\n      params: { type: 'boolean' },\n      message: 'must be boolean'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/3/const',\n      keyword: 'const',\n      params: { allowedValue: false },\n      message: 'must be equal to constant'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/4/type',\n      keyword: 'type',\n      params: { type: 'null' },\n      message: 'must be null'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    }\n  ]\n}\n\n",
    "level": "FATAL",
    "type": "PLAYGROUND",
    "test": "asyncify-boot",
    "plugin": "hcaptcha-for-forms-and-more",
    "details": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12363\n    const f = new Error(\n              ^\n\nError: Invalid blueprint: must have required property 'path' at /steps/1/pluginData\n    at os (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12363:15)\n    at g (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:19:7)\n    at J (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:19:136) {\n  errors: [\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/VFSReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'path' },\n      message: \"must have required property 'path'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/LiteralReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'name' },\n      message: \"must have required property 'name'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/CoreThemeReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'slug' },\n      message: \"must have required property 'slug'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/CorePluginReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'slug' },\n      message: \"must have required property 'slug'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData/resource',\n      schemaPath: '#/definitions/UrlReference/properties/resource/const',\n      keyword: 'const',\n      params: { allowedValue: 'url' },\n      message: 'must be equal to constant'\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/GitDirectoryReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'ref' },\n      message: \"must have required property 'ref'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/required',\n      keyword: 'required',\n      params: { missingProperty: 'files' },\n      message: \"must have required property 'files'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/oneOf/9/properties/pluginData/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/1/type',\n      keyword: 'type',\n      params: { type: 'string' },\n      message: 'must be string'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/2/not',\n      keyword: 'not',\n      params: {},\n      message: 'must NOT be valid'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/3/type',\n      keyword: 'type',\n      params: { type: 'boolean' },\n      message: 'must be boolean'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/3/const',\n      keyword: 'const',\n      params: { allowedValue: false },\n      message: 'must be equal to constant'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/4/type',\n      keyword: 'type',\n      params: { type: 'null' },\n      message: 'must be null'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    }\n  ]\n}\n\n",
    "log": "/tmp/tmp.9AGEcXl26E"
  },
  {
    "message": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12363\n    const f = new Error(\n              ^\n\nError: Invalid blueprint: must have required property 'path' at /steps/1/pluginData\n    at os (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12363:15)\n    at g (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:19:7)\n    at J (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:19:136) {\n  errors: [\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/VFSReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'path' },\n      message: \"must have required property 'path'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/LiteralReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'name' },\n      message: \"must have required property 'name'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/CoreThemeReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'slug' },\n      message: \"must have required property 'slug'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/CorePluginReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'slug' },\n      message: \"must have required property 'slug'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData/resource',\n      schemaPath: '#/definitions/UrlReference/properties/resource/const',\n      keyword: 'const',\n      params: { allowedValue: 'url' },\n      message: 'must be equal to constant'\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/GitDirectoryReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'ref' },\n      message: \"must have required property 'ref'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/required',\n      keyword: 'required',\n      params: { missingProperty: 'files' },\n      message: \"must have required property 'files'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/oneOf/9/properties/pluginData/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/1/type',\n      keyword: 'type',\n      params: { type: 'string' },\n      message: 'must be string'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/2/not',\n      keyword: 'not',\n      params: {},\n      message: 'must NOT be valid'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/3/type',\n      keyword: 'type',\n      params: { type: 'boolean' },\n      message: 'must be boolean'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/3/const',\n      keyword: 'const',\n      params: { allowedValue: false },\n      message: 'must be equal to constant'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/4/type',\n      keyword: 'type',\n      params: { type: 'null' },\n      message: 'must be null'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    }\n  ]\n}\n\n",
    "level": "FATAL",
    "type": "PLAYGROUND",
    "test": "jspi-boot",
    "plugin": "hcaptcha-for-forms-and-more",
    "details": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12363\n    const f = new Error(\n              ^\n\nError: Invalid blueprint: must have required property 'path' at /steps/1/pluginData\n    at os (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12363:15)\n    at g (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:19:7)\n    at J (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:19:136) {\n  errors: [\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/VFSReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'path' },\n      message: \"must have required property 'path'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/LiteralReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'name' },\n      message: \"must have required property 'name'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/CoreThemeReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'slug' },\n      message: \"must have required property 'slug'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/CorePluginReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'slug' },\n      message: \"must have required property 'slug'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData/resource',\n      schemaPath: '#/definitions/UrlReference/properties/resource/const',\n      keyword: 'const',\n      params: { allowedValue: 'url' },\n      message: 'must be equal to constant'\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/definitions/GitDirectoryReference/required',\n      keyword: 'required',\n      params: { missingProperty: 'ref' },\n      message: \"must have required property 'ref'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/required',\n      keyword: 'required',\n      params: { missingProperty: 'files' },\n      message: \"must have required property 'files'\"\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/1/pluginData',\n      schemaPath: '#/oneOf/9/properties/pluginData/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/1/type',\n      keyword: 'type',\n      params: { type: 'string' },\n      message: 'must be string'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/2/not',\n      keyword: 'not',\n      params: {},\n      message: 'must NOT be valid'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/3/type',\n      keyword: 'type',\n      params: { type: 'boolean' },\n      message: 'must be boolean'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/3/const',\n      keyword: 'const',\n      params: { allowedValue: false },\n      message: 'must be equal to constant'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf/4/type',\n      keyword: 'type',\n      params: { type: 'null' },\n      message: 'must be null'\n    },\n    {\n      instancePath: '/steps/1',\n      schemaPath: '#/properties/steps/items/anyOf',\n      keyword: 'anyOf',\n      params: {},\n      message: 'must match a schema in anyOf'\n    }\n  ]\n}\n\n",
    "log": "/tmp/tmp.LmXxfUCqJP"
  }
]
