[
  {
    "message": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "level": "FATAL",
    "type": "PLAYGROUND",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "log": "/tmp/tmp.TsGyZCOM7l"
  },
  {
    "message": "Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:29:12 UTC] PHP Notice:  Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:29:22 UTC] PHP Notice:  Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:29:30 UTC] PHP Notice:  Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:30:41 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469\nStack trace:\n#0 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(730): ruigehond007->htaccessContainsLines()\n#1 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(760): ruigehond007->activate()\n#2 /wordpress/wp-includes/class-wp-hook.php(324): ruigehond007_activate(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_each-d...', false)\n#6 /internal/eval.php(20): activate_plugin('each-domain-a-p...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php on line 469",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:30:48 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469\nStack trace:\n#0 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(730): ruigehond007->htaccessContainsLines()\n#1 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(760): ruigehond007->activate()\n#2 /wordpress/wp-includes/class-wp-hook.php(324): ruigehond007_activate(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_each-d...', false)\n#6 /internal/eval.php(20): activate_plugin('each-domain-a-p...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php on line 469",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:30:56 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469\nStack trace:\n#0 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(730): ruigehond007->htaccessContainsLines()\n#1 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(760): ruigehond007->activate()\n#2 /wordpress/wp-includes/class-wp-hook.php(324): ruigehond007_activate(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_each-d...', false)\n#6 /internal/eval.php(20): activate_plugin('each-domain-a-p...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php on line 469",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:32:57 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:32:57 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Undefined variable $wpdb in /wordpress/wp-content/plugins/events-handler/install-script.php on line 4",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:32:57 UTC] PHP Warning:  Undefined variable $wpdb in /wordpress/wp-content/plugins/events-handler/install-script.php on line 4",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught Error: Call to a member function get_var() on null in /wordpress/wp-content/plugins/events-handler/install-script.php:4",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:32:57 UTC] PHP Fatal error:  Uncaught Error: Call to a member function get_var() on null in /wordpress/wp-content/plugins/events-handler/install-script.php:4\nStack trace:\n#0 /wordpress/wp-content/plugins/events-handler/events-handler.php(31): include_once()\n#1 /wordpress/wp-includes/class-wp-hook.php(324): plugin_install_script(false)\n#2 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#3 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#4 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_events...', false)\n#5 /internal/eval.php(20): activate_plugin('events-handler/...')\n#6 {main}\n  thrown in /wordpress/wp-content/plugins/events-handler/install-script.php on line 4",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:06 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:06 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "SQLSTATE[HY000]: General error: 1 no such table: wp_eh_add_booking.",
    "level": "FATAL",
    "type": "SQL",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:06 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>SELECT count(BookingId) FROM wp_eh_add_booking</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: SELECT count(BookingId) FROM wp_eh_add_booking | (no parameters)</li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[HY000]: General error: 1 no such table: wp_eh_add_booking.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-includes/class-wpdb.php(3031): WP_SQLite_DB->query('SELECT count(Bo...')\n#2 /wordpress/wp-content/plugins/events-handler/lib/event-handler-class.php(320): wpdb->get_var('SELECT count(Bo...')\n#3 /wordpress/wp-content/plugins/events-handler/events-handler.php(27): require_once('/wordpress/wp-c...')\n#4 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')\n#5 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('events-handler/...')\n#6 /internal/eval.php(20): activate_plugin('events-handler/...')\n#7 {main}</pre>\n for query SELECT count(BookingId) FROM wp_eh_add_booking made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/events-handler/events-handler.php'), require_once('/plugins/events-handler/lib/event-handler-class.php'), WP_SQLite_DB->query, WP_SQLite_DB->print_error",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /wordpress/wp-content/plugins/events-handler/install-script.php:4",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:06 UTC] PHP Fatal error:  Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /wordpress/wp-content/plugins/events-handler/install-script.php:4\nStack trace:\n#0 /wordpress/wp-content/plugins/events-handler/events-handler.php(31): include_once()\n#1 /wordpress/wp-includes/class-wp-hook.php(324): plugin_install_script(false)\n#2 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#3 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#4 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_events...', false)\n#5 /internal/eval.php(20): activate_plugin('events-handler/...')\n#6 {main}\n  thrown in /wordpress/wp-content/plugins/events-handler/install-script.php on line 4",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:14 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:14 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "SQLSTATE[HY000]: General error: 1 no such table: wp_eh_add_booking.",
    "level": "FATAL",
    "type": "SQL",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:15 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>SELECT count(BookingId) FROM wp_eh_add_booking</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: SELECT count(BookingId) FROM wp_eh_add_booking | (no parameters)</li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[HY000]: General error: 1 no such table: wp_eh_add_booking.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-includes/class-wpdb.php(3031): WP_SQLite_DB->query('SELECT count(Bo...')\n#2 /wordpress/wp-content/plugins/events-handler/lib/event-handler-class.php(320): wpdb->get_var('SELECT count(Bo...')\n#3 /wordpress/wp-content/plugins/events-handler/events-handler.php(27): require_once('/wordpress/wp-c...')\n#4 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')\n#5 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('events-handler/...')\n#6 /internal/eval.php(20): activate_plugin('events-handler/...')\n#7 {main}</pre>\n for query SELECT count(BookingId) FROM wp_eh_add_booking made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/events-handler/events-handler.php'), require_once('/plugins/events-handler/lib/event-handler-class.php'), WP_SQLite_DB->query, WP_SQLite_DB->print_error",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /wordpress/wp-content/plugins/events-handler/install-script.php:4",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:15 UTC] PHP Fatal error:  Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /wordpress/wp-content/plugins/events-handler/install-script.php:4\nStack trace:\n#0 /wordpress/wp-content/plugins/events-handler/events-handler.php(31): include_once()\n#1 /wordpress/wp-includes/class-wp-hook.php(324): plugin_install_script(false)\n#2 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#3 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#4 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_events...', false)\n#5 /internal/eval.php(20): activate_plugin('events-handler/...')\n#6 {main}\n  thrown in /wordpress/wp-content/plugins/events-handler/install-script.php on line 4",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.",
    "level": "FATAL",
    "type": "SQL",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:33 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>CREATE TABLE IF NOT EXISTS wp_everypay_tokenization (\n          id INT NOT NULL AUTO_INCREMENT,\n          wp_user_id bigint(20) UNSIGNED,\n          friendly_name VARCHAR(100) NOT NULL,\n          customer_token VARCHAR(100) NOT NULL,\n          crd VARCHAR(100) NOT NULL,\n          card_expiration_month INT UNSIGNED NOT NULL,\n          card_expiration_year INT UNSIGNED NOT NULL,\n          card_last_four INT(4) UNSIGNED NOT NULL,\n          card_type VARCHAR(100),\n          FOREIGN KEY (wp_user_id) REFERENCES wp_users(ID),\n          PRIMARY KEY  (id) \n        ) DEFAULT CHARACTER SET utf8mb4</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, id, int</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, wp_user_id, bigint(20) UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, friendly_name, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, customer_token, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, crd, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_expiration_month, int UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_expiration_year, int UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_last_four, int(4) UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_type, varchar(100)</li>\n<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_everypay_tokenization&quot; (\n&quot;id&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;wp_user_id&quot; integer,\n&quot;friendly_name&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;customer_token&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;crd&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;card_expiration_month&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_expiration_year&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_last_four&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_type&quot; text COLLATE NOCASE) | (no parameters)</li>\n<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_everypay_tokenization__&quot; ON &quot;wp_everypay_tokenization&quot; (&quot;&quot;) | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, wp_everypay_tokenization__, </li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-admin/includes/upgrade.php(3280): WP_SQLite_DB->query('CREATE TABLE IF...')\n#2 /wordpress/wp-content/plugins/everypay-payment-gateway/includes/class-wc-everypay-repository.php(127): dbDelta(Array)\n#3 /wordpress/wp-content/plugins/everypay-payment-gateway/everypay-payment-gateway.php(124): WC_Everypay_Repository->create_tokenization_table()\n#4 /wordpress/wp-includes/class-wp-hook.php(324): install(false)\n#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_everyp...', false)\n#8 /internal/eval.php(20): activate_plugin('everypay-paymen...')\n#9 {main}</pre>\n for query CREATE TABLE IF NOT EXISTS wp_everypay_tokenization (\n          id INT NOT NULL AUTO_INCREMENT,\n          wp_user_id bigint(20) UNSIGNED,\n          friendly_name VARCHAR(100) NOT NULL,\n          customer_token VARCHAR(100) NOT NULL,\n          crd VARCHAR(100) NOT NULL,\n          card_expiration_month INT UNSIGNED NOT NULL,\n          card_expiration_year INT UNSIGNED NOT NULL,\n          card_last_four INT(4) UNSIGNED NOT NULL,\n          card_type VARCHAR(100),\n          FOREIGN KEY (wp_user_id) REFERENCES wp_users(ID),\n          PRIMARY KEY  (id) \n        ) DEFAULT CHARACTER SET utf8mb4 made by activate_plugin, do_action('activate_everypay-payment-gateway/everypay-payment-gateway.php'), WP_Hook->do_action, WP_Hook->apply_filters, install, WC_Everypay_Repository->create_tokenization_table, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.",
    "level": "FATAL",
    "type": "SQL",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:43 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>CREATE TABLE IF NOT EXISTS wp_everypay_tokenization (\n          id INT NOT NULL AUTO_INCREMENT,\n          wp_user_id bigint(20) UNSIGNED,\n          friendly_name VARCHAR(100) NOT NULL,\n          customer_token VARCHAR(100) NOT NULL,\n          crd VARCHAR(100) NOT NULL,\n          card_expiration_month INT UNSIGNED NOT NULL,\n          card_expiration_year INT UNSIGNED NOT NULL,\n          card_last_four INT(4) UNSIGNED NOT NULL,\n          card_type VARCHAR(100),\n          FOREIGN KEY (wp_user_id) REFERENCES wp_users(ID),\n          PRIMARY KEY  (id) \n        ) DEFAULT CHARACTER SET utf8mb4</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, id, int</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, wp_user_id, bigint(20) UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, friendly_name, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, customer_token, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, crd, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_expiration_month, int UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_expiration_year, int UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_last_four, int(4) UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_type, varchar(100)</li>\n<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_everypay_tokenization&quot; (\n&quot;id&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;wp_user_id&quot; integer,\n&quot;friendly_name&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;customer_token&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;crd&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;card_expiration_month&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_expiration_year&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_last_four&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_type&quot; text COLLATE NOCASE) | (no parameters)</li>\n<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_everypay_tokenization__&quot; ON &quot;wp_everypay_tokenization&quot; (&quot;&quot;) | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, wp_everypay_tokenization__, </li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-admin/includes/upgrade.php(3280): WP_SQLite_DB->query('CREATE TABLE IF...')\n#2 /wordpress/wp-content/plugins/everypay-payment-gateway/includes/class-wc-everypay-repository.php(127): dbDelta(Array)\n#3 /wordpress/wp-content/plugins/everypay-payment-gateway/everypay-payment-gateway.php(124): WC_Everypay_Repository->create_tokenization_table()\n#4 /wordpress/wp-includes/class-wp-hook.php(324): install(false)\n#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_everyp...', false)\n#8 /internal/eval.php(20): activate_plugin('everypay-paymen...')\n#9 {main}</pre>\n for query CREATE TABLE IF NOT EXISTS wp_everypay_tokenization (\n          id INT NOT NULL AUTO_INCREMENT,\n          wp_user_id bigint(20) UNSIGNED,\n          friendly_name VARCHAR(100) NOT NULL,\n          customer_token VARCHAR(100) NOT NULL,\n          crd VARCHAR(100) NOT NULL,\n          card_expiration_month INT UNSIGNED NOT NULL,\n          card_expiration_year INT UNSIGNED NOT NULL,\n          card_last_four INT(4) UNSIGNED NOT NULL,\n          card_type VARCHAR(100),\n          FOREIGN KEY (wp_user_id) REFERENCES wp_users(ID),\n          PRIMARY KEY  (id) \n        ) DEFAULT CHARACTER SET utf8mb4 made by activate_plugin, do_action('activate_everypay-payment-gateway/everypay-payment-gateway.php'), WP_Hook->do_action, WP_Hook->apply_filters, install, WC_Everypay_Repository->create_tokenization_table, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:35:55 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:35:56 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:36:04 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:36:05 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:36:13 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:36:14 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121\n\n    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n  [cause]: Error: Error when executing the blueprint step #5 ({\"step\":\"installPlugin\",\"pluginData\":{\"resource\":\"wordpress.org/plugins\",\"slug\":\"easy-auto-tagger\"},\"options\":{\"activate\":true}}) : Could not download \"https://downloads.wordpress.org/plugin/easy-auto-tagger.latest-stable.zip\".\n  \t\t\t\tCheck if the URL is correct and the server is reachable.\n  \t\t\t\tIf it is reachable, the server might be blocking the request.\n  \t\t\t\tCheck the browser console and network tabs for more information.\n  \n  \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n  \n  \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n  \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n  \t\t\t\tcross-origin file downloads. Learn more about CORS at\n  \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n  \n  \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n  \t\t\t\tHere's how to do that:\n  \n  \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n  \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n  \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n  \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n  \n  \t\t\t\tThe resulting URL should look like this:\n  \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n  \n  \t\t\t\tError:\n  \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/easy-auto-tagger.latest-stable.zip\"\n      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12449:19)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)\n      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)\n      at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n      at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n    [cause]: Error: Could not download \"https://downloads.wordpress.org/plugin/easy-auto-tagger.latest-stable.zip\".\n    \t\t\t\tCheck if the URL is correct and the server is reachable.\n    \t\t\t\tIf it is reachable, the server might be blocking the request.\n    \t\t\t\tCheck the browser console and network tabs for more information.\n    \n    \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n    \n    \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n    \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n    \t\t\t\tcross-origin file downloads. Learn more about CORS at\n    \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n    \n    \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n    \t\t\t\tHere's how to do that:\n    \n    \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n    \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n    \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n    \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n    \n    \t\t\t\tThe resulting URL should look like this:\n    \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n    \n    \t\t\t\tError:\n    \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/easy-auto-tagger.latest-stable.zip\"\n        at Ct.resolve (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:1472:13)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async _.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/util/index.js:45:14)\n  }\n}\n\n",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "level": "FATAL",
    "type": "PLAYGROUND",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "log": "/tmp/tmp.IH2OwTco0t"
  },
  {
    "message": "Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:29:12 UTC] PHP Notice:  Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:29:22 UTC] PHP Notice:  Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:29:30 UTC] PHP Notice:  Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:30:41 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469\nStack trace:\n#0 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(730): ruigehond007->htaccessContainsLines()\n#1 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(760): ruigehond007->activate()\n#2 /wordpress/wp-includes/class-wp-hook.php(324): ruigehond007_activate(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_each-d...', false)\n#6 /internal/eval.php(20): activate_plugin('each-domain-a-p...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php on line 469",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:30:48 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469\nStack trace:\n#0 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(730): ruigehond007->htaccessContainsLines()\n#1 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(760): ruigehond007->activate()\n#2 /wordpress/wp-includes/class-wp-hook.php(324): ruigehond007_activate(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_each-d...', false)\n#6 /internal/eval.php(20): activate_plugin('each-domain-a-p...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php on line 469",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:30:56 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469\nStack trace:\n#0 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(730): ruigehond007->htaccessContainsLines()\n#1 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(760): ruigehond007->activate()\n#2 /wordpress/wp-includes/class-wp-hook.php(324): ruigehond007_activate(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_each-d...', false)\n#6 /internal/eval.php(20): activate_plugin('each-domain-a-p...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php on line 469",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:32:57 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:32:57 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Undefined variable $wpdb in /wordpress/wp-content/plugins/events-handler/install-script.php on line 4",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:32:57 UTC] PHP Warning:  Undefined variable $wpdb in /wordpress/wp-content/plugins/events-handler/install-script.php on line 4",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught Error: Call to a member function get_var() on null in /wordpress/wp-content/plugins/events-handler/install-script.php:4",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:32:57 UTC] PHP Fatal error:  Uncaught Error: Call to a member function get_var() on null in /wordpress/wp-content/plugins/events-handler/install-script.php:4\nStack trace:\n#0 /wordpress/wp-content/plugins/events-handler/events-handler.php(31): include_once()\n#1 /wordpress/wp-includes/class-wp-hook.php(324): plugin_install_script(false)\n#2 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#3 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#4 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_events...', false)\n#5 /internal/eval.php(20): activate_plugin('events-handler/...')\n#6 {main}\n  thrown in /wordpress/wp-content/plugins/events-handler/install-script.php on line 4",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:06 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:06 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "SQLSTATE[HY000]: General error: 1 no such table: wp_eh_add_booking.",
    "level": "FATAL",
    "type": "SQL",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:06 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>SELECT count(BookingId) FROM wp_eh_add_booking</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: SELECT count(BookingId) FROM wp_eh_add_booking | (no parameters)</li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[HY000]: General error: 1 no such table: wp_eh_add_booking.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-includes/class-wpdb.php(3031): WP_SQLite_DB->query('SELECT count(Bo...')\n#2 /wordpress/wp-content/plugins/events-handler/lib/event-handler-class.php(320): wpdb->get_var('SELECT count(Bo...')\n#3 /wordpress/wp-content/plugins/events-handler/events-handler.php(27): require_once('/wordpress/wp-c...')\n#4 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')\n#5 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('events-handler/...')\n#6 /internal/eval.php(20): activate_plugin('events-handler/...')\n#7 {main}</pre>\n for query SELECT count(BookingId) FROM wp_eh_add_booking made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/events-handler/events-handler.php'), require_once('/plugins/events-handler/lib/event-handler-class.php'), WP_SQLite_DB->query, WP_SQLite_DB->print_error",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /wordpress/wp-content/plugins/events-handler/install-script.php:4",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:06 UTC] PHP Fatal error:  Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /wordpress/wp-content/plugins/events-handler/install-script.php:4\nStack trace:\n#0 /wordpress/wp-content/plugins/events-handler/events-handler.php(31): include_once()\n#1 /wordpress/wp-includes/class-wp-hook.php(324): plugin_install_script(false)\n#2 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#3 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#4 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_events...', false)\n#5 /internal/eval.php(20): activate_plugin('events-handler/...')\n#6 {main}\n  thrown in /wordpress/wp-content/plugins/events-handler/install-script.php on line 4",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:14 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:14 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "SQLSTATE[HY000]: General error: 1 no such table: wp_eh_add_booking.",
    "level": "FATAL",
    "type": "SQL",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:15 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>SELECT count(BookingId) FROM wp_eh_add_booking</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: SELECT count(BookingId) FROM wp_eh_add_booking | (no parameters)</li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[HY000]: General error: 1 no such table: wp_eh_add_booking.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-includes/class-wpdb.php(3031): WP_SQLite_DB->query('SELECT count(Bo...')\n#2 /wordpress/wp-content/plugins/events-handler/lib/event-handler-class.php(320): wpdb->get_var('SELECT count(Bo...')\n#3 /wordpress/wp-content/plugins/events-handler/events-handler.php(27): require_once('/wordpress/wp-c...')\n#4 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')\n#5 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('events-handler/...')\n#6 /internal/eval.php(20): activate_plugin('events-handler/...')\n#7 {main}</pre>\n for query SELECT count(BookingId) FROM wp_eh_add_booking made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/events-handler/events-handler.php'), require_once('/plugins/events-handler/lib/event-handler-class.php'), WP_SQLite_DB->query, WP_SQLite_DB->print_error",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /wordpress/wp-content/plugins/events-handler/install-script.php:4",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:15 UTC] PHP Fatal error:  Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /wordpress/wp-content/plugins/events-handler/install-script.php:4\nStack trace:\n#0 /wordpress/wp-content/plugins/events-handler/events-handler.php(31): include_once()\n#1 /wordpress/wp-includes/class-wp-hook.php(324): plugin_install_script(false)\n#2 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#3 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#4 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_events...', false)\n#5 /internal/eval.php(20): activate_plugin('events-handler/...')\n#6 {main}\n  thrown in /wordpress/wp-content/plugins/events-handler/install-script.php on line 4",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.",
    "level": "FATAL",
    "type": "SQL",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:33 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>CREATE TABLE IF NOT EXISTS wp_everypay_tokenization (\n          id INT NOT NULL AUTO_INCREMENT,\n          wp_user_id bigint(20) UNSIGNED,\n          friendly_name VARCHAR(100) NOT NULL,\n          customer_token VARCHAR(100) NOT NULL,\n          crd VARCHAR(100) NOT NULL,\n          card_expiration_month INT UNSIGNED NOT NULL,\n          card_expiration_year INT UNSIGNED NOT NULL,\n          card_last_four INT(4) UNSIGNED NOT NULL,\n          card_type VARCHAR(100),\n          FOREIGN KEY (wp_user_id) REFERENCES wp_users(ID),\n          PRIMARY KEY  (id) \n        ) DEFAULT CHARACTER SET utf8mb4</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, id, int</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, wp_user_id, bigint(20) UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, friendly_name, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, customer_token, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, crd, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_expiration_month, int UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_expiration_year, int UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_last_four, int(4) UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_type, varchar(100)</li>\n<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_everypay_tokenization&quot; (\n&quot;id&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;wp_user_id&quot; integer,\n&quot;friendly_name&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;customer_token&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;crd&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;card_expiration_month&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_expiration_year&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_last_four&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_type&quot; text COLLATE NOCASE) | (no parameters)</li>\n<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_everypay_tokenization__&quot; ON &quot;wp_everypay_tokenization&quot; (&quot;&quot;) | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, wp_everypay_tokenization__, </li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-admin/includes/upgrade.php(3280): WP_SQLite_DB->query('CREATE TABLE IF...')\n#2 /wordpress/wp-content/plugins/everypay-payment-gateway/includes/class-wc-everypay-repository.php(127): dbDelta(Array)\n#3 /wordpress/wp-content/plugins/everypay-payment-gateway/everypay-payment-gateway.php(124): WC_Everypay_Repository->create_tokenization_table()\n#4 /wordpress/wp-includes/class-wp-hook.php(324): install(false)\n#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_everyp...', false)\n#8 /internal/eval.php(20): activate_plugin('everypay-paymen...')\n#9 {main}</pre>\n for query CREATE TABLE IF NOT EXISTS wp_everypay_tokenization (\n          id INT NOT NULL AUTO_INCREMENT,\n          wp_user_id bigint(20) UNSIGNED,\n          friendly_name VARCHAR(100) NOT NULL,\n          customer_token VARCHAR(100) NOT NULL,\n          crd VARCHAR(100) NOT NULL,\n          card_expiration_month INT UNSIGNED NOT NULL,\n          card_expiration_year INT UNSIGNED NOT NULL,\n          card_last_four INT(4) UNSIGNED NOT NULL,\n          card_type VARCHAR(100),\n          FOREIGN KEY (wp_user_id) REFERENCES wp_users(ID),\n          PRIMARY KEY  (id) \n        ) DEFAULT CHARACTER SET utf8mb4 made by activate_plugin, do_action('activate_everypay-payment-gateway/everypay-payment-gateway.php'), WP_Hook->do_action, WP_Hook->apply_filters, install, WC_Everypay_Repository->create_tokenization_table, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.",
    "level": "FATAL",
    "type": "SQL",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:43 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>CREATE TABLE IF NOT EXISTS wp_everypay_tokenization (\n          id INT NOT NULL AUTO_INCREMENT,\n          wp_user_id bigint(20) UNSIGNED,\n          friendly_name VARCHAR(100) NOT NULL,\n          customer_token VARCHAR(100) NOT NULL,\n          crd VARCHAR(100) NOT NULL,\n          card_expiration_month INT UNSIGNED NOT NULL,\n          card_expiration_year INT UNSIGNED NOT NULL,\n          card_last_four INT(4) UNSIGNED NOT NULL,\n          card_type VARCHAR(100),\n          FOREIGN KEY (wp_user_id) REFERENCES wp_users(ID),\n          PRIMARY KEY  (id) \n        ) DEFAULT CHARACTER SET utf8mb4</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, id, int</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, wp_user_id, bigint(20) UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, friendly_name, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, customer_token, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, crd, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_expiration_month, int UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_expiration_year, int UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_last_four, int(4) UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_type, varchar(100)</li>\n<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_everypay_tokenization&quot; (\n&quot;id&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;wp_user_id&quot; integer,\n&quot;friendly_name&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;customer_token&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;crd&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;card_expiration_month&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_expiration_year&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_last_four&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_type&quot; text COLLATE NOCASE) | (no parameters)</li>\n<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_everypay_tokenization__&quot; ON &quot;wp_everypay_tokenization&quot; (&quot;&quot;) | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, wp_everypay_tokenization__, </li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-admin/includes/upgrade.php(3280): WP_SQLite_DB->query('CREATE TABLE IF...')\n#2 /wordpress/wp-content/plugins/everypay-payment-gateway/includes/class-wc-everypay-repository.php(127): dbDelta(Array)\n#3 /wordpress/wp-content/plugins/everypay-payment-gateway/everypay-payment-gateway.php(124): WC_Everypay_Repository->create_tokenization_table()\n#4 /wordpress/wp-includes/class-wp-hook.php(324): install(false)\n#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_everyp...', false)\n#8 /internal/eval.php(20): activate_plugin('everypay-paymen...')\n#9 {main}</pre>\n for query CREATE TABLE IF NOT EXISTS wp_everypay_tokenization (\n          id INT NOT NULL AUTO_INCREMENT,\n          wp_user_id bigint(20) UNSIGNED,\n          friendly_name VARCHAR(100) NOT NULL,\n          customer_token VARCHAR(100) NOT NULL,\n          crd VARCHAR(100) NOT NULL,\n          card_expiration_month INT UNSIGNED NOT NULL,\n          card_expiration_year INT UNSIGNED NOT NULL,\n          card_last_four INT(4) UNSIGNED NOT NULL,\n          card_type VARCHAR(100),\n          FOREIGN KEY (wp_user_id) REFERENCES wp_users(ID),\n          PRIMARY KEY  (id) \n        ) DEFAULT CHARACTER SET utf8mb4 made by activate_plugin, do_action('activate_everypay-payment-gateway/everypay-payment-gateway.php'), WP_Hook->do_action, WP_Hook->apply_filters, install, WC_Everypay_Repository->create_tokenization_table, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:35:55 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:35:56 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:36:04 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:36:05 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:36:13 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:36:14 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121\n\n    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n  [cause]: Error: Error when executing the blueprint step #1 ({\"step\":\"installPlugin\",\"pluginData\":{\"resource\":\"wordpress.org/plugins\",\"slug\":\"easy-auto-tagger\"},\"options\":{\"activate\":true}}) : Could not download \"https://downloads.wordpress.org/plugin/easy-auto-tagger.latest-stable.zip\".\n  \t\t\t\tCheck if the URL is correct and the server is reachable.\n  \t\t\t\tIf it is reachable, the server might be blocking the request.\n  \t\t\t\tCheck the browser console and network tabs for more information.\n  \n  \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n  \n  \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n  \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n  \t\t\t\tcross-origin file downloads. Learn more about CORS at\n  \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n  \n  \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n  \t\t\t\tHere's how to do that:\n  \n  \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n  \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n  \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n  \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n  \n  \t\t\t\tThe resulting URL should look like this:\n  \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n  \n  \t\t\t\tError:\n  \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/easy-auto-tagger.latest-stable.zip\"\n      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12449:19)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)\n      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)\n      at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n      at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n    [cause]: Error: Could not download \"https://downloads.wordpress.org/plugin/easy-auto-tagger.latest-stable.zip\".\n    \t\t\t\tCheck if the URL is correct and the server is reachable.\n    \t\t\t\tIf it is reachable, the server might be blocking the request.\n    \t\t\t\tCheck the browser console and network tabs for more information.\n    \n    \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n    \n    \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n    \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n    \t\t\t\tcross-origin file downloads. Learn more about CORS at\n    \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n    \n    \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n    \t\t\t\tHere's how to do that:\n    \n    \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n    \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n    \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n    \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n    \n    \t\t\t\tThe resulting URL should look like this:\n    \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n    \n    \t\t\t\tError:\n    \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/easy-auto-tagger.latest-stable.zip\"\n        at Ct.resolve (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:1472:13)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async _.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/util/index.js:45:14)\n  }\n}\n\n",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "level": "FATAL",
    "type": "PLAYGROUND",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "log": "/tmp/tmp.n51hoyf1SY"
  },
  {
    "message": "Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:29:12 UTC] PHP Notice:  Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:29:22 UTC] PHP Notice:  Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:29:30 UTC] PHP Notice:  Function wp_enqueue_script was called <strong>incorrectly</strong>. Scripts and styles should not be registered or enqueued until the <code>wp_enqueue_scripts</code>, <code>admin_enqueue_scripts</code>, or <code>login_enqueue_scripts</code> hooks. This notice was triggered by the <code>jquery</code> handle. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.3.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:30:41 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469\nStack trace:\n#0 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(730): ruigehond007->htaccessContainsLines()\n#1 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(760): ruigehond007->activate()\n#2 /wordpress/wp-includes/class-wp-hook.php(324): ruigehond007_activate(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_each-d...', false)\n#6 /internal/eval.php(20): activate_plugin('each-domain-a-p...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php on line 469",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:30:48 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469\nStack trace:\n#0 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(730): ruigehond007->htaccessContainsLines()\n#1 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(760): ruigehond007->activate()\n#2 /wordpress/wp-includes/class-wp-hook.php(324): ruigehond007_activate(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_each-d...', false)\n#6 /internal/eval.php(20): activate_plugin('each-domain-a-p...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php on line 469",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:30:56 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function get_home_path() in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php:469\nStack trace:\n#0 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(730): ruigehond007->htaccessContainsLines()\n#1 /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php(760): ruigehond007->activate()\n#2 /wordpress/wp-includes/class-wp-hook.php(324): ruigehond007_activate(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_each-d...', false)\n#6 /internal/eval.php(20): activate_plugin('each-domain-a-p...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/each-domain-a-page/each-domain-a-page.php on line 469",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:32:57 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:32:57 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Undefined variable $wpdb in /wordpress/wp-content/plugins/events-handler/install-script.php on line 4",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:32:57 UTC] PHP Warning:  Undefined variable $wpdb in /wordpress/wp-content/plugins/events-handler/install-script.php on line 4",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught Error: Call to a member function get_var() on null in /wordpress/wp-content/plugins/events-handler/install-script.php:4",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:32:57 UTC] PHP Fatal error:  Uncaught Error: Call to a member function get_var() on null in /wordpress/wp-content/plugins/events-handler/install-script.php:4\nStack trace:\n#0 /wordpress/wp-content/plugins/events-handler/events-handler.php(31): include_once()\n#1 /wordpress/wp-includes/class-wp-hook.php(324): plugin_install_script(false)\n#2 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#3 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#4 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_events...', false)\n#5 /internal/eval.php(20): activate_plugin('events-handler/...')\n#6 {main}\n  thrown in /wordpress/wp-content/plugins/events-handler/install-script.php on line 4",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:06 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:06 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "SQLSTATE[HY000]: General error: 1 no such table: wp_eh_add_booking.",
    "level": "FATAL",
    "type": "SQL",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:06 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>SELECT count(BookingId) FROM wp_eh_add_booking</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: SELECT count(BookingId) FROM wp_eh_add_booking | (no parameters)</li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[HY000]: General error: 1 no such table: wp_eh_add_booking.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-includes/class-wpdb.php(3031): WP_SQLite_DB->query('SELECT count(Bo...')\n#2 /wordpress/wp-content/plugins/events-handler/lib/event-handler-class.php(320): wpdb->get_var('SELECT count(Bo...')\n#3 /wordpress/wp-content/plugins/events-handler/events-handler.php(27): require_once('/wordpress/wp-c...')\n#4 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')\n#5 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('events-handler/...')\n#6 /internal/eval.php(20): activate_plugin('events-handler/...')\n#7 {main}</pre>\n for query SELECT count(BookingId) FROM wp_eh_add_booking made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/events-handler/events-handler.php'), require_once('/plugins/events-handler/lib/event-handler-class.php'), WP_SQLite_DB->query, WP_SQLite_DB->print_error",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /wordpress/wp-content/plugins/events-handler/install-script.php:4",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:06 UTC] PHP Fatal error:  Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /wordpress/wp-content/plugins/events-handler/install-script.php:4\nStack trace:\n#0 /wordpress/wp-content/plugins/events-handler/events-handler.php(31): include_once()\n#1 /wordpress/wp-includes/class-wp-hook.php(324): plugin_install_script(false)\n#2 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#3 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#4 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_events...', false)\n#5 /internal/eval.php(20): activate_plugin('events-handler/...')\n#6 {main}\n  thrown in /wordpress/wp-content/plugins/events-handler/install-script.php on line 4",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:14 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query argument of wpdb::prepare() must have a placeholder. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 3.9.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:14 UTC] PHP Notice:  Function wpdb::prepare was called <strong>incorrectly</strong>. The query does not contain the correct number of placeholders (0) for the number of arguments passed (1). Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 4.8.3.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "SQLSTATE[HY000]: General error: 1 no such table: wp_eh_add_booking.",
    "level": "FATAL",
    "type": "SQL",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:15 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>SELECT count(BookingId) FROM wp_eh_add_booking</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: SELECT count(BookingId) FROM wp_eh_add_booking | (no parameters)</li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[HY000]: General error: 1 no such table: wp_eh_add_booking.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-includes/class-wpdb.php(3031): WP_SQLite_DB->query('SELECT count(Bo...')\n#2 /wordpress/wp-content/plugins/events-handler/lib/event-handler-class.php(320): wpdb->get_var('SELECT count(Bo...')\n#3 /wordpress/wp-content/plugins/events-handler/events-handler.php(27): require_once('/wordpress/wp-c...')\n#4 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')\n#5 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('events-handler/...')\n#6 /internal/eval.php(20): activate_plugin('events-handler/...')\n#7 {main}</pre>\n for query SELECT count(BookingId) FROM wp_eh_add_booking made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/events-handler/events-handler.php'), require_once('/plugins/events-handler/lib/event-handler-class.php'), WP_SQLite_DB->query, WP_SQLite_DB->print_error",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /wordpress/wp-content/plugins/events-handler/install-script.php:4",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:15 UTC] PHP Fatal error:  Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /wordpress/wp-content/plugins/events-handler/install-script.php:4\nStack trace:\n#0 /wordpress/wp-content/plugins/events-handler/events-handler.php(31): include_once()\n#1 /wordpress/wp-includes/class-wp-hook.php(324): plugin_install_script(false)\n#2 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#3 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#4 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_events...', false)\n#5 /internal/eval.php(20): activate_plugin('events-handler/...')\n#6 {main}\n  thrown in /wordpress/wp-content/plugins/events-handler/install-script.php on line 4",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.",
    "level": "FATAL",
    "type": "SQL",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:33 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>CREATE TABLE IF NOT EXISTS wp_everypay_tokenization (\n          id INT NOT NULL AUTO_INCREMENT,\n          wp_user_id bigint(20) UNSIGNED,\n          friendly_name VARCHAR(100) NOT NULL,\n          customer_token VARCHAR(100) NOT NULL,\n          crd VARCHAR(100) NOT NULL,\n          card_expiration_month INT UNSIGNED NOT NULL,\n          card_expiration_year INT UNSIGNED NOT NULL,\n          card_last_four INT(4) UNSIGNED NOT NULL,\n          card_type VARCHAR(100),\n          FOREIGN KEY (wp_user_id) REFERENCES wp_users(ID),\n          PRIMARY KEY  (id) \n        ) DEFAULT CHARACTER SET utf8mb4</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, id, int</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, wp_user_id, bigint(20) UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, friendly_name, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, customer_token, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, crd, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_expiration_month, int UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_expiration_year, int UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_last_four, int(4) UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_type, varchar(100)</li>\n<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_everypay_tokenization&quot; (\n&quot;id&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;wp_user_id&quot; integer,\n&quot;friendly_name&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;customer_token&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;crd&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;card_expiration_month&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_expiration_year&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_last_four&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_type&quot; text COLLATE NOCASE) | (no parameters)</li>\n<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_everypay_tokenization__&quot; ON &quot;wp_everypay_tokenization&quot; (&quot;&quot;) | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, wp_everypay_tokenization__, </li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-admin/includes/upgrade.php(3280): WP_SQLite_DB->query('CREATE TABLE IF...')\n#2 /wordpress/wp-content/plugins/everypay-payment-gateway/includes/class-wc-everypay-repository.php(127): dbDelta(Array)\n#3 /wordpress/wp-content/plugins/everypay-payment-gateway/everypay-payment-gateway.php(124): WC_Everypay_Repository->create_tokenization_table()\n#4 /wordpress/wp-includes/class-wp-hook.php(324): install(false)\n#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_everyp...', false)\n#8 /internal/eval.php(20): activate_plugin('everypay-paymen...')\n#9 {main}</pre>\n for query CREATE TABLE IF NOT EXISTS wp_everypay_tokenization (\n          id INT NOT NULL AUTO_INCREMENT,\n          wp_user_id bigint(20) UNSIGNED,\n          friendly_name VARCHAR(100) NOT NULL,\n          customer_token VARCHAR(100) NOT NULL,\n          crd VARCHAR(100) NOT NULL,\n          card_expiration_month INT UNSIGNED NOT NULL,\n          card_expiration_year INT UNSIGNED NOT NULL,\n          card_last_four INT(4) UNSIGNED NOT NULL,\n          card_type VARCHAR(100),\n          FOREIGN KEY (wp_user_id) REFERENCES wp_users(ID),\n          PRIMARY KEY  (id) \n        ) DEFAULT CHARACTER SET utf8mb4 made by activate_plugin, do_action('activate_everypay-payment-gateway/everypay-payment-gateway.php'), WP_Hook->do_action, WP_Hook->apply_filters, install, WC_Everypay_Repository->create_tokenization_table, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.",
    "level": "FATAL",
    "type": "SQL",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:33:43 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>CREATE TABLE IF NOT EXISTS wp_everypay_tokenization (\n          id INT NOT NULL AUTO_INCREMENT,\n          wp_user_id bigint(20) UNSIGNED,\n          friendly_name VARCHAR(100) NOT NULL,\n          customer_token VARCHAR(100) NOT NULL,\n          crd VARCHAR(100) NOT NULL,\n          card_expiration_month INT UNSIGNED NOT NULL,\n          card_expiration_year INT UNSIGNED NOT NULL,\n          card_last_four INT(4) UNSIGNED NOT NULL,\n          card_type VARCHAR(100),\n          FOREIGN KEY (wp_user_id) REFERENCES wp_users(ID),\n          PRIMARY KEY  (id) \n        ) DEFAULT CHARACTER SET utf8mb4</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, id, int</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, wp_user_id, bigint(20) UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, friendly_name, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, customer_token, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, crd, varchar(100)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_expiration_month, int UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_expiration_year, int UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_last_four, int(4) UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, card_type, varchar(100)</li>\n<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_everypay_tokenization&quot; (\n&quot;id&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;wp_user_id&quot; integer,\n&quot;friendly_name&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;customer_token&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;crd&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;card_expiration_month&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_expiration_year&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_last_four&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;card_type&quot; text COLLATE NOCASE) | (no parameters)</li>\n<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_everypay_tokenization__&quot; ON &quot;wp_everypay_tokenization&quot; (&quot;&quot;) | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_everypay_tokenization, wp_everypay_tokenization__, </li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-admin/includes/upgrade.php(3280): WP_SQLite_DB->query('CREATE TABLE IF...')\n#2 /wordpress/wp-content/plugins/everypay-payment-gateway/includes/class-wc-everypay-repository.php(127): dbDelta(Array)\n#3 /wordpress/wp-content/plugins/everypay-payment-gateway/everypay-payment-gateway.php(124): WC_Everypay_Repository->create_tokenization_table()\n#4 /wordpress/wp-includes/class-wp-hook.php(324): install(false)\n#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_everyp...', false)\n#8 /internal/eval.php(20): activate_plugin('everypay-paymen...')\n#9 {main}</pre>\n for query CREATE TABLE IF NOT EXISTS wp_everypay_tokenization (\n          id INT NOT NULL AUTO_INCREMENT,\n          wp_user_id bigint(20) UNSIGNED,\n          friendly_name VARCHAR(100) NOT NULL,\n          customer_token VARCHAR(100) NOT NULL,\n          crd VARCHAR(100) NOT NULL,\n          card_expiration_month INT UNSIGNED NOT NULL,\n          card_expiration_year INT UNSIGNED NOT NULL,\n          card_last_four INT(4) UNSIGNED NOT NULL,\n          card_type VARCHAR(100),\n          FOREIGN KEY (wp_user_id) REFERENCES wp_users(ID),\n          PRIMARY KEY  (id) \n        ) DEFAULT CHARACTER SET utf8mb4 made by activate_plugin, do_action('activate_everypay-payment-gateway/everypay-payment-gateway.php'), WP_Hook->do_action, WP_Hook->apply_filters, install, WC_Everypay_Repository->create_tokenization_table, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:35:55 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:35:56 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:36:04 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:36:05 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:36:13 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  },
  {
    "message": "Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "easy-auto-tagger",
    "details": "[29-May-2025 02:36:14 UTC] PHP Deprecated:  Function get_settings is <strong>deprecated</strong> since version 2.1.0! Use get_option() instead. in /wordpress/wp-includes/functions.php on line 6121\n\n    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n  [cause]: Error: Error when executing the blueprint step #1 ({\"step\":\"installPlugin\",\"pluginData\":{\"resource\":\"wordpress.org/plugins\",\"slug\":\"easy-auto-tagger\"},\"options\":{\"activate\":true}}) : Could not download \"https://downloads.wordpress.org/plugin/easy-auto-tagger.latest-stable.zip\".\n  \t\t\t\tCheck if the URL is correct and the server is reachable.\n  \t\t\t\tIf it is reachable, the server might be blocking the request.\n  \t\t\t\tCheck the browser console and network tabs for more information.\n  \n  \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n  \n  \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n  \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n  \t\t\t\tcross-origin file downloads. Learn more about CORS at\n  \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n  \n  \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n  \t\t\t\tHere's how to do that:\n  \n  \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n  \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n  \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n  \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n  \n  \t\t\t\tThe resulting URL should look like this:\n  \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n  \n  \t\t\t\tError:\n  \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/easy-auto-tagger.latest-stable.zip\"\n      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12449:19)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)\n      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)\n      at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n      at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n    [cause]: Error: Could not download \"https://downloads.wordpress.org/plugin/easy-auto-tagger.latest-stable.zip\".\n    \t\t\t\tCheck if the URL is correct and the server is reachable.\n    \t\t\t\tIf it is reachable, the server might be blocking the request.\n    \t\t\t\tCheck the browser console and network tabs for more information.\n    \n    \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n    \n    \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n    \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n    \t\t\t\tcross-origin file downloads. Learn more about CORS at\n    \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n    \n    \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n    \t\t\t\tHere's how to do that:\n    \n    \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n    \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n    \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n    \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n    \n    \t\t\t\tThe resulting URL should look like this:\n    \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n    \n    \t\t\t\tError:\n    \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/easy-auto-tagger.latest-stable.zip\"\n        at Ct.resolve (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:1472:13)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async _.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/util/index.js:45:14)\n  }\n}\n\n",
    "log": "/logs/plugins/e/easy-auto-tagger/error.json"
  }
]
