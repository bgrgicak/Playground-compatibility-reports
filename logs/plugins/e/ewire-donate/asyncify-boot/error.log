file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/run-cli-j-geJYS3.js:325
        throw new Error($, { cause: h });
              ^

Error: [06-Jul-2025 22:29:48 UTC] PHP Deprecated:  Required parameter $currentElementId follows optional parameter $elementInformations in /wordpress/wp-content/plugins/evarisk/include/lib/users/groups.class.php on line 443
[06-Jul-2025 22:29:48 UTC] PHP Deprecated:  Required parameter $currentElementId follows optional parameter $elementInformations in /wordpress/wp-content/plugins/evarisk/include/lib/permission.class.php on line 639
[06-Jul-2025 22:29:48 UTC] PHP Deprecated:  Required parameter $limiteValidite follows optional parameter $valeur in /wordpress/wp-content/plugins/evarisk/include/lib/veilleReglementaire/evaAnswerToQuestion.class.php on line 222
[06-Jul-2025 22:29:48 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>SELECT id
			FROM wp_eva__ged_documents
			WHERE parDefaut = 'oui'
				AND status = 'valid'
				AND categorie = 'fiche_de_poste'
			ORDER BY dateCreation
			LIMIT 1</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT `id` FROM `wp_eva__ged_documents` WHERE `parDefaut` = 'oui' AND `status` = 'valid' AND `categorie` = 'fiche_de_poste' ORDER BY `dateCreation` LIMIT 1 | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 no such table: wp_eva__ged_documents
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 'HY000', Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('SELECT id\r\n\t\t\tF...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('SELECT id\r\n\t\t\tF...')
#3 /wordpress/wp-includes/class-wpdb.php(3065): WP_SQLite_DB->query('SELECT id\r\n\t\t\tF...')
#4 /wordpress/wp-content/plugins/evarisk/include/lib/gestionDocumentaire/gestionDoc.class.php(488): wpdb->get_row('SELECT id\r\n\t\t\tF...')
#5 /wordpress/wp-content/plugins/evarisk/include/lib/db/db_data.php(127): eva_gestionDoc->getDefaultDocument('fiche_de_poste')
#6 /wordpress/wp-content/plugins/evarisk/include/includes.php(86): require_once('/wordpress/wp-c...')
#7 /wordpress/wp-content/plugins/evarisk/evarisk.php(40): require_once('/wordpress/wp-c...')
#8 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#9 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('evarisk/evarisk...')
#10 /internal/eval.php(20): activate_plugin('evarisk/evarisk...')
#11 {main}</pre>
 for query SELECT id
			FROM wp_eva__ged_documents
			WHERE parDefaut = 'oui'
				AND status = 'valid'
				AND categorie = 'fiche_de_poste'
			ORDER BY dateCreation
			LIMIT 1 made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/evarisk/evarisk.php'), require_once('/plugins/evarisk/include/includes.php'), require_once('/plugins/evarisk/include/lib/db/db_data.php'), eva_gestionDoc->getDefaultDocument, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:29:48 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>SELECT * FROM wp_eva__categorie_danger table1 WHERE NOT EXISTS (SELECT * FROM wp_eva__categorie_danger table2 WHERE table1.limiteDroite < table2.limiteDroite AND 1) AND 1</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT * FROM `wp_eva__categorie_danger` `table1` WHERE NOT EXISTS ( SELECT * FROM `wp_eva__categorie_danger` `table2` WHERE `table1`.`limiteDroite` &lt; `table2`.`limiteDroite` AND 1 ) AND 1 | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 no such table: wp_eva__categorie_danger
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 'HY000', Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('SELECT * FROM w...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('SELECT * FROM w...')
#3 /wordpress/wp-includes/class-wpdb.php(3065): WP_SQLite_DB->query('SELECT * FROM w...')
#4 /wordpress/wp-content/plugins/evarisk/include/lib/arborescence.class.php(47): wpdb->get_row('SELECT * FROM w...')
#5 /wordpress/wp-content/plugins/evarisk/include/lib/danger/categorieDangers/categorieDangers.class.php(113): Arborescence::getMaxLimiteDroite('wp_eva__categor...')
#6 /wordpress/wp-content/plugins/evarisk/include/lib/db/db_data.php(349): categorieDangers->saveNewCategorie('Circulations in...')
#7 /wordpress/wp-content/plugins/evarisk/include/includes.php(86): require_once('/wordpress/wp-c...')
#8 /wordpress/wp-content/plugins/evarisk/evarisk.php(40): require_once('/wordpress/wp-c...')
#9 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#10 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('evarisk/evarisk...')
#11 /internal/eval.php(20): activate_plugin('evarisk/evarisk...')
#12 {main}</pre>
 for query SELECT * FROM wp_eva__categorie_danger table1 WHERE NOT EXISTS (SELECT * FROM wp_eva__categorie_danger table2 WHERE table1.limiteDroite < table2.limiteDroite AND 1) AND 1 made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/evarisk/evarisk.php'), require_once('/plugins/evarisk/include/includes.php'), require_once('/plugins/evarisk/include/lib/db/db_data.php'), categorieDangers->saveNewCategorie, Arborescence::getMaxLimiteDroite, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:29:48 UTC] PHP Fatal error:  Uncaught TypeError: Unsupported operand types: string + int in /wordpress/wp-content/plugins/evarisk/include/lib/danger/categorieDangers/categorieDangers.class.php:114
Stack trace:
#0 /wordpress/wp-content/plugins/evarisk/include/lib/db/db_data.php(349): categorieDangers->saveNewCategorie('Circulations in...')
#1 /wordpress/wp-content/plugins/evarisk/include/includes.php(86): require_once('/wordpress/wp-c...')
#2 /wordpress/wp-content/plugins/evarisk/evarisk.php(40): require_once('/wordpress/wp-c...')
#3 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#4 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('evarisk/evarisk...')
#5 /internal/eval.php(20): activate_plugin('evarisk/evarisk...')
#6 {main}
  thrown in /wordpress/wp-content/plugins/evarisk/include/lib/danger/categorieDangers/categorieDangers.class.php on line 114
[06-Jul-2025 22:30:02 UTC] PHP Deprecated:  Required parameter $currentElementId follows optional parameter $elementInformations in /wordpress/wp-content/plugins/evarisk/include/lib/users/groups.class.php on line 443
[06-Jul-2025 22:30:02 UTC] PHP Deprecated:  Required parameter $currentElementId follows optional parameter $elementInformations in /wordpress/wp-content/plugins/evarisk/include/lib/permission.class.php on line 639
[06-Jul-2025 22:30:02 UTC] PHP Deprecated:  Required parameter $limiteValidite follows optional parameter $valeur in /wordpress/wp-content/plugins/evarisk/include/lib/veilleReglementaire/evaAnswerToQuestion.class.php on line 222
[06-Jul-2025 22:30:02 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>SELECT id
			FROM wp_eva__ged_documents
			WHERE parDefaut = 'oui'
				AND status = 'valid'
				AND categorie = 'fiche_de_poste'
			ORDER BY dateCreation
			LIMIT 1</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT `id` FROM `wp_eva__ged_documents` WHERE `parDefaut` = 'oui' AND `status` = 'valid' AND `categorie` = 'fiche_de_poste' ORDER BY `dateCreation` LIMIT 1 | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 no such table: wp_eva__ged_documents
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 'HY000', Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('SELECT id\r\n\t\t\tF...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('SELECT id\r\n\t\t\tF...')
#3 /wordpress/wp-includes/class-wpdb.php(3065): WP_SQLite_DB->query('SELECT id\r\n\t\t\tF...')
#4 /wordpress/wp-content/plugins/evarisk/include/lib/gestionDocumentaire/gestionDoc.class.php(488): wpdb->get_row('SELECT id\r\n\t\t\tF...')
#5 /wordpress/wp-content/plugins/evarisk/include/lib/db/db_data.php(127): eva_gestionDoc->getDefaultDocument('fiche_de_poste')
#6 /wordpress/wp-content/plugins/evarisk/include/includes.php(86): require_once('/wordpress/wp-c...')
#7 /wordpress/wp-content/plugins/evarisk/evarisk.php(40): require_once('/wordpress/wp-c...')
#8 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#9 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('evarisk/evarisk...')
#10 /internal/eval.php(20): activate_plugin('evarisk/evarisk...')
#11 {main}</pre>
 for query SELECT id
			FROM wp_eva__ged_documents
			WHERE parDefaut = 'oui'
				AND status = 'valid'
				AND categorie = 'fiche_de_poste'
			ORDER BY dateCreation
			LIMIT 1 made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/evarisk/evarisk.php'), require_once('/plugins/evarisk/include/includes.php'), require_once('/plugins/evarisk/include/lib/db/db_data.php'), eva_gestionDoc->getDefaultDocument, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:30:02 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>SELECT * FROM wp_eva__categorie_danger table1 WHERE NOT EXISTS (SELECT * FROM wp_eva__categorie_danger table2 WHERE table1.limiteDroite < table2.limiteDroite AND 1) AND 1</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT * FROM `wp_eva__categorie_danger` `table1` WHERE NOT EXISTS ( SELECT * FROM `wp_eva__categorie_danger` `table2` WHERE `table1`.`limiteDroite` &lt; `table2`.`limiteDroite` AND 1 ) AND 1 | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 no such table: wp_eva__categorie_danger
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 'HY000', Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('SELECT * FROM w...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('SELECT * FROM w...')
#3 /wordpress/wp-includes/class-wpdb.php(3065): WP_SQLite_DB->query('SELECT * FROM w...')
#4 /wordpress/wp-content/plugins/evarisk/include/lib/arborescence.class.php(47): wpdb->get_row('SELECT * FROM w...')
#5 /wordpress/wp-content/plugins/evarisk/include/lib/danger/categorieDangers/categorieDangers.class.php(113): Arborescence::getMaxLimiteDroite('wp_eva__categor...')
#6 /wordpress/wp-content/plugins/evarisk/include/lib/db/db_data.php(349): categorieDangers->saveNewCategorie('Circulations in...')
#7 /wordpress/wp-content/plugins/evarisk/include/includes.php(86): require_once('/wordpress/wp-c...')
#8 /wordpress/wp-content/plugins/evarisk/evarisk.php(40): require_once('/wordpress/wp-c...')
#9 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#10 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('evarisk/evarisk...')
#11 /internal/eval.php(20): activate_plugin('evarisk/evarisk...')
#12 {main}</pre>
 for query SELECT * FROM wp_eva__categorie_danger table1 WHERE NOT EXISTS (SELECT * FROM wp_eva__categorie_danger table2 WHERE table1.limiteDroite < table2.limiteDroite AND 1) AND 1 made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/evarisk/evarisk.php'), require_once('/plugins/evarisk/include/includes.php'), require_once('/plugins/evarisk/include/lib/db/db_data.php'), categorieDangers->saveNewCategorie, Arborescence::getMaxLimiteDroite, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:30:02 UTC] PHP Fatal error:  Uncaught TypeError: Unsupported operand types: string + int in /wordpress/wp-content/plugins/evarisk/include/lib/danger/categorieDangers/categorieDangers.class.php:114
Stack trace:
#0 /wordpress/wp-content/plugins/evarisk/include/lib/db/db_data.php(349): categorieDangers->saveNewCategorie('Circulations in...')
#1 /wordpress/wp-content/plugins/evarisk/include/includes.php(86): require_once('/wordpress/wp-c...')
#2 /wordpress/wp-content/plugins/evarisk/evarisk.php(40): require_once('/wordpress/wp-c...')
#3 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#4 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('evarisk/evarisk...')
#5 /internal/eval.php(20): activate_plugin('evarisk/evarisk...')
#6 {main}
  thrown in /wordpress/wp-content/plugins/evarisk/include/lib/danger/categorieDangers/categorieDangers.class.php on line 114
[06-Jul-2025 22:30:16 UTC] PHP Deprecated:  Required parameter $currentElementId follows optional parameter $elementInformations in /wordpress/wp-content/plugins/evarisk/include/lib/users/groups.class.php on line 443
[06-Jul-2025 22:30:16 UTC] PHP Deprecated:  Required parameter $currentElementId follows optional parameter $elementInformations in /wordpress/wp-content/plugins/evarisk/include/lib/permission.class.php on line 639
[06-Jul-2025 22:30:16 UTC] PHP Deprecated:  Required parameter $limiteValidite follows optional parameter $valeur in /wordpress/wp-content/plugins/evarisk/include/lib/veilleReglementaire/evaAnswerToQuestion.class.php on line 222
[06-Jul-2025 22:30:16 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>SELECT id
			FROM wp_eva__ged_documents
			WHERE parDefaut = 'oui'
				AND status = 'valid'
				AND categorie = 'fiche_de_poste'
			ORDER BY dateCreation
			LIMIT 1</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT `id` FROM `wp_eva__ged_documents` WHERE `parDefaut` = 'oui' AND `status` = 'valid' AND `categorie` = 'fiche_de_poste' ORDER BY `dateCreation` LIMIT 1 | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 no such table: wp_eva__ged_documents
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 'HY000', Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('SELECT id\r\n\t\t\tF...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('SELECT id\r\n\t\t\tF...')
#3 /wordpress/wp-includes/class-wpdb.php(3065): WP_SQLite_DB->query('SELECT id\r\n\t\t\tF...')
#4 /wordpress/wp-content/plugins/evarisk/include/lib/gestionDocumentaire/gestionDoc.class.php(488): wpdb->get_row('SELECT id\r\n\t\t\tF...')
#5 /wordpress/wp-content/plugins/evarisk/include/lib/db/db_data.php(127): eva_gestionDoc->getDefaultDocument('fiche_de_poste')
#6 /wordpress/wp-content/plugins/evarisk/include/includes.php(86): require_once('/wordpress/wp-c...')
#7 /wordpress/wp-content/plugins/evarisk/evarisk.php(40): require_once('/wordpress/wp-c...')
#8 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#9 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('evarisk/evarisk...')
#10 /internal/eval.php(20): activate_plugin('evarisk/evarisk...')
#11 {main}</pre>
 for query SELECT id
			FROM wp_eva__ged_documents
			WHERE parDefaut = 'oui'
				AND status = 'valid'
				AND categorie = 'fiche_de_poste'
			ORDER BY dateCreation
			LIMIT 1 made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/evarisk/evarisk.php'), require_once('/plugins/evarisk/include/includes.php'), require_once('/plugins/evarisk/include/lib/db/db_data.php'), eva_gestionDoc->getDefaultDocument, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:30:16 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>SELECT * FROM wp_eva__categorie_danger table1 WHERE NOT EXISTS (SELECT * FROM wp_eva__categorie_danger table2 WHERE table1.limiteDroite < table2.limiteDroite AND 1) AND 1</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT * FROM `wp_eva__categorie_danger` `table1` WHERE NOT EXISTS ( SELECT * FROM `wp_eva__categorie_danger` `table2` WHERE `table1`.`limiteDroite` &lt; `table2`.`limiteDroite` AND 1 ) AND 1 | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 no such table: wp_eva__categorie_danger
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 'HY000', Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('SELECT * FROM w...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('SELECT * FROM w...')
#3 /wordpress/wp-includes/class-wpdb.php(3065): WP_SQLite_DB->query('SELECT * FROM w...')
#4 /wordpress/wp-content/plugins/evarisk/include/lib/arborescence.class.php(47): wpdb->get_row('SELECT * FROM w...')
#5 /wordpress/wp-content/plugins/evarisk/include/lib/danger/categorieDangers/categorieDangers.class.php(113): Arborescence::getMaxLimiteDroite('wp_eva__categor...')
#6 /wordpress/wp-content/plugins/evarisk/include/lib/db/db_data.php(349): categorieDangers->saveNewCategorie('Circulations in...')
#7 /wordpress/wp-content/plugins/evarisk/include/includes.php(86): require_once('/wordpress/wp-c...')
#8 /wordpress/wp-content/plugins/evarisk/evarisk.php(40): require_once('/wordpress/wp-c...')
#9 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#10 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('evarisk/evarisk...')
#11 /internal/eval.php(20): activate_plugin('evarisk/evarisk...')
#12 {main}</pre>
 for query SELECT * FROM wp_eva__categorie_danger table1 WHERE NOT EXISTS (SELECT * FROM wp_eva__categorie_danger table2 WHERE table1.limiteDroite < table2.limiteDroite AND 1) AND 1 made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/evarisk/evarisk.php'), require_once('/plugins/evarisk/include/includes.php'), require_once('/plugins/evarisk/include/lib/db/db_data.php'), categorieDangers->saveNewCategorie, Arborescence::getMaxLimiteDroite, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:30:16 UTC] PHP Fatal error:  Uncaught TypeError: Unsupported operand types: string + int in /wordpress/wp-content/plugins/evarisk/include/lib/danger/categorieDangers/categorieDangers.class.php:114
Stack trace:
#0 /wordpress/wp-content/plugins/evarisk/include/lib/db/db_data.php(349): categorieDangers->saveNewCategorie('Circulations in...')
#1 /wordpress/wp-content/plugins/evarisk/include/includes.php(86): require_once('/wordpress/wp-c...')
#2 /wordpress/wp-content/plugins/evarisk/evarisk.php(40): require_once('/wordpress/wp-c...')
#3 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#4 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('evarisk/evarisk...')
#5 /internal/eval.php(20): activate_plugin('evarisk/evarisk...')
#6 {main}
  thrown in /wordpress/wp-content/plugins/evarisk/include/lib/danger/categorieDangers/categorieDangers.class.php on line 114
[06-Jul-2025 22:30:29 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>INSERT INTO wp_clndr_instances SET instance_name='Full size calendar', instance_slug='full-size-calendar', instance_template='
<div class=\"clndr-controls\">
    <div class=\"current-month\"><%= month %> <%= year %></div>
    <div class=\"clndr-nav clndr-clearfix\">
        <div class=\"clndr-previous-button\">‹</div>
        <div class=\"clndr-next-button\">›</div>
    </div>
</div>
<div class=\"clndr-grid\">
    <div class=\"days-of-the-week clndr-clearfix\">
        <% _.each(daysOfTheWeek, function(day) { %>
        <div class=\"header-day\"><%= day %></div>
        <% }); %>
    </div>
    <div class=\"days clndr-clearfix\">
        <% _.each(days, function(day) { %>
        <div class=\"<%= day.classes %>\" id=\"<%= day.id %>\"><span class=\"day-number\"><%= day.day %></span></div>
        <% }); %>
    </div>
</div>
<div class=\"event-listing\">
    <div class=\"event-listing-title\">Events</div>
    <% _.each(eventsThisMonth, function(event) { %>
        <% if (event.url) {  %><a target=\"<%= event.url_target %>\" href=\"<%= event.url %>\" <% } else {  %><div <% }  %> class=\"event-item clndr-clearfix\">
            <span class=\"event-item-date\">
                <% if (event.end != event.start) {
                    startMY = moment(event.start).format(\"MM YY\");
                    endMY = moment(event.end).format(\"MM YY\");
                    if (startMY === endMY) { %>
                        <%= moment(event.start).format(\"D\") %>–<%= moment(event.end).format(\"D MMMM\") %>
                    <% } else { %>
                        <%= moment(event.start).format(\"D MMMM\") %> – <%= moment(event.end).format(\"D MMMM\") %>
                    <% }
                } else {  %>
                    <%= moment(event.start).format(\"D MMMM\") %>
                <% } %>
            </span>
            <span class=\"event-item-name\"><%= event.title %></span>
            <% if (event.time) {  %>
                <span class=\"event-item-time\"><%= event.time %></span>
            <% } %>
            <% if (event.desc) {  %>
                <span class=\"event-item-desc\"><%= event.desc %></span>
            <% } %>
        <% if (event.url) {  %></a><% } else {  %></div><% }  %>
    <% }); %>
</div>', instance_options='
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][\"element\"];
    thisCLNDR.find(\".day\").each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(\"alternate-bg\"); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(\".event-item\").length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(\".event-listing\").append(
            \"<div style=\'text-align:center;\' class=\'event-item\'>No events found</div>\"
        );
    }
},
weekOffset: 1'</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: INSERT INTO `wp_clndr_instances` SET `instance_name` = 'Full size calendar' , `instance_slug` = 'full-size-calendar' , `instance_template` = '
&lt;div class=&quot;clndr-controls&quot;&gt;
    &lt;div class=&quot;current-month&quot;&gt;&lt;%= month %&gt; &lt;%= year %&gt;&lt;/div&gt;
    &lt;div class=&quot;clndr-nav clndr-clearfix&quot;&gt;
        &lt;div class=&quot;clndr-previous-button&quot;&gt;‹&lt;/div&gt;
        &lt;div class=&quot;clndr-next-button&quot;&gt;›&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;clndr-grid&quot;&gt;
    &lt;div class=&quot;days-of-the-week clndr-clearfix&quot;&gt;
        &lt;% _.each(daysOfTheWeek, function(day) { %&gt;
        &lt;div class=&quot;header-day&quot;&gt;&lt;%= day %&gt;&lt;/div&gt;
        &lt;% }); %&gt;
    &lt;/div&gt;
    &lt;div class=&quot;days clndr-clearfix&quot;&gt;
        &lt;% _.each(days, function(day) { %&gt;
        &lt;div class=&quot;&lt;%= day.classes %&gt;&quot; id=&quot;&lt;%= day.id %&gt;&quot;&gt;&lt;span class=&quot;day-number&quot;&gt;&lt;%= day.day %&gt;&lt;/span&gt;&lt;/div&gt;
        &lt;% }); %&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;event-listing&quot;&gt;
    &lt;div class=&quot;event-listing-title&quot;&gt;Events&lt;/div&gt;
    &lt;% _.each(eventsThisMonth, function(event) { %&gt;
        &lt;% if (event.url) {  %&gt;&lt;a target=&quot;&lt;%= event.url_target %&gt;&quot; href=&quot;&lt;%= event.url %&gt;&quot; &lt;% } else {  %&gt;&lt;div &lt;% }  %&gt; class=&quot;event-item clndr-clearfix&quot;&gt;
            &lt;span class=&quot;event-item-date&quot;&gt;
                &lt;% if (event.end != event.start) {
                    startMY = moment(event.start).format(&quot;MM YY&quot;);
                    endMY = moment(event.end).format(&quot;MM YY&quot;);
                    if (startMY === endMY) { %&gt;
                        &lt;%= moment(event.start).format(&quot;D&quot;) %&gt;–&lt;%= moment(event.end).format(&quot;D MMMM&quot;) %&gt;
                    &lt;% } else { %&gt;
                        &lt;%= moment(event.start).format(&quot;D MMMM&quot;) %&gt; – &lt;%= moment(event.end).format(&quot;D MMMM&quot;) %&gt;
                    &lt;% }
                } else {  %&gt;
                    &lt;%= moment(event.start).format(&quot;D MMMM&quot;) %&gt;
                &lt;% } %&gt;
            &lt;/span&gt;
            &lt;span class=&quot;event-item-name&quot;&gt;&lt;%= event.title %&gt;&lt;/span&gt;
            &lt;% if (event.time) {  %&gt;
                &lt;span class=&quot;event-item-time&quot;&gt;&lt;%= event.time %&gt;&lt;/span&gt;
            &lt;% } %&gt;
            &lt;% if (event.desc) {  %&gt;
                &lt;span class=&quot;event-item-desc&quot;&gt;&lt;%= event.desc %&gt;&lt;/span&gt;
            &lt;% } %&gt;
        &lt;% if (event.url) {  %&gt;&lt;/a&gt;&lt;% } else {  %&gt;&lt;/div&gt;&lt;% }  %&gt;
    &lt;% }); %&gt;
&lt;/div&gt;' , `instance_options` = '
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][&quot;element&quot;];
    thisCLNDR.find(&quot;.day&quot;).each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(&quot;alternate-bg&quot;); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(&quot;.event-item&quot;).length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(&quot;.event-listing&quot;).append(
            &quot;&lt;div style=''text-align:center;'' class=''event-item''&gt;No events found&lt;/div&gt;&quot;
        );
    }
},
weekOffset: 1' | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 near "SET": syntax error
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 'HY000', Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('INSERT INTO wp_...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('INSERT INTO wp_...')
#3 /wordpress/wp-content/plugins/event-clndr/clndr.php(168): WP_SQLite_DB->query('INSERT INTO wp_...')
#4 /wordpress/wp-includes/class-wp-hook.php(324): CLDNR_init('')
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-settings.php(578): do_action('plugins_loaded')
#8 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#9 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#10 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#11 {main}</pre>
 for query INSERT INTO wp_clndr_instances SET instance_name='Full size calendar', instance_slug='full-size-calendar', instance_template='
<div class=\"clndr-controls\">
    <div class=\"current-month\"><%= month %> <%= year %></div>
    <div class=\"clndr-nav clndr-clearfix\">
        <div class=\"clndr-previous-button\">‹</div>
        <div class=\"clndr-next-button\">›</div>
    </div>
</div>
<div class=\"clndr-grid\">
    <div class=\"days-of-the-week clndr-clearfix\">
        <% _.each(daysOfTheWeek, function(day) { %>
        <div class=\"header-day\"><%= day %></div>
        <% }); %>
    </div>
    <div class=\"days clndr-clearfix\">
        <% _.each(days, function(day) { %>
        <div class=\"<%= day.classes %>\" id=\"<%= day.id %>\"><span class=\"day-number\"><%= day.day %></span></div>
        <% }); %>
    </div>
</div>
<div class=\"event-listing\">
    <div class=\"event-listing-title\">Events</div>
    <% _.each(eventsThisMonth, function(event) { %>
        <% if (event.url) {  %><a target=\"<%= event.url_target %>\" href=\"<%= event.url %>\" <% } else {  %><div <% }  %> class=\"event-item clndr-clearfix\">
            <span class=\"event-item-date\">
                <% if (event.end != event.start) {
                    startMY = moment(event.start).format(\"MM YY\");
                    endMY = moment(event.end).format(\"MM YY\");
                    if (startMY === endMY) { %>
                        <%= moment(event.start).format(\"D\") %>–<%= moment(event.end).format(\"D MMMM\") %>
                    <% } else { %>
                        <%= moment(event.start).format(\"D MMMM\") %> – <%= moment(event.end).format(\"D MMMM\") %>
                    <% }
                } else {  %>
                    <%= moment(event.start).format(\"D MMMM\") %>
                <% } %>
            </span>
            <span class=\"event-item-name\"><%= event.title %></span>
            <% if (event.time) {  %>
                <span class=\"event-item-time\"><%= event.time %></span>
            <% } %>
            <% if (event.desc) {  %>
                <span class=\"event-item-desc\"><%= event.desc %></span>
            <% } %>
        <% if (event.url) {  %></a><% } else {  %></div><% }  %>
    <% }); %>
</div>', instance_options='
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][\"element\"];
    thisCLNDR.find(\".day\").each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(\"alternate-bg\"); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(\".event-item\").length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(\".event-listing\").append(
            \"<div style=\'text-align:center;\' class=\'event-item\'>No events found</div>\"
        );
    }
},
weekOffset: 1' made by require_once('wp-load.php'), require_once('wp-config.php'), require_once('wp-settings.php'), do_action('plugins_loaded'), WP_Hook->do_action, WP_Hook->apply_filters, CLDNR_init, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:30:29 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>INSERT INTO wp_clndr_instances SET instance_name='Mini calendar', instance_slug='mini-calendar', instance_template='
<div class=\"clndr-controls\">
    <div class=\"current-month\"><%= month %> <%= year %></div>
    <div class=\"clndr-nav clndr-clearfix\">
        <div class=\"clndr-previous-button\">‹</div>
        <div class=\"clndr-next-button\">›</div>
    </div>
</div>
<div class=\"clndr-grid\">
    <div class=\"days-of-the-week clndr-clearfix\">
        <% _.each(daysOfTheWeek, function(day) { %>
        <div class=\"header-day\"><%= day %></div>
        <% }); %>
    </div>
    <div class=\"days clndr-clearfix\">
        <% _.each(days, function(day) { %>
        <div class=\"<%= day.classes %>\" id=\"<%= day.id %>\"><span class=\"day-number\"><%= day.day %></span></div>
        <% }); %>
    </div>
</div>
<div class=\"event-listing\">
    <div class=\"event-listing-title\">Events</div>
    <% _.each(eventsThisMonth, function(event) { %>
        <% if (event.url) {  %><a target=\"<%= event.url_target %>\" href=\"<%= event.url %>\" <% } else {  %><div <% }  %> class=\"event-item clndr-clearfix\">
            <span class=\"event-item-date\">
                <% if (event.end != event.start) {
                    startMY = moment(event.start).format(\"MM YY\");
                    endMY = moment(event.end).format(\"MM YY\");
                    if (startMY === endMY) { %>
                        <%= moment(event.start).format(\"D\") %>–<%= moment(event.end).format(\"D MMMM\") %>
                    <% } else { %>
                        <%= moment(event.start).format(\"D MMMM\") %> – <%= moment(event.end).format(\"D MMMM\") %>
                    <% }
                } else {  %>
                    <%= moment(event.start).format(\"D MMMM\") %>
                <% } %>
            </span>
            <span class=\"event-item-name\"><%= event.title %></span>
            <% if (event.time) {  %>
                <span class=\"event-item-time\"><%= event.time %></span>
            <% } %>
            <% if (event.desc) {  %>
                <span class=\"event-item-desc\"><%= event.desc %></span>
            <% } %>
        <% if (event.url) {  %></a><% } else {  %></div><% }  %>
    <% }); %>
</div>', instance_options='
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][\"element\"];
    thisCLNDR.find(\".day\").each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(\"alternate-bg\"); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(\".event-item\").length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(\".event-listing\").append(
            \"<div style=\'text-align:center;\' class=\'event-item\'>No events found</div>\"
        );
    }
},
weekOffset: 1'</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: INSERT INTO `wp_clndr_instances` SET `instance_name` = 'Mini calendar' , `instance_slug` = 'mini-calendar' , `instance_template` = '
&lt;div class=&quot;clndr-controls&quot;&gt;
    &lt;div class=&quot;current-month&quot;&gt;&lt;%= month %&gt; &lt;%= year %&gt;&lt;/div&gt;
    &lt;div class=&quot;clndr-nav clndr-clearfix&quot;&gt;
        &lt;div class=&quot;clndr-previous-button&quot;&gt;‹&lt;/div&gt;
        &lt;div class=&quot;clndr-next-button&quot;&gt;›&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;clndr-grid&quot;&gt;
    &lt;div class=&quot;days-of-the-week clndr-clearfix&quot;&gt;
        &lt;% _.each(daysOfTheWeek, function(day) { %&gt;
        &lt;div class=&quot;header-day&quot;&gt;&lt;%= day %&gt;&lt;/div&gt;
        &lt;% }); %&gt;
    &lt;/div&gt;
    &lt;div class=&quot;days clndr-clearfix&quot;&gt;
        &lt;% _.each(days, function(day) { %&gt;
        &lt;div class=&quot;&lt;%= day.classes %&gt;&quot; id=&quot;&lt;%= day.id %&gt;&quot;&gt;&lt;span class=&quot;day-number&quot;&gt;&lt;%= day.day %&gt;&lt;/span&gt;&lt;/div&gt;
        &lt;% }); %&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;event-listing&quot;&gt;
    &lt;div class=&quot;event-listing-title&quot;&gt;Events&lt;/div&gt;
    &lt;% _.each(eventsThisMonth, function(event) { %&gt;
        &lt;% if (event.url) {  %&gt;&lt;a target=&quot;&lt;%= event.url_target %&gt;&quot; href=&quot;&lt;%= event.url %&gt;&quot; &lt;% } else {  %&gt;&lt;div &lt;% }  %&gt; class=&quot;event-item clndr-clearfix&quot;&gt;
            &lt;span class=&quot;event-item-date&quot;&gt;
                &lt;% if (event.end != event.start) {
                    startMY = moment(event.start).format(&quot;MM YY&quot;);
                    endMY = moment(event.end).format(&quot;MM YY&quot;);
                    if (startMY === endMY) { %&gt;
                        &lt;%= moment(event.start).format(&quot;D&quot;) %&gt;–&lt;%= moment(event.end).format(&quot;D MMMM&quot;) %&gt;
                    &lt;% } else { %&gt;
                        &lt;%= moment(event.start).format(&quot;D MMMM&quot;) %&gt; – &lt;%= moment(event.end).format(&quot;D MMMM&quot;) %&gt;
                    &lt;% }
                } else {  %&gt;
                    &lt;%= moment(event.start).format(&quot;D MMMM&quot;) %&gt;
                &lt;% } %&gt;
            &lt;/span&gt;
            &lt;span class=&quot;event-item-name&quot;&gt;&lt;%= event.title %&gt;&lt;/span&gt;
            &lt;% if (event.time) {  %&gt;
                &lt;span class=&quot;event-item-time&quot;&gt;&lt;%= event.time %&gt;&lt;/span&gt;
            &lt;% } %&gt;
            &lt;% if (event.desc) {  %&gt;
                &lt;span class=&quot;event-item-desc&quot;&gt;&lt;%= event.desc %&gt;&lt;/span&gt;
            &lt;% } %&gt;
        &lt;% if (event.url) {  %&gt;&lt;/a&gt;&lt;% } else {  %&gt;&lt;/div&gt;&lt;% }  %&gt;
    &lt;% }); %&gt;
&lt;/div&gt;' , `instance_options` = '
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][&quot;element&quot;];
    thisCLNDR.find(&quot;.day&quot;).each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(&quot;alternate-bg&quot;); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(&quot;.event-item&quot;).length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(&quot;.event-listing&quot;).append(
            &quot;&lt;div style=''text-align:center;'' class=''event-item''&gt;No events found&lt;/div&gt;&quot;
        );
    }
},
weekOffset: 1' | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 near "SET": syntax error
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 'HY000', Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('INSERT INTO wp_...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('INSERT INTO wp_...')
#3 /wordpress/wp-content/plugins/event-clndr/clndr.php(173): WP_SQLite_DB->query('INSERT INTO wp_...')
#4 /wordpress/wp-includes/class-wp-hook.php(324): CLDNR_init('')
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-settings.php(578): do_action('plugins_loaded')
#8 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#9 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#10 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#11 {main}</pre>
 for query INSERT INTO wp_clndr_instances SET instance_name='Mini calendar', instance_slug='mini-calendar', instance_template='
<div class=\"clndr-controls\">
    <div class=\"current-month\"><%= month %> <%= year %></div>
    <div class=\"clndr-nav clndr-clearfix\">
        <div class=\"clndr-previous-button\">‹</div>
        <div class=\"clndr-next-button\">›</div>
    </div>
</div>
<div class=\"clndr-grid\">
    <div class=\"days-of-the-week clndr-clearfix\">
        <% _.each(daysOfTheWeek, function(day) { %>
        <div class=\"header-day\"><%= day %></div>
        <% }); %>
    </div>
    <div class=\"days clndr-clearfix\">
        <% _.each(days, function(day) { %>
        <div class=\"<%= day.classes %>\" id=\"<%= day.id %>\"><span class=\"day-number\"><%= day.day %></span></div>
        <% }); %>
    </div>
</div>
<div class=\"event-listing\">
    <div class=\"event-listing-title\">Events</div>
    <% _.each(eventsThisMonth, function(event) { %>
        <% if (event.url) {  %><a target=\"<%= event.url_target %>\" href=\"<%= event.url %>\" <% } else {  %><div <% }  %> class=\"event-item clndr-clearfix\">
            <span class=\"event-item-date\">
                <% if (event.end != event.start) {
                    startMY = moment(event.start).format(\"MM YY\");
                    endMY = moment(event.end).format(\"MM YY\");
                    if (startMY === endMY) { %>
                        <%= moment(event.start).format(\"D\") %>–<%= moment(event.end).format(\"D MMMM\") %>
                    <% } else { %>
                        <%= moment(event.start).format(\"D MMMM\") %> – <%= moment(event.end).format(\"D MMMM\") %>
                    <% }
                } else {  %>
                    <%= moment(event.start).format(\"D MMMM\") %>
                <% } %>
            </span>
            <span class=\"event-item-name\"><%= event.title %></span>
            <% if (event.time) {  %>
                <span class=\"event-item-time\"><%= event.time %></span>
            <% } %>
            <% if (event.desc) {  %>
                <span class=\"event-item-desc\"><%= event.desc %></span>
            <% } %>
        <% if (event.url) {  %></a><% } else {  %></div><% }  %>
    <% }); %>
</div>', instance_options='
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][\"element\"];
    thisCLNDR.find(\".day\").each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(\"alternate-bg\"); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(\".event-item\").length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(\".event-listing\").append(
            \"<div style=\'text-align:center;\' class=\'event-item\'>No events found</div>\"
        );
    }
},
weekOffset: 1' made by require_once('wp-load.php'), require_once('wp-config.php'), require_once('wp-settings.php'), do_action('plugins_loaded'), WP_Hook->do_action, WP_Hook->apply_filters, CLDNR_init, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:30:38 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>INSERT INTO wp_clndr_instances SET instance_name='Full size calendar', instance_slug='full-size-calendar', instance_template='
<div class=\"clndr-controls\">
    <div class=\"current-month\"><%= month %> <%= year %></div>
    <div class=\"clndr-nav clndr-clearfix\">
        <div class=\"clndr-previous-button\">‹</div>
        <div class=\"clndr-next-button\">›</div>
    </div>
</div>
<div class=\"clndr-grid\">
    <div class=\"days-of-the-week clndr-clearfix\">
        <% _.each(daysOfTheWeek, function(day) { %>
        <div class=\"header-day\"><%= day %></div>
        <% }); %>
    </div>
    <div class=\"days clndr-clearfix\">
        <% _.each(days, function(day) { %>
        <div class=\"<%= day.classes %>\" id=\"<%= day.id %>\"><span class=\"day-number\"><%= day.day %></span></div>
        <% }); %>
    </div>
</div>
<div class=\"event-listing\">
    <div class=\"event-listing-title\">Events</div>
    <% _.each(eventsThisMonth, function(event) { %>
        <% if (event.url) {  %><a target=\"<%= event.url_target %>\" href=\"<%= event.url %>\" <% } else {  %><div <% }  %> class=\"event-item clndr-clearfix\">
            <span class=\"event-item-date\">
                <% if (event.end != event.start) {
                    startMY = moment(event.start).format(\"MM YY\");
                    endMY = moment(event.end).format(\"MM YY\");
                    if (startMY === endMY) { %>
                        <%= moment(event.start).format(\"D\") %>–<%= moment(event.end).format(\"D MMMM\") %>
                    <% } else { %>
                        <%= moment(event.start).format(\"D MMMM\") %> – <%= moment(event.end).format(\"D MMMM\") %>
                    <% }
                } else {  %>
                    <%= moment(event.start).format(\"D MMMM\") %>
                <% } %>
            </span>
            <span class=\"event-item-name\"><%= event.title %></span>
            <% if (event.time) {  %>
                <span class=\"event-item-time\"><%= event.time %></span>
            <% } %>
            <% if (event.desc) {  %>
                <span class=\"event-item-desc\"><%= event.desc %></span>
            <% } %>
        <% if (event.url) {  %></a><% } else {  %></div><% }  %>
    <% }); %>
</div>', instance_options='
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][\"element\"];
    thisCLNDR.find(\".day\").each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(\"alternate-bg\"); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(\".event-item\").length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(\".event-listing\").append(
            \"<div style=\'text-align:center;\' class=\'event-item\'>No events found</div>\"
        );
    }
},
weekOffset: 1'</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: INSERT INTO `wp_clndr_instances` SET `instance_name` = 'Full size calendar' , `instance_slug` = 'full-size-calendar' , `instance_template` = '
&lt;div class=&quot;clndr-controls&quot;&gt;
    &lt;div class=&quot;current-month&quot;&gt;&lt;%= month %&gt; &lt;%= year %&gt;&lt;/div&gt;
    &lt;div class=&quot;clndr-nav clndr-clearfix&quot;&gt;
        &lt;div class=&quot;clndr-previous-button&quot;&gt;‹&lt;/div&gt;
        &lt;div class=&quot;clndr-next-button&quot;&gt;›&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;clndr-grid&quot;&gt;
    &lt;div class=&quot;days-of-the-week clndr-clearfix&quot;&gt;
        &lt;% _.each(daysOfTheWeek, function(day) { %&gt;
        &lt;div class=&quot;header-day&quot;&gt;&lt;%= day %&gt;&lt;/div&gt;
        &lt;% }); %&gt;
    &lt;/div&gt;
    &lt;div class=&quot;days clndr-clearfix&quot;&gt;
        &lt;% _.each(days, function(day) { %&gt;
        &lt;div class=&quot;&lt;%= day.classes %&gt;&quot; id=&quot;&lt;%= day.id %&gt;&quot;&gt;&lt;span class=&quot;day-number&quot;&gt;&lt;%= day.day %&gt;&lt;/span&gt;&lt;/div&gt;
        &lt;% }); %&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;event-listing&quot;&gt;
    &lt;div class=&quot;event-listing-title&quot;&gt;Events&lt;/div&gt;
    &lt;% _.each(eventsThisMonth, function(event) { %&gt;
        &lt;% if (event.url) {  %&gt;&lt;a target=&quot;&lt;%= event.url_target %&gt;&quot; href=&quot;&lt;%= event.url %&gt;&quot; &lt;% } else {  %&gt;&lt;div &lt;% }  %&gt; class=&quot;event-item clndr-clearfix&quot;&gt;
            &lt;span class=&quot;event-item-date&quot;&gt;
                &lt;% if (event.end != event.start) {
                    startMY = moment(event.start).format(&quot;MM YY&quot;);
                    endMY = moment(event.end).format(&quot;MM YY&quot;);
                    if (startMY === endMY) { %&gt;
                        &lt;%= moment(event.start).format(&quot;D&quot;) %&gt;–&lt;%= moment(event.end).format(&quot;D MMMM&quot;) %&gt;
                    &lt;% } else { %&gt;
                        &lt;%= moment(event.start).format(&quot;D MMMM&quot;) %&gt; – &lt;%= moment(event.end).format(&quot;D MMMM&quot;) %&gt;
                    &lt;% }
                } else {  %&gt;
                    &lt;%= moment(event.start).format(&quot;D MMMM&quot;) %&gt;
                &lt;% } %&gt;
            &lt;/span&gt;
            &lt;span class=&quot;event-item-name&quot;&gt;&lt;%= event.title %&gt;&lt;/span&gt;
            &lt;% if (event.time) {  %&gt;
                &lt;span class=&quot;event-item-time&quot;&gt;&lt;%= event.time %&gt;&lt;/span&gt;
            &lt;% } %&gt;
            &lt;% if (event.desc) {  %&gt;
                &lt;span class=&quot;event-item-desc&quot;&gt;&lt;%= event.desc %&gt;&lt;/span&gt;
            &lt;% } %&gt;
        &lt;% if (event.url) {  %&gt;&lt;/a&gt;&lt;% } else {  %&gt;&lt;/div&gt;&lt;% }  %&gt;
    &lt;% }); %&gt;
&lt;/div&gt;' , `instance_options` = '
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][&quot;element&quot;];
    thisCLNDR.find(&quot;.day&quot;).each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(&quot;alternate-bg&quot;); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(&quot;.event-item&quot;).length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(&quot;.event-listing&quot;).append(
            &quot;&lt;div style=''text-align:center;'' class=''event-item''&gt;No events found&lt;/div&gt;&quot;
        );
    }
},
weekOffset: 1' | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 near "SET": syntax error
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 'HY000', Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('INSERT INTO wp_...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('INSERT INTO wp_...')
#3 /wordpress/wp-content/plugins/event-clndr/clndr.php(168): WP_SQLite_DB->query('INSERT INTO wp_...')
#4 /wordpress/wp-includes/class-wp-hook.php(324): CLDNR_init('')
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-settings.php(578): do_action('plugins_loaded')
#8 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#9 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#10 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#11 {main}</pre>
 for query INSERT INTO wp_clndr_instances SET instance_name='Full size calendar', instance_slug='full-size-calendar', instance_template='
<div class=\"clndr-controls\">
    <div class=\"current-month\"><%= month %> <%= year %></div>
    <div class=\"clndr-nav clndr-clearfix\">
        <div class=\"clndr-previous-button\">‹</div>
        <div class=\"clndr-next-button\">›</div>
    </div>
</div>
<div class=\"clndr-grid\">
    <div class=\"days-of-the-week clndr-clearfix\">
        <% _.each(daysOfTheWeek, function(day) { %>
        <div class=\"header-day\"><%= day %></div>
        <% }); %>
    </div>
    <div class=\"days clndr-clearfix\">
        <% _.each(days, function(day) { %>
        <div class=\"<%= day.classes %>\" id=\"<%= day.id %>\"><span class=\"day-number\"><%= day.day %></span></div>
        <% }); %>
    </div>
</div>
<div class=\"event-listing\">
    <div class=\"event-listing-title\">Events</div>
    <% _.each(eventsThisMonth, function(event) { %>
        <% if (event.url) {  %><a target=\"<%= event.url_target %>\" href=\"<%= event.url %>\" <% } else {  %><div <% }  %> class=\"event-item clndr-clearfix\">
            <span class=\"event-item-date\">
                <% if (event.end != event.start) {
                    startMY = moment(event.start).format(\"MM YY\");
                    endMY = moment(event.end).format(\"MM YY\");
                    if (startMY === endMY) { %>
                        <%= moment(event.start).format(\"D\") %>–<%= moment(event.end).format(\"D MMMM\") %>
                    <% } else { %>
                        <%= moment(event.start).format(\"D MMMM\") %> – <%= moment(event.end).format(\"D MMMM\") %>
                    <% }
                } else {  %>
                    <%= moment(event.start).format(\"D MMMM\") %>
                <% } %>
            </span>
            <span class=\"event-item-name\"><%= event.title %></span>
            <% if (event.time) {  %>
                <span class=\"event-item-time\"><%= event.time %></span>
            <% } %>
            <% if (event.desc) {  %>
                <span class=\"event-item-desc\"><%= event.desc %></span>
            <% } %>
        <% if (event.url) {  %></a><% } else {  %></div><% }  %>
    <% }); %>
</div>', instance_options='
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][\"element\"];
    thisCLNDR.find(\".day\").each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(\"alternate-bg\"); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(\".event-item\").length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(\".event-listing\").append(
            \"<div style=\'text-align:center;\' class=\'event-item\'>No events found</div>\"
        );
    }
},
weekOffset: 1' made by require_once('wp-load.php'), require_once('wp-config.php'), require_once('wp-settings.php'), do_action('plugins_loaded'), WP_Hook->do_action, WP_Hook->apply_filters, CLDNR_init, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:30:38 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>INSERT INTO wp_clndr_instances SET instance_name='Mini calendar', instance_slug='mini-calendar', instance_template='
<div class=\"clndr-controls\">
    <div class=\"current-month\"><%= month %> <%= year %></div>
    <div class=\"clndr-nav clndr-clearfix\">
        <div class=\"clndr-previous-button\">‹</div>
        <div class=\"clndr-next-button\">›</div>
    </div>
</div>
<div class=\"clndr-grid\">
    <div class=\"days-of-the-week clndr-clearfix\">
        <% _.each(daysOfTheWeek, function(day) { %>
        <div class=\"header-day\"><%= day %></div>
        <% }); %>
    </div>
    <div class=\"days clndr-clearfix\">
        <% _.each(days, function(day) { %>
        <div class=\"<%= day.classes %>\" id=\"<%= day.id %>\"><span class=\"day-number\"><%= day.day %></span></div>
        <% }); %>
    </div>
</div>
<div class=\"event-listing\">
    <div class=\"event-listing-title\">Events</div>
    <% _.each(eventsThisMonth, function(event) { %>
        <% if (event.url) {  %><a target=\"<%= event.url_target %>\" href=\"<%= event.url %>\" <% } else {  %><div <% }  %> class=\"event-item clndr-clearfix\">
            <span class=\"event-item-date\">
                <% if (event.end != event.start) {
                    startMY = moment(event.start).format(\"MM YY\");
                    endMY = moment(event.end).format(\"MM YY\");
                    if (startMY === endMY) { %>
                        <%= moment(event.start).format(\"D\") %>–<%= moment(event.end).format(\"D MMMM\") %>
                    <% } else { %>
                        <%= moment(event.start).format(\"D MMMM\") %> – <%= moment(event.end).format(\"D MMMM\") %>
                    <% }
                } else {  %>
                    <%= moment(event.start).format(\"D MMMM\") %>
                <% } %>
            </span>
            <span class=\"event-item-name\"><%= event.title %></span>
            <% if (event.time) {  %>
                <span class=\"event-item-time\"><%= event.time %></span>
            <% } %>
            <% if (event.desc) {  %>
                <span class=\"event-item-desc\"><%= event.desc %></span>
            <% } %>
        <% if (event.url) {  %></a><% } else {  %></div><% }  %>
    <% }); %>
</div>', instance_options='
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][\"element\"];
    thisCLNDR.find(\".day\").each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(\"alternate-bg\"); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(\".event-item\").length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(\".event-listing\").append(
            \"<div style=\'text-align:center;\' class=\'event-item\'>No events found</div>\"
        );
    }
},
weekOffset: 1'</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: INSERT INTO `wp_clndr_instances` SET `instance_name` = 'Mini calendar' , `instance_slug` = 'mini-calendar' , `instance_template` = '
&lt;div class=&quot;clndr-controls&quot;&gt;
    &lt;div class=&quot;current-month&quot;&gt;&lt;%= month %&gt; &lt;%= year %&gt;&lt;/div&gt;
    &lt;div class=&quot;clndr-nav clndr-clearfix&quot;&gt;
        &lt;div class=&quot;clndr-previous-button&quot;&gt;‹&lt;/div&gt;
        &lt;div class=&quot;clndr-next-button&quot;&gt;›&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;clndr-grid&quot;&gt;
    &lt;div class=&quot;days-of-the-week clndr-clearfix&quot;&gt;
        &lt;% _.each(daysOfTheWeek, function(day) { %&gt;
        &lt;div class=&quot;header-day&quot;&gt;&lt;%= day %&gt;&lt;/div&gt;
        &lt;% }); %&gt;
    &lt;/div&gt;
    &lt;div class=&quot;days clndr-clearfix&quot;&gt;
        &lt;% _.each(days, function(day) { %&gt;
        &lt;div class=&quot;&lt;%= day.classes %&gt;&quot; id=&quot;&lt;%= day.id %&gt;&quot;&gt;&lt;span class=&quot;day-number&quot;&gt;&lt;%= day.day %&gt;&lt;/span&gt;&lt;/div&gt;
        &lt;% }); %&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;event-listing&quot;&gt;
    &lt;div class=&quot;event-listing-title&quot;&gt;Events&lt;/div&gt;
    &lt;% _.each(eventsThisMonth, function(event) { %&gt;
        &lt;% if (event.url) {  %&gt;&lt;a target=&quot;&lt;%= event.url_target %&gt;&quot; href=&quot;&lt;%= event.url %&gt;&quot; &lt;% } else {  %&gt;&lt;div &lt;% }  %&gt; class=&quot;event-item clndr-clearfix&quot;&gt;
            &lt;span class=&quot;event-item-date&quot;&gt;
                &lt;% if (event.end != event.start) {
                    startMY = moment(event.start).format(&quot;MM YY&quot;);
                    endMY = moment(event.end).format(&quot;MM YY&quot;);
                    if (startMY === endMY) { %&gt;
                        &lt;%= moment(event.start).format(&quot;D&quot;) %&gt;–&lt;%= moment(event.end).format(&quot;D MMMM&quot;) %&gt;
                    &lt;% } else { %&gt;
                        &lt;%= moment(event.start).format(&quot;D MMMM&quot;) %&gt; – &lt;%= moment(event.end).format(&quot;D MMMM&quot;) %&gt;
                    &lt;% }
                } else {  %&gt;
                    &lt;%= moment(event.start).format(&quot;D MMMM&quot;) %&gt;
                &lt;% } %&gt;
            &lt;/span&gt;
            &lt;span class=&quot;event-item-name&quot;&gt;&lt;%= event.title %&gt;&lt;/span&gt;
            &lt;% if (event.time) {  %&gt;
                &lt;span class=&quot;event-item-time&quot;&gt;&lt;%= event.time %&gt;&lt;/span&gt;
            &lt;% } %&gt;
            &lt;% if (event.desc) {  %&gt;
                &lt;span class=&quot;event-item-desc&quot;&gt;&lt;%= event.desc %&gt;&lt;/span&gt;
            &lt;% } %&gt;
        &lt;% if (event.url) {  %&gt;&lt;/a&gt;&lt;% } else {  %&gt;&lt;/div&gt;&lt;% }  %&gt;
    &lt;% }); %&gt;
&lt;/div&gt;' , `instance_options` = '
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][&quot;element&quot;];
    thisCLNDR.find(&quot;.day&quot;).each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(&quot;alternate-bg&quot;); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(&quot;.event-item&quot;).length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(&quot;.event-listing&quot;).append(
            &quot;&lt;div style=''text-align:center;'' class=''event-item''&gt;No events found&lt;/div&gt;&quot;
        );
    }
},
weekOffset: 1' | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 near "SET": syntax error
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 'HY000', Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('INSERT INTO wp_...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('INSERT INTO wp_...')
#3 /wordpress/wp-content/plugins/event-clndr/clndr.php(173): WP_SQLite_DB->query('INSERT INTO wp_...')
#4 /wordpress/wp-includes/class-wp-hook.php(324): CLDNR_init('')
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-settings.php(578): do_action('plugins_loaded')
#8 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#9 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#10 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#11 {main}</pre>
 for query INSERT INTO wp_clndr_instances SET instance_name='Mini calendar', instance_slug='mini-calendar', instance_template='
<div class=\"clndr-controls\">
    <div class=\"current-month\"><%= month %> <%= year %></div>
    <div class=\"clndr-nav clndr-clearfix\">
        <div class=\"clndr-previous-button\">‹</div>
        <div class=\"clndr-next-button\">›</div>
    </div>
</div>
<div class=\"clndr-grid\">
    <div class=\"days-of-the-week clndr-clearfix\">
        <% _.each(daysOfTheWeek, function(day) { %>
        <div class=\"header-day\"><%= day %></div>
        <% }); %>
    </div>
    <div class=\"days clndr-clearfix\">
        <% _.each(days, function(day) { %>
        <div class=\"<%= day.classes %>\" id=\"<%= day.id %>\"><span class=\"day-number\"><%= day.day %></span></div>
        <% }); %>
    </div>
</div>
<div class=\"event-listing\">
    <div class=\"event-listing-title\">Events</div>
    <% _.each(eventsThisMonth, function(event) { %>
        <% if (event.url) {  %><a target=\"<%= event.url_target %>\" href=\"<%= event.url %>\" <% } else {  %><div <% }  %> class=\"event-item clndr-clearfix\">
            <span class=\"event-item-date\">
                <% if (event.end != event.start) {
                    startMY = moment(event.start).format(\"MM YY\");
                    endMY = moment(event.end).format(\"MM YY\");
                    if (startMY === endMY) { %>
                        <%= moment(event.start).format(\"D\") %>–<%= moment(event.end).format(\"D MMMM\") %>
                    <% } else { %>
                        <%= moment(event.start).format(\"D MMMM\") %> – <%= moment(event.end).format(\"D MMMM\") %>
                    <% }
                } else {  %>
                    <%= moment(event.start).format(\"D MMMM\") %>
                <% } %>
            </span>
            <span class=\"event-item-name\"><%= event.title %></span>
            <% if (event.time) {  %>
                <span class=\"event-item-time\"><%= event.time %></span>
            <% } %>
            <% if (event.desc) {  %>
                <span class=\"event-item-desc\"><%= event.desc %></span>
            <% } %>
        <% if (event.url) {  %></a><% } else {  %></div><% }  %>
    <% }); %>
</div>', instance_options='
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][\"element\"];
    thisCLNDR.find(\".day\").each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(\"alternate-bg\"); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(\".event-item\").length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(\".event-listing\").append(
            \"<div style=\'text-align:center;\' class=\'event-item\'>No events found</div>\"
        );
    }
},
weekOffset: 1' made by require_once('wp-load.php'), require_once('wp-config.php'), require_once('wp-settings.php'), do_action('plugins_loaded'), WP_Hook->do_action, WP_Hook->apply_filters, CLDNR_init, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:30:48 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>INSERT INTO wp_clndr_instances SET instance_name='Full size calendar', instance_slug='full-size-calendar', instance_template='
<div class=\"clndr-controls\">
    <div class=\"current-month\"><%= month %> <%= year %></div>
    <div class=\"clndr-nav clndr-clearfix\">
        <div class=\"clndr-previous-button\">‹</div>
        <div class=\"clndr-next-button\">›</div>
    </div>
</div>
<div class=\"clndr-grid\">
    <div class=\"days-of-the-week clndr-clearfix\">
        <% _.each(daysOfTheWeek, function(day) { %>
        <div class=\"header-day\"><%= day %></div>
        <% }); %>
    </div>
    <div class=\"days clndr-clearfix\">
        <% _.each(days, function(day) { %>
        <div class=\"<%= day.classes %>\" id=\"<%= day.id %>\"><span class=\"day-number\"><%= day.day %></span></div>
        <% }); %>
    </div>
</div>
<div class=\"event-listing\">
    <div class=\"event-listing-title\">Events</div>
    <% _.each(eventsThisMonth, function(event) { %>
        <% if (event.url) {  %><a target=\"<%= event.url_target %>\" href=\"<%= event.url %>\" <% } else {  %><div <% }  %> class=\"event-item clndr-clearfix\">
            <span class=\"event-item-date\">
                <% if (event.end != event.start) {
                    startMY = moment(event.start).format(\"MM YY\");
                    endMY = moment(event.end).format(\"MM YY\");
                    if (startMY === endMY) { %>
                        <%= moment(event.start).format(\"D\") %>–<%= moment(event.end).format(\"D MMMM\") %>
                    <% } else { %>
                        <%= moment(event.start).format(\"D MMMM\") %> – <%= moment(event.end).format(\"D MMMM\") %>
                    <% }
                } else {  %>
                    <%= moment(event.start).format(\"D MMMM\") %>
                <% } %>
            </span>
            <span class=\"event-item-name\"><%= event.title %></span>
            <% if (event.time) {  %>
                <span class=\"event-item-time\"><%= event.time %></span>
            <% } %>
            <% if (event.desc) {  %>
                <span class=\"event-item-desc\"><%= event.desc %></span>
            <% } %>
        <% if (event.url) {  %></a><% } else {  %></div><% }  %>
    <% }); %>
</div>', instance_options='
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][\"element\"];
    thisCLNDR.find(\".day\").each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(\"alternate-bg\"); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(\".event-item\").length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(\".event-listing\").append(
            \"<div style=\'text-align:center;\' class=\'event-item\'>No events found</div>\"
        );
    }
},
weekOffset: 1'</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: INSERT INTO `wp_clndr_instances` SET `instance_name` = 'Full size calendar' , `instance_slug` = 'full-size-calendar' , `instance_template` = '
&lt;div class=&quot;clndr-controls&quot;&gt;
    &lt;div class=&quot;current-month&quot;&gt;&lt;%= month %&gt; &lt;%= year %&gt;&lt;/div&gt;
    &lt;div class=&quot;clndr-nav clndr-clearfix&quot;&gt;
        &lt;div class=&quot;clndr-previous-button&quot;&gt;‹&lt;/div&gt;
        &lt;div class=&quot;clndr-next-button&quot;&gt;›&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;clndr-grid&quot;&gt;
    &lt;div class=&quot;days-of-the-week clndr-clearfix&quot;&gt;
        &lt;% _.each(daysOfTheWeek, function(day) { %&gt;
        &lt;div class=&quot;header-day&quot;&gt;&lt;%= day %&gt;&lt;/div&gt;
        &lt;% }); %&gt;
    &lt;/div&gt;
    &lt;div class=&quot;days clndr-clearfix&quot;&gt;
        &lt;% _.each(days, function(day) { %&gt;
        &lt;div class=&quot;&lt;%= day.classes %&gt;&quot; id=&quot;&lt;%= day.id %&gt;&quot;&gt;&lt;span class=&quot;day-number&quot;&gt;&lt;%= day.day %&gt;&lt;/span&gt;&lt;/div&gt;
        &lt;% }); %&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;event-listing&quot;&gt;
    &lt;div class=&quot;event-listing-title&quot;&gt;Events&lt;/div&gt;
    &lt;% _.each(eventsThisMonth, function(event) { %&gt;
        &lt;% if (event.url) {  %&gt;&lt;a target=&quot;&lt;%= event.url_target %&gt;&quot; href=&quot;&lt;%= event.url %&gt;&quot; &lt;% } else {  %&gt;&lt;div &lt;% }  %&gt; class=&quot;event-item clndr-clearfix&quot;&gt;
            &lt;span class=&quot;event-item-date&quot;&gt;
                &lt;% if (event.end != event.start) {
                    startMY = moment(event.start).format(&quot;MM YY&quot;);
                    endMY = moment(event.end).format(&quot;MM YY&quot;);
                    if (startMY === endMY) { %&gt;
                        &lt;%= moment(event.start).format(&quot;D&quot;) %&gt;–&lt;%= moment(event.end).format(&quot;D MMMM&quot;) %&gt;
                    &lt;% } else { %&gt;
                        &lt;%= moment(event.start).format(&quot;D MMMM&quot;) %&gt; – &lt;%= moment(event.end).format(&quot;D MMMM&quot;) %&gt;
                    &lt;% }
                } else {  %&gt;
                    &lt;%= moment(event.start).format(&quot;D MMMM&quot;) %&gt;
                &lt;% } %&gt;
            &lt;/span&gt;
            &lt;span class=&quot;event-item-name&quot;&gt;&lt;%= event.title %&gt;&lt;/span&gt;
            &lt;% if (event.time) {  %&gt;
                &lt;span class=&quot;event-item-time&quot;&gt;&lt;%= event.time %&gt;&lt;/span&gt;
            &lt;% } %&gt;
            &lt;% if (event.desc) {  %&gt;
                &lt;span class=&quot;event-item-desc&quot;&gt;&lt;%= event.desc %&gt;&lt;/span&gt;
            &lt;% } %&gt;
        &lt;% if (event.url) {  %&gt;&lt;/a&gt;&lt;% } else {  %&gt;&lt;/div&gt;&lt;% }  %&gt;
    &lt;% }); %&gt;
&lt;/div&gt;' , `instance_options` = '
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][&quot;element&quot;];
    thisCLNDR.find(&quot;.day&quot;).each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(&quot;alternate-bg&quot;); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(&quot;.event-item&quot;).length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(&quot;.event-listing&quot;).append(
            &quot;&lt;div style=''text-align:center;'' class=''event-item''&gt;No events found&lt;/div&gt;&quot;
        );
    }
},
weekOffset: 1' | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 near "SET": syntax error
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 'HY000', Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('INSERT INTO wp_...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('INSERT INTO wp_...')
#3 /wordpress/wp-content/plugins/event-clndr/clndr.php(168): WP_SQLite_DB->query('INSERT INTO wp_...')
#4 /wordpress/wp-includes/class-wp-hook.php(324): CLDNR_init('')
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-settings.php(578): do_action('plugins_loaded')
#8 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#9 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#10 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#11 {main}</pre>
 for query INSERT INTO wp_clndr_instances SET instance_name='Full size calendar', instance_slug='full-size-calendar', instance_template='
<div class=\"clndr-controls\">
    <div class=\"current-month\"><%= month %> <%= year %></div>
    <div class=\"clndr-nav clndr-clearfix\">
        <div class=\"clndr-previous-button\">‹</div>
        <div class=\"clndr-next-button\">›</div>
    </div>
</div>
<div class=\"clndr-grid\">
    <div class=\"days-of-the-week clndr-clearfix\">
        <% _.each(daysOfTheWeek, function(day) { %>
        <div class=\"header-day\"><%= day %></div>
        <% }); %>
    </div>
    <div class=\"days clndr-clearfix\">
        <% _.each(days, function(day) { %>
        <div class=\"<%= day.classes %>\" id=\"<%= day.id %>\"><span class=\"day-number\"><%= day.day %></span></div>
        <% }); %>
    </div>
</div>
<div class=\"event-listing\">
    <div class=\"event-listing-title\">Events</div>
    <% _.each(eventsThisMonth, function(event) { %>
        <% if (event.url) {  %><a target=\"<%= event.url_target %>\" href=\"<%= event.url %>\" <% } else {  %><div <% }  %> class=\"event-item clndr-clearfix\">
            <span class=\"event-item-date\">
                <% if (event.end != event.start) {
                    startMY = moment(event.start).format(\"MM YY\");
                    endMY = moment(event.end).format(\"MM YY\");
                    if (startMY === endMY) { %>
                        <%= moment(event.start).format(\"D\") %>–<%= moment(event.end).format(\"D MMMM\") %>
                    <% } else { %>
                        <%= moment(event.start).format(\"D MMMM\") %> – <%= moment(event.end).format(\"D MMMM\") %>
                    <% }
                } else {  %>
                    <%= moment(event.start).format(\"D MMMM\") %>
                <% } %>
            </span>
            <span class=\"event-item-name\"><%= event.title %></span>
            <% if (event.time) {  %>
                <span class=\"event-item-time\"><%= event.time %></span>
            <% } %>
            <% if (event.desc) {  %>
                <span class=\"event-item-desc\"><%= event.desc %></span>
            <% } %>
        <% if (event.url) {  %></a><% } else {  %></div><% }  %>
    <% }); %>
</div>', instance_options='
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][\"element\"];
    thisCLNDR.find(\".day\").each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(\"alternate-bg\"); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(\".event-item\").length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(\".event-listing\").append(
            \"<div style=\'text-align:center;\' class=\'event-item\'>No events found</div>\"
        );
    }
},
weekOffset: 1' made by require_once('wp-load.php'), require_once('wp-config.php'), require_once('wp-settings.php'), do_action('plugins_loaded'), WP_Hook->do_action, WP_Hook->apply_filters, CLDNR_init, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:30:48 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>INSERT INTO wp_clndr_instances SET instance_name='Mini calendar', instance_slug='mini-calendar', instance_template='
<div class=\"clndr-controls\">
    <div class=\"current-month\"><%= month %> <%= year %></div>
    <div class=\"clndr-nav clndr-clearfix\">
        <div class=\"clndr-previous-button\">‹</div>
        <div class=\"clndr-next-button\">›</div>
    </div>
</div>
<div class=\"clndr-grid\">
    <div class=\"days-of-the-week clndr-clearfix\">
        <% _.each(daysOfTheWeek, function(day) { %>
        <div class=\"header-day\"><%= day %></div>
        <% }); %>
    </div>
    <div class=\"days clndr-clearfix\">
        <% _.each(days, function(day) { %>
        <div class=\"<%= day.classes %>\" id=\"<%= day.id %>\"><span class=\"day-number\"><%= day.day %></span></div>
        <% }); %>
    </div>
</div>
<div class=\"event-listing\">
    <div class=\"event-listing-title\">Events</div>
    <% _.each(eventsThisMonth, function(event) { %>
        <% if (event.url) {  %><a target=\"<%= event.url_target %>\" href=\"<%= event.url %>\" <% } else {  %><div <% }  %> class=\"event-item clndr-clearfix\">
            <span class=\"event-item-date\">
                <% if (event.end != event.start) {
                    startMY = moment(event.start).format(\"MM YY\");
                    endMY = moment(event.end).format(\"MM YY\");
                    if (startMY === endMY) { %>
                        <%= moment(event.start).format(\"D\") %>–<%= moment(event.end).format(\"D MMMM\") %>
                    <% } else { %>
                        <%= moment(event.start).format(\"D MMMM\") %> – <%= moment(event.end).format(\"D MMMM\") %>
                    <% }
                } else {  %>
                    <%= moment(event.start).format(\"D MMMM\") %>
                <% } %>
            </span>
            <span class=\"event-item-name\"><%= event.title %></span>
            <% if (event.time) {  %>
                <span class=\"event-item-time\"><%= event.time %></span>
            <% } %>
            <% if (event.desc) {  %>
                <span class=\"event-item-desc\"><%= event.desc %></span>
            <% } %>
        <% if (event.url) {  %></a><% } else {  %></div><% }  %>
    <% }); %>
</div>', instance_options='
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][\"element\"];
    thisCLNDR.find(\".day\").each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(\"alternate-bg\"); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(\".event-item\").length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(\".event-listing\").append(
            \"<div style=\'text-align:center;\' class=\'event-item\'>No events found</div>\"
        );
    }
},
weekOffset: 1'</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: INSERT INTO `wp_clndr_instances` SET `instance_name` = 'Mini calendar' , `instance_slug` = 'mini-calendar' , `instance_template` = '
&lt;div class=&quot;clndr-controls&quot;&gt;
    &lt;div class=&quot;current-month&quot;&gt;&lt;%= month %&gt; &lt;%= year %&gt;&lt;/div&gt;
    &lt;div class=&quot;clndr-nav clndr-clearfix&quot;&gt;
        &lt;div class=&quot;clndr-previous-button&quot;&gt;‹&lt;/div&gt;
        &lt;div class=&quot;clndr-next-button&quot;&gt;›&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;clndr-grid&quot;&gt;
    &lt;div class=&quot;days-of-the-week clndr-clearfix&quot;&gt;
        &lt;% _.each(daysOfTheWeek, function(day) { %&gt;
        &lt;div class=&quot;header-day&quot;&gt;&lt;%= day %&gt;&lt;/div&gt;
        &lt;% }); %&gt;
    &lt;/div&gt;
    &lt;div class=&quot;days clndr-clearfix&quot;&gt;
        &lt;% _.each(days, function(day) { %&gt;
        &lt;div class=&quot;&lt;%= day.classes %&gt;&quot; id=&quot;&lt;%= day.id %&gt;&quot;&gt;&lt;span class=&quot;day-number&quot;&gt;&lt;%= day.day %&gt;&lt;/span&gt;&lt;/div&gt;
        &lt;% }); %&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;event-listing&quot;&gt;
    &lt;div class=&quot;event-listing-title&quot;&gt;Events&lt;/div&gt;
    &lt;% _.each(eventsThisMonth, function(event) { %&gt;
        &lt;% if (event.url) {  %&gt;&lt;a target=&quot;&lt;%= event.url_target %&gt;&quot; href=&quot;&lt;%= event.url %&gt;&quot; &lt;% } else {  %&gt;&lt;div &lt;% }  %&gt; class=&quot;event-item clndr-clearfix&quot;&gt;
            &lt;span class=&quot;event-item-date&quot;&gt;
                &lt;% if (event.end != event.start) {
                    startMY = moment(event.start).format(&quot;MM YY&quot;);
                    endMY = moment(event.end).format(&quot;MM YY&quot;);
                    if (startMY === endMY) { %&gt;
                        &lt;%= moment(event.start).format(&quot;D&quot;) %&gt;–&lt;%= moment(event.end).format(&quot;D MMMM&quot;) %&gt;
                    &lt;% } else { %&gt;
                        &lt;%= moment(event.start).format(&quot;D MMMM&quot;) %&gt; – &lt;%= moment(event.end).format(&quot;D MMMM&quot;) %&gt;
                    &lt;% }
                } else {  %&gt;
                    &lt;%= moment(event.start).format(&quot;D MMMM&quot;) %&gt;
                &lt;% } %&gt;
            &lt;/span&gt;
            &lt;span class=&quot;event-item-name&quot;&gt;&lt;%= event.title %&gt;&lt;/span&gt;
            &lt;% if (event.time) {  %&gt;
                &lt;span class=&quot;event-item-time&quot;&gt;&lt;%= event.time %&gt;&lt;/span&gt;
            &lt;% } %&gt;
            &lt;% if (event.desc) {  %&gt;
                &lt;span class=&quot;event-item-desc&quot;&gt;&lt;%= event.desc %&gt;&lt;/span&gt;
            &lt;% } %&gt;
        &lt;% if (event.url) {  %&gt;&lt;/a&gt;&lt;% } else {  %&gt;&lt;/div&gt;&lt;% }  %&gt;
    &lt;% }); %&gt;
&lt;/div&gt;' , `instance_options` = '
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][&quot;element&quot;];
    thisCLNDR.find(&quot;.day&quot;).each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(&quot;alternate-bg&quot;); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(&quot;.event-item&quot;).length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(&quot;.event-listing&quot;).append(
            &quot;&lt;div style=''text-align:center;'' class=''event-item''&gt;No events found&lt;/div&gt;&quot;
        );
    }
},
weekOffset: 1' | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 near "SET": syntax error
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 'HY000', Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('INSERT INTO wp_...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('INSERT INTO wp_...')
#3 /wordpress/wp-content/plugins/event-clndr/clndr.php(173): WP_SQLite_DB->query('INSERT INTO wp_...')
#4 /wordpress/wp-includes/class-wp-hook.php(324): CLDNR_init('')
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-settings.php(578): do_action('plugins_loaded')
#8 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#9 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#10 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#11 {main}</pre>
 for query INSERT INTO wp_clndr_instances SET instance_name='Mini calendar', instance_slug='mini-calendar', instance_template='
<div class=\"clndr-controls\">
    <div class=\"current-month\"><%= month %> <%= year %></div>
    <div class=\"clndr-nav clndr-clearfix\">
        <div class=\"clndr-previous-button\">‹</div>
        <div class=\"clndr-next-button\">›</div>
    </div>
</div>
<div class=\"clndr-grid\">
    <div class=\"days-of-the-week clndr-clearfix\">
        <% _.each(daysOfTheWeek, function(day) { %>
        <div class=\"header-day\"><%= day %></div>
        <% }); %>
    </div>
    <div class=\"days clndr-clearfix\">
        <% _.each(days, function(day) { %>
        <div class=\"<%= day.classes %>\" id=\"<%= day.id %>\"><span class=\"day-number\"><%= day.day %></span></div>
        <% }); %>
    </div>
</div>
<div class=\"event-listing\">
    <div class=\"event-listing-title\">Events</div>
    <% _.each(eventsThisMonth, function(event) { %>
        <% if (event.url) {  %><a target=\"<%= event.url_target %>\" href=\"<%= event.url %>\" <% } else {  %><div <% }  %> class=\"event-item clndr-clearfix\">
            <span class=\"event-item-date\">
                <% if (event.end != event.start) {
                    startMY = moment(event.start).format(\"MM YY\");
                    endMY = moment(event.end).format(\"MM YY\");
                    if (startMY === endMY) { %>
                        <%= moment(event.start).format(\"D\") %>–<%= moment(event.end).format(\"D MMMM\") %>
                    <% } else { %>
                        <%= moment(event.start).format(\"D MMMM\") %> – <%= moment(event.end).format(\"D MMMM\") %>
                    <% }
                } else {  %>
                    <%= moment(event.start).format(\"D MMMM\") %>
                <% } %>
            </span>
            <span class=\"event-item-name\"><%= event.title %></span>
            <% if (event.time) {  %>
                <span class=\"event-item-time\"><%= event.time %></span>
            <% } %>
            <% if (event.desc) {  %>
                <span class=\"event-item-desc\"><%= event.desc %></span>
            <% } %>
        <% if (event.url) {  %></a><% } else {  %></div><% }  %>
    <% }); %>
</div>', instance_options='
doneRendering: function() {
    var day=1, week=1, thisCLNDR = $(this)[0][\"element\"];
    thisCLNDR.find(\".day\").each(function() {
        if (day == 8) { day = 1; week++; }
        if (week % 2 === 0) { $(this).addClass(\"alternate-bg\"); }
        day++;
    });

    var thisMonthEvents = thisCLNDR.find(\".event-item\").length;
    if (thisMonthEvents == 0) {
        thisCLNDR.find(\".event-listing\").append(
            \"<div style=\'text-align:center;\' class=\'event-item\'>No events found</div>\"
        );
    }
},
weekOffset: 1' made by require_once('wp-load.php'), require_once('wp-config.php'), require_once('wp-settings.php'), do_action('plugins_loaded'), WP_Hook->do_action, WP_Hook->apply_filters, CLDNR_init, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:31:26 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function wp_get_sites() in /wordpress/wp-content/plugins/event-organiser-ngo/event-organiser-ngo.php:63
Stack trace:
#0 /wordpress/wp-includes/class-wp-hook.php(324): eongo_set_auth(false)
#1 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#2 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#3 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_event-...', false)
#4 /internal/eval.php(20): activate_plugin('event-organiser...')
#5 {main}
  thrown in /wordpress/wp-content/plugins/event-organiser-ngo/event-organiser-ngo.php on line 63
[06-Jul-2025 22:31:35 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function wp_get_sites() in /wordpress/wp-content/plugins/event-organiser-ngo/event-organiser-ngo.php:63
Stack trace:
#0 /wordpress/wp-includes/class-wp-hook.php(324): eongo_set_auth(false)
#1 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#2 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#3 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_event-...', false)
#4 /internal/eval.php(20): activate_plugin('event-organiser...')
#5 {main}
  thrown in /wordpress/wp-content/plugins/event-organiser-ngo/event-organiser-ngo.php on line 63
[06-Jul-2025 22:31:43 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function wp_get_sites() in /wordpress/wp-content/plugins/event-organiser-ngo/event-organiser-ngo.php:63
Stack trace:
#0 /wordpress/wp-includes/class-wp-hook.php(324): eongo_set_auth(false)
#1 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#2 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#3 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_event-...', false)
#4 /internal/eval.php(20): activate_plugin('event-organiser...')
#5 {main}
  thrown in /wordpress/wp-content/plugins/event-organiser-ngo/event-organiser-ngo.php on line 63
[06-Jul-2025 22:32:52 UTC] object(WP_Error)#2536 (3) {
  ["errors"]=>
  array(1) {
    ["http_request_failed"]=>
    array(1) {
      [0]=>
      string(99) "cURL error 60: SSL: no alternative certificate subject name matches target host name 'eventflow.ru'"
    }
  }
  ["error_data"]=>
  array(0) {
  }
  ["additional_data":protected]=>
  array(0) {
  }
}

[06-Jul-2025 22:32:52 UTC] wp_error in class Eventflow\Interlink\Client\WP_Http_Invoker
[06-Jul-2025 22:33:01 UTC] object(WP_Error)#866 (3) {
  ["errors"]=>
  array(1) {
    ["http_request_failed"]=>
    array(1) {
      [0]=>
      string(99) "cURL error 60: SSL: no alternative certificate subject name matches target host name 'eventflow.ru'"
    }
  }
  ["error_data"]=>
  array(0) {
  }
  ["additional_data":protected]=>
  array(0) {
  }
}

[06-Jul-2025 22:33:01 UTC] wp_error in class Eventflow\Interlink\Client\WP_Http_Invoker
[06-Jul-2025 22:33:10 UTC] object(WP_Error)#866 (3) {
  ["errors"]=>
  array(1) {
    ["http_request_failed"]=>
    array(1) {
      [0]=>
      string(99) "cURL error 60: SSL: no alternative certificate subject name matches target host name 'eventflow.ru'"
    }
  }
  ["error_data"]=>
  array(0) {
  }
  ["additional_data":protected]=>
  array(0) {
  }
}

[06-Jul-2025 22:33:10 UTC] wp_error in class Eventflow\Interlink\Client\WP_Http_Invoker
[06-Jul-2025 22:33:20 UTC] PHP Deprecated:  Required parameter $search follows optional parameter $post_per_page in /wordpress/wp-content/plugins/eventissimo/function.php on line 373
[06-Jul-2025 22:33:20 UTC] PHP Deprecated:  Required parameter $post follows optional parameter $old_status in /wordpress/wp-content/plugins/eventissimo/meta_post/facebook_events.php on line 230
[06-Jul-2025 22:33:21 UTC] PHP Deprecated:  Required parameter $search follows optional parameter $post_per_page in /wordpress/wp-content/plugins/eventissimo/function.php on line 373
[06-Jul-2025 22:33:21 UTC] PHP Deprecated:  Required parameter $post follows optional parameter $old_status in /wordpress/wp-content/plugins/eventissimo/meta_post/facebook_events.php on line 230
[06-Jul-2025 22:33:21 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>eventissimo</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href="https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121
[06-Jul-2025 22:33:21 UTC] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163
Stack trace:
#0 /wordpress/wp-includes/class-wp-widget-factory.php(62): WP_Widget->__construct()
#1 /wordpress/wp-includes/widgets.php(123): WP_Widget_Factory->register('eventissimo_lis...')
#2 /wordpress/wp-content/plugins/eventissimo/function/widget.php(153): register_widget('eventissimo_lis...')
#3 /wordpress/wp-includes/class-wp-hook.php(324): eventissimo_list_widget('')
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')
#7 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')
#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#10 /wordpress/wp-settings.php(727): do_action('init')
#11 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#12 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#13 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#14 {main}
  thrown in /wordpress/wp-includes/class-wp-widget.php on line 163
[06-Jul-2025 22:33:30 UTC] PHP Deprecated:  Required parameter $search follows optional parameter $post_per_page in /wordpress/wp-content/plugins/eventissimo/function.php on line 373
[06-Jul-2025 22:33:30 UTC] PHP Deprecated:  Required parameter $post follows optional parameter $old_status in /wordpress/wp-content/plugins/eventissimo/meta_post/facebook_events.php on line 230
[06-Jul-2025 22:33:31 UTC] PHP Deprecated:  Required parameter $search follows optional parameter $post_per_page in /wordpress/wp-content/plugins/eventissimo/function.php on line 373
[06-Jul-2025 22:33:31 UTC] PHP Deprecated:  Required parameter $post follows optional parameter $old_status in /wordpress/wp-content/plugins/eventissimo/meta_post/facebook_events.php on line 230
[06-Jul-2025 22:33:31 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>eventissimo</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href="https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121
[06-Jul-2025 22:33:31 UTC] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163
Stack trace:
#0 /wordpress/wp-includes/class-wp-widget-factory.php(62): WP_Widget->__construct()
#1 /wordpress/wp-includes/widgets.php(123): WP_Widget_Factory->register('eventissimo_lis...')
#2 /wordpress/wp-content/plugins/eventissimo/function/widget.php(153): register_widget('eventissimo_lis...')
#3 /wordpress/wp-includes/class-wp-hook.php(324): eventissimo_list_widget('')
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')
#7 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')
#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#10 /wordpress/wp-settings.php(727): do_action('init')
#11 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#12 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#13 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#14 {main}
  thrown in /wordpress/wp-includes/class-wp-widget.php on line 163
[06-Jul-2025 22:33:40 UTC] PHP Deprecated:  Required parameter $search follows optional parameter $post_per_page in /wordpress/wp-content/plugins/eventissimo/function.php on line 373
[06-Jul-2025 22:33:40 UTC] PHP Deprecated:  Required parameter $post follows optional parameter $old_status in /wordpress/wp-content/plugins/eventissimo/meta_post/facebook_events.php on line 230
[06-Jul-2025 22:33:41 UTC] PHP Deprecated:  Required parameter $search follows optional parameter $post_per_page in /wordpress/wp-content/plugins/eventissimo/function.php on line 373
[06-Jul-2025 22:33:41 UTC] PHP Deprecated:  Required parameter $post follows optional parameter $old_status in /wordpress/wp-content/plugins/eventissimo/meta_post/facebook_events.php on line 230
[06-Jul-2025 22:33:41 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>eventissimo</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href="https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121
[06-Jul-2025 22:33:41 UTC] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163
Stack trace:
#0 /wordpress/wp-includes/class-wp-widget-factory.php(62): WP_Widget->__construct()
#1 /wordpress/wp-includes/widgets.php(123): WP_Widget_Factory->register('eventissimo_lis...')
#2 /wordpress/wp-content/plugins/eventissimo/function/widget.php(153): register_widget('eventissimo_lis...')
#3 /wordpress/wp-includes/class-wp-hook.php(324): eventissimo_list_widget('')
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')
#7 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')
#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#10 /wordpress/wp-settings.php(727): do_action('init')
#11 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#12 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#13 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#14 {main}
  thrown in /wordpress/wp-includes/class-wp-widget.php on line 163
[06-Jul-2025 22:34:20 UTC] PHP Warning:  Undefined variable $eventsndocs in /wordpress/wp-content/plugins/events-and-docs/eventsndocs.php on line 100
[06-Jul-2025 22:34:21 UTC] PHP Warning:  Undefined variable $eventsndocs in /wordpress/wp-content/plugins/events-and-docs/eventsndocs.php on line 100
[06-Jul-2025 22:34:29 UTC] PHP Warning:  Undefined variable $eventsndocs in /wordpress/wp-content/plugins/events-and-docs/eventsndocs.php on line 100
[06-Jul-2025 22:34:30 UTC] PHP Warning:  Undefined variable $eventsndocs in /wordpress/wp-content/plugins/events-and-docs/eventsndocs.php on line 100
[06-Jul-2025 22:34:39 UTC] PHP Warning:  Undefined variable $eventsndocs in /wordpress/wp-content/plugins/events-and-docs/eventsndocs.php on line 100
[06-Jul-2025 22:34:40 UTC] PHP Warning:  Undefined variable $eventsndocs in /wordpress/wp-content/plugins/events-and-docs/eventsndocs.php on line 100
[06-Jul-2025 22:37:33 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>ALTER TABLE `wp_evercookie_iplist` DROP COLUMN `refid`;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_iplist</li>
<li>Executing: SELECT
					COLUMN_NAME,
					LOWER(COLUMN_NAME) AS COLUMN_NAME_LOWERCASE
				FROM `_wp_sqlite_mysql_information_schema_columns` WHERE table_schema = ? AND table_name = ? | parameters: database_name_here, wp_evercookie_iplist</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_iplist</li>
<li>Executing: DELETE FROM `_wp_sqlite_mysql_information_schema_columns` WHERE `table_schema` = ? AND `table_name` = ? AND `column_name` = ? | parameters: database_name_here, wp_evercookie_iplist, refid</li>
<li>Executing: DELETE FROM `_wp_sqlite_mysql_information_schema_statistics` WHERE `table_schema` = ? AND `table_name` = ? AND `column_name` = ? | parameters: database_name_here, wp_evercookie_iplist, refid</li>
<li>Executing: UPDATE `_wp_sqlite_mysql_information_schema_statistics` AS statistics
				SET seq_in_index = renumbered.seq_in_index
				FROM (
					SELECT
						rowid,
						row_number() OVER (PARTITION BY index_name ORDER BY seq_in_index) AS seq_in_index
					FROM `_wp_sqlite_mysql_information_schema_statistics`
					WHERE table_schema = ?
					AND table_name = ?
				) AS renumbered
				WHERE statistics.rowid = renumbered.rowid
				AND statistics.seq_in_index != renumbered.seq_in_index | parameters: database_name_here, wp_evercookie_iplist</li>
<li>Executing: 
				UPDATE `_wp_sqlite_mysql_information_schema_columns` AS c
				SET (column_key, is_nullable) = (
					SELECT
						CASE
							WHEN MAX(s.index_name = 'PRIMARY') THEN 'PRI'
							WHEN MAX(s.non_unique = 0 AND s.seq_in_index = 1) THEN 'UNI'
							WHEN MAX(s.seq_in_index = 1) THEN 'MUL'
							ELSE ''
						END,
						CASE
							WHEN MAX(s.index_name = 'PRIMARY') THEN 'NO'
							ELSE c.is_nullable
						END
					FROM `_wp_sqlite_mysql_information_schema_statistics` AS s
					WHERE s.table_schema = c.table_schema
					AND s.table_name = c.table_name
					AND s.column_name = c.column_name
				)
			    WHERE c.table_schema = ?
			    AND c.table_name = ?
			 | parameters: database_name_here, wp_evercookie_iplist</li>
<li>Executing: DELETE FROM `_wp_sqlite_mysql_information_schema_table_constraints`
				WHERE table_schema = ?
				AND table_name = ?
				AND constraint_type IN ('PRIMARY KEY', 'UNIQUE')
				AND constraint_name NOT IN (
					SELECT DISTINCT index_name FROM `_wp_sqlite_mysql_information_schema_statistics` WHERE table_schema = ? AND table_name = ?
				) | parameters: database_name_here, wp_evercookie_iplist, database_name_here, wp_evercookie_iplist</li>
<li>Executing: PRAGMA foreign_keys | (no parameters)</li>
<li>Executing: PRAGMA foreign_keys = OFF | (no parameters)</li>
<li>Executing: 
				SELECT *
				FROM `_wp_sqlite_mysql_information_schema_tables`
				WHERE table_type = 'BASE TABLE'
				AND table_schema = ?
				AND table_name = ?
			 | parameters: database_name_here, wp_evercookie_iplist</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Table 'wp_evercookie_iplist' doesn't exist
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(3276): WP_SQLite_Driver->new_driver_exception('Table 'wp_everc...', '42S02')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(2859): WP_SQLite_Driver->get_sqlite_create_table_statement(false, 'wp_evercookie_i...', '_wp_sqlite_tmp_...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(1380): WP_SQLite_Driver->recreate_table_from_information_schema(false, 'wp_evercookie_i...', Array)
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(896): WP_SQLite_Driver->execute_alter_table_statement(Object(WP_Parser_Node))
#4 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#5 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('ALTER TABLE `wp...')
#6 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('ALTER TABLE `wp...')
#7 /wordpress/wp-content/plugins/evercookie/upgrade.php(18): WP_SQLite_DB->query('ALTER TABLE `wp...')
#8 /wordpress/wp-content/plugins/evercookie/evercookie.php(35): require_once('/wordpress/wp-c...')
#9 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#10 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('evercookie/ever...')
#11 /internal/eval.php(20): activate_plugin('evercookie/ever...')
#12 {main}</pre>
 for query ALTER TABLE `wp_evercookie_iplist` DROP COLUMN `refid`; made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/evercookie/evercookie.php'), require_once('/plugins/evercookie/upgrade.php'), WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:37:33 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>ALTER TABLE `wp_evercookie_refmount`
            ADD CONSTRAINT `ipid` FOREIGN KEY (`ipid2`) REFERENCES `wp_evercookie_iplist` (`ipid`) ON DELETE CASCADE ON UPDATE CASCADE;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_refmount</li>
<li>Executing: SELECT
					COLUMN_NAME,
					LOWER(COLUMN_NAME) AS COLUMN_NAME_LOWERCASE
				FROM `_wp_sqlite_mysql_information_schema_columns` WHERE table_schema = ? AND table_name = ? | parameters: database_name_here, wp_evercookie_refmount</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_refmount</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
FOREIGN KEY and CHECK constraints are not supported yet.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('FOREIGN KEY and...', 0, Object(Exception))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('ALTER TABLE `wp...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('ALTER TABLE `wp...')
#3 /wordpress/wp-content/plugins/evercookie/upgrade.php(41): WP_SQLite_DB->query('ALTER TABLE `wp...')
#4 /wordpress/wp-content/plugins/evercookie/evercookie.php(35): require_once('/wordpress/wp-c...')
#5 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#6 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('evercookie/ever...')
#7 /internal/eval.php(20): activate_plugin('evercookie/ever...')
#8 {main}</pre>
 for query ALTER TABLE `wp_evercookie_refmount`
            ADD CONSTRAINT `ipid` FOREIGN KEY (`ipid2`) REFERENCES `wp_evercookie_iplist` (`ipid`) ON DELETE CASCADE ON UPDATE CASCADE; made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/evercookie/evercookie.php'), require_once('/plugins/evercookie/upgrade.php'), WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:37:33 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>ALTER TABLE `wp_evercookie_refmount`
            ADD CONSTRAINT `refid2` FOREIGN KEY (`refid`) REFERENCES `wp_evercookie_referer` (`refid`) ON DELETE CASCADE ON UPDATE CASCADE;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_refmount</li>
<li>Executing: SELECT
					COLUMN_NAME,
					LOWER(COLUMN_NAME) AS COLUMN_NAME_LOWERCASE
				FROM `_wp_sqlite_mysql_information_schema_columns` WHERE table_schema = ? AND table_name = ? | parameters: database_name_here, wp_evercookie_refmount</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_refmount</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
FOREIGN KEY and CHECK constraints are not supported yet.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('FOREIGN KEY and...', 0, Object(Exception))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('ALTER TABLE `wp...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('ALTER TABLE `wp...')
#3 /wordpress/wp-content/plugins/evercookie/upgrade.php(46): WP_SQLite_DB->query('ALTER TABLE `wp...')
#4 /wordpress/wp-content/plugins/evercookie/evercookie.php(35): require_once('/wordpress/wp-c...')
#5 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#6 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('evercookie/ever...')
#7 /internal/eval.php(20): activate_plugin('evercookie/ever...')
#8 {main}</pre>
 for query ALTER TABLE `wp_evercookie_refmount`
            ADD CONSTRAINT `refid2` FOREIGN KEY (`refid`) REFERENCES `wp_evercookie_referer` (`refid`) ON DELETE CASCADE ON UPDATE CASCADE; made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/evercookie/evercookie.php'), require_once('/plugins/evercookie/upgrade.php'), WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:37:33 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>ALTER TABLE `wp_evercookie_iplist`
            ADD CONSTRAINT `everid` FOREIGN KEY (`everid`) REFERENCES `wp_evercookie` (`everid`) ON DELETE CASCADE ON UPDATE CASCADE</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_iplist</li>
<li>Executing: SELECT
					COLUMN_NAME,
					LOWER(COLUMN_NAME) AS COLUMN_NAME_LOWERCASE
				FROM `_wp_sqlite_mysql_information_schema_columns` WHERE table_schema = ? AND table_name = ? | parameters: database_name_here, wp_evercookie_iplist</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_iplist</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
FOREIGN KEY and CHECK constraints are not supported yet.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('FOREIGN KEY and...', 0, Object(Exception))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('ALTER TABLE `wp...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('ALTER TABLE `wp...')
#3 /wordpress/wp-admin/includes/upgrade.php(3280): WP_SQLite_DB->query('ALTER TABLE `wp...')
#4 /wordpress/wp-content/plugins/evercookie/install.php(67): dbDelta(Array)
#5 /wordpress/wp-includes/class-wp-hook.php(324): wp_evercookie_install(false)
#6 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#7 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#8 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_everco...', false)
#9 /internal/eval.php(20): activate_plugin('evercookie/ever...')
#10 {main}</pre>
 for query ALTER TABLE `wp_evercookie_iplist`
            ADD CONSTRAINT `everid` FOREIGN KEY (`everid`) REFERENCES `wp_evercookie` (`everid`) ON DELETE CASCADE ON UPDATE CASCADE made by activate_plugin, do_action('activate_evercookie/evercookie.php'), WP_Hook->do_action, WP_Hook->apply_filters, wp_evercookie_install, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:37:33 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>ALTER TABLE `wp_evercookie_refmount`
            ADD CONSTRAINT `ipid` FOREIGN KEY (`ipid`) REFERENCES `wp_evercookie_iplist` (`ipid`) ON DELETE CASCADE ON UPDATE CASCADE</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_refmount</li>
<li>Executing: SELECT
					COLUMN_NAME,
					LOWER(COLUMN_NAME) AS COLUMN_NAME_LOWERCASE
				FROM `_wp_sqlite_mysql_information_schema_columns` WHERE table_schema = ? AND table_name = ? | parameters: database_name_here, wp_evercookie_refmount</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_refmount</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
FOREIGN KEY and CHECK constraints are not supported yet.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('FOREIGN KEY and...', 0, Object(Exception))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('ALTER TABLE `wp...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('ALTER TABLE `wp...')
#3 /wordpress/wp-admin/includes/upgrade.php(3280): WP_SQLite_DB->query('ALTER TABLE `wp...')
#4 /wordpress/wp-content/plugins/evercookie/install.php(70): dbDelta(Array)
#5 /wordpress/wp-includes/class-wp-hook.php(324): wp_evercookie_install(false)
#6 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#7 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#8 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_everco...', false)
#9 /internal/eval.php(20): activate_plugin('evercookie/ever...')
#10 {main}</pre>
 for query ALTER TABLE `wp_evercookie_refmount`
            ADD CONSTRAINT `ipid` FOREIGN KEY (`ipid`) REFERENCES `wp_evercookie_iplist` (`ipid`) ON DELETE CASCADE ON UPDATE CASCADE made by activate_plugin, do_action('activate_evercookie/evercookie.php'), WP_Hook->do_action, WP_Hook->apply_filters, wp_evercookie_install, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:37:33 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>ALTER TABLE `wp_evercookie_refmount`
            ADD CONSTRAINT `refid` FOREIGN KEY (`refid`) REFERENCES `wp_evercookie_referer` (`refid`) ON DELETE CASCADE ON UPDATE CASCADE</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_refmount</li>
<li>Executing: SELECT
					COLUMN_NAME,
					LOWER(COLUMN_NAME) AS COLUMN_NAME_LOWERCASE
				FROM `_wp_sqlite_mysql_information_schema_columns` WHERE table_schema = ? AND table_name = ? | parameters: database_name_here, wp_evercookie_refmount</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_refmount</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
FOREIGN KEY and CHECK constraints are not supported yet.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('FOREIGN KEY and...', 0, Object(Exception))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('ALTER TABLE `wp...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('ALTER TABLE `wp...')
#3 /wordpress/wp-admin/includes/upgrade.php(3280): WP_SQLite_DB->query('ALTER TABLE `wp...')
#4 /wordpress/wp-content/plugins/evercookie/install.php(71): dbDelta(Array)
#5 /wordpress/wp-includes/class-wp-hook.php(324): wp_evercookie_install(false)
#6 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#7 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#8 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_everco...', false)
#9 /internal/eval.php(20): activate_plugin('evercookie/ever...')
#10 {main}</pre>
 for query ALTER TABLE `wp_evercookie_refmount`
            ADD CONSTRAINT `refid` FOREIGN KEY (`refid`) REFERENCES `wp_evercookie_referer` (`refid`) ON DELETE CASCADE ON UPDATE CASCADE made by activate_plugin, do_action('activate_evercookie/evercookie.php'), WP_Hook->do_action, WP_Hook->apply_filters, wp_evercookie_install, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:37:35 UTC] PHP Warning:  Undefined array key "REMOTE_ADDR" in /wordpress/wp-content/plugins/evercookie/includes/db.php on line 217
[06-Jul-2025 22:37:35 UTC] PHP Warning:  Undefined array key "HTTP_REFERER" in /wordpress/wp-content/plugins/evercookie/evercookie.php on line 76
[06-Jul-2025 22:37:43 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>ALTER TABLE `wp_evercookie_iplist` DROP COLUMN `refid`;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_iplist</li>
<li>Executing: SELECT
					COLUMN_NAME,
					LOWER(COLUMN_NAME) AS COLUMN_NAME_LOWERCASE
				FROM `_wp_sqlite_mysql_information_schema_columns` WHERE table_schema = ? AND table_name = ? | parameters: database_name_here, wp_evercookie_iplist</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_iplist</li>
<li>Executing: DELETE FROM `_wp_sqlite_mysql_information_schema_columns` WHERE `table_schema` = ? AND `table_name` = ? AND `column_name` = ? | parameters: database_name_here, wp_evercookie_iplist, refid</li>
<li>Executing: DELETE FROM `_wp_sqlite_mysql_information_schema_statistics` WHERE `table_schema` = ? AND `table_name` = ? AND `column_name` = ? | parameters: database_name_here, wp_evercookie_iplist, refid</li>
<li>Executing: UPDATE `_wp_sqlite_mysql_information_schema_statistics` AS statistics
				SET seq_in_index = renumbered.seq_in_index
				FROM (
					SELECT
						rowid,
						row_number() OVER (PARTITION BY index_name ORDER BY seq_in_index) AS seq_in_index
					FROM `_wp_sqlite_mysql_information_schema_statistics`
					WHERE table_schema = ?
					AND table_name = ?
				) AS renumbered
				WHERE statistics.rowid = renumbered.rowid
				AND statistics.seq_in_index != renumbered.seq_in_index | parameters: database_name_here, wp_evercookie_iplist</li>
<li>Executing: 
				UPDATE `_wp_sqlite_mysql_information_schema_columns` AS c
				SET (column_key, is_nullable) = (
					SELECT
						CASE
							WHEN MAX(s.index_name = 'PRIMARY') THEN 'PRI'
							WHEN MAX(s.non_unique = 0 AND s.seq_in_index = 1) THEN 'UNI'
							WHEN MAX(s.seq_in_index = 1) THEN 'MUL'
							ELSE ''
						END,
						CASE
							WHEN MAX(s.index_name = 'PRIMARY') THEN 'NO'
							ELSE c.is_nullable
						END
					FROM `_wp_sqlite_mysql_information_schema_statistics` AS s
					WHERE s.table_schema = c.table_schema
					AND s.table_name = c.table_name
					AND s.column_name = c.column_name
				)
			    WHERE c.table_schema = ?
			    AND c.table_name = ?
			 | parameters: database_name_here, wp_evercookie_iplist</li>
<li>Executing: DELETE FROM `_wp_sqlite_mysql_information_schema_table_constraints`
				WHERE table_schema = ?
				AND table_name = ?
				AND constraint_type IN ('PRIMARY KEY', 'UNIQUE')
				AND constraint_name NOT IN (
					SELECT DISTINCT index_name FROM `_wp_sqlite_mysql_information_schema_statistics` WHERE table_schema = ? AND table_name = ?
				) | parameters: database_name_here, wp_evercookie_iplist, database_name_here, wp_evercookie_iplist</li>
<li>Executing: PRAGMA foreign_keys | (no parameters)</li>
<li>Executing: PRAGMA foreign_keys = OFF | (no parameters)</li>
<li>Executing: 
				SELECT *
				FROM `_wp_sqlite_mysql_information_schema_tables`
				WHERE table_type = 'BASE TABLE'
				AND table_schema = ?
				AND table_name = ?
			 | parameters: database_name_here, wp_evercookie_iplist</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Table 'wp_evercookie_iplist' doesn't exist
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(3276): WP_SQLite_Driver->new_driver_exception('Table 'wp_everc...', '42S02')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(2859): WP_SQLite_Driver->get_sqlite_create_table_statement(false, 'wp_evercookie_i...', '_wp_sqlite_tmp_...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(1380): WP_SQLite_Driver->recreate_table_from_information_schema(false, 'wp_evercookie_i...', Array)
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(896): WP_SQLite_Driver->execute_alter_table_statement(Object(WP_Parser_Node))
#4 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#5 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('ALTER TABLE `wp...')
#6 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('ALTER TABLE `wp...')
#7 /wordpress/wp-content/plugins/evercookie/upgrade.php(18): WP_SQLite_DB->query('ALTER TABLE `wp...')
#8 /wordpress/wp-content/plugins/evercookie/evercookie.php(35): require_once('/wordpress/wp-c...')
#9 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#10 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('evercookie/ever...')
#11 /internal/eval.php(20): activate_plugin('evercookie/ever...')
#12 {main}</pre>
 for query ALTER TABLE `wp_evercookie_iplist` DROP COLUMN `refid`; made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/evercookie/evercookie.php'), require_once('/plugins/evercookie/upgrade.php'), WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:37:43 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>ALTER TABLE `wp_evercookie_refmount`
            ADD CONSTRAINT `ipid` FOREIGN KEY (`ipid2`) REFERENCES `wp_evercookie_iplist` (`ipid`) ON DELETE CASCADE ON UPDATE CASCADE;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_refmount</li>
<li>Executing: SELECT
					COLUMN_NAME,
					LOWER(COLUMN_NAME) AS COLUMN_NAME_LOWERCASE
				FROM `_wp_sqlite_mysql_information_schema_columns` WHERE table_schema = ? AND table_name = ? | parameters: database_name_here, wp_evercookie_refmount</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_refmount</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
FOREIGN KEY and CHECK constraints are not supported yet.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('FOREIGN KEY and...', 0, Object(Exception))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('ALTER TABLE `wp...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('ALTER TABLE `wp...')
#3 /wordpress/wp-content/plugins/evercookie/upgrade.php(41): WP_SQLite_DB->query('ALTER TABLE `wp...')
#4 /wordpress/wp-content/plugins/evercookie/evercookie.php(35): require_once('/wordpress/wp-c...')
#5 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#6 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('evercookie/ever...')
#7 /internal/eval.php(20): activate_plugin('evercookie/ever...')
#8 {main}</pre>
 for query ALTER TABLE `wp_evercookie_refmount`
            ADD CONSTRAINT `ipid` FOREIGN KEY (`ipid2`) REFERENCES `wp_evercookie_iplist` (`ipid`) ON DELETE CASCADE ON UPDATE CASCADE; made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/evercookie/evercookie.php'), require_once('/plugins/evercookie/upgrade.php'), WP_SQLite_DB->query, WP_SQLite_DB->print_error
[06-Jul-2025 22:37:43 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>ALTER TABLE `wp_evercookie_refmount`
            ADD CONSTRAINT `refid2` FOREIGN KEY (`refid`) REFERENCES `wp_evercookie_referer` (`refid`) ON DELETE CASCADE ON UPDATE CASCADE;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_refmount</li>
<li>Executing: SELECT
					COLUMN_NAME,
					LOWER(COLUMN_NAME) AS COLUMN_NAME_LOWERCASE
				FROM `_wp_sqlite_mysql_information_schema_columns` WHERE table_schema = ? AND table_name = ? | parameters: database_name_here, wp_evercookie_refmount</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_evercookie_refmount</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style
