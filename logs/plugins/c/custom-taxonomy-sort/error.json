[
  {
    "message": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "level": "FATAL",
    "type": "PLAYGROUND",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "log": "/tmp/tmp.xTrwbSLwUo"
  },
  {
    "message": "Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:24:42 UTC] PHP Warning:  Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:24:52 UTC] PHP Warning:  Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:02 UTC] PHP Warning:  Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:38 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:38 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:38 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:40 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:40 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:40 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:40 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:48 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:48 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:48 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:50 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:50 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:50 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:50 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:57 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:57 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:57 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:59 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:59 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:59 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:59 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:09 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:11 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:20 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:22 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:31 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:33 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:28:29 UTC] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163\nStack trace:\n#0 /wordpress/wp-includes/class-wp-widget-factory.php(62): WP_Widget->__construct()\n#1 /wordpress/wp-includes/widgets.php(123): WP_Widget_Factory->register('CloudyTagsWidge...')\n#2 /wordpress/wp-content/plugins/cloudy-tags/widget.php(177): register_widget('CloudyTagsWidge...')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): cloudy_tags_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#7 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#10 /wordpress/wp-settings.php(727): do_action('init')\n#11 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#12 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#13 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#14 {main}\n  thrown in /wordpress/wp-includes/class-wp-widget.php on line 163",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:28:39 UTC] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163\nStack trace:\n#0 /wordpress/wp-includes/class-wp-widget-factory.php(62): WP_Widget->__construct()\n#1 /wordpress/wp-includes/widgets.php(123): WP_Widget_Factory->register('CloudyTagsWidge...')\n#2 /wordpress/wp-content/plugins/cloudy-tags/widget.php(177): register_widget('CloudyTagsWidge...')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): cloudy_tags_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#7 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#10 /wordpress/wp-settings.php(727): do_action('init')\n#11 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#12 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#13 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#14 {main}\n  thrown in /wordpress/wp-includes/class-wp-widget.php on line 163",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:28:47 UTC] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163\nStack trace:\n#0 /wordpress/wp-includes/class-wp-widget-factory.php(62): WP_Widget->__construct()\n#1 /wordpress/wp-includes/widgets.php(123): WP_Widget_Factory->register('CloudyTagsWidge...')\n#2 /wordpress/wp-content/plugins/cloudy-tags/widget.php(177): register_widget('CloudyTagsWidge...')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): cloudy_tags_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#7 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#10 /wordpress/wp-settings.php(727): do_action('init')\n#11 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#12 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#13 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#14 {main}\n  thrown in /wordpress/wp-includes/class-wp-widget.php on line 163",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $custom_column follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:30:46 UTC] PHP Deprecated:  Required parameter $custom_column follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $term_id follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:30:46 UTC] PHP Deprecated:  Required parameter $term_id follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Cannot redeclare update_termmeta_cache() (previously declared in /wordpress/wp-includes/taxonomy.php:1490) in /wordpress/wp-content/plugins/custom-taxonomy-sort/includes/simple-term-meta.php on line 93",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:30:46 UTC] PHP Fatal error:  Cannot redeclare update_termmeta_cache() (previously declared in /wordpress/wp-includes/taxonomy.php:1490) in /wordpress/wp-content/plugins/custom-taxonomy-sort/includes/simple-term-meta.php on line 93\n\n    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n  [cause]: Error: Error when executing the blueprint step #5 ({\"step\":\"installPlugin\",\"pluginData\":{\"resource\":\"wordpress.org/plugins\",\"slug\":\"custom-taxonomy-sort\"},\"options\":{\"activate\":true}}) : PHP.run() failed with exit code 255 and the following output: \n      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12449:19)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)\n      ... 2 lines matching cause stack trace ...\n      at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n    [cause]: PHPExecutionFailureError: PHP.run() failed with exit code 255 and the following output: \n        at PHP.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:987:19)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async wr (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:33:39)\n        at async Object.gt [as installPlugin] (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:974:42)\n        at async g (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12517:30)\n        at async Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12446:23)\n        at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)\n        at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)\n        at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n        at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n      response: PHPResponse {\n        httpStatusCode: 500,\n        headers: {\n          'x-powered-by': [ 'PHP/8.0.30-dev' ],\n          'content-type': [ 'text/html; charset=UTF-8' ]\n        },\n        bytes: Uint8Array(0) [],\n        exitCode: 255,\n        errors: ''\n      },\n      source: 'request'\n    }\n  }\n}\n\n",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "level": "FATAL",
    "type": "PLAYGROUND",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "log": "/tmp/tmp.Wt2Bh1awtu"
  },
  {
    "message": "Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:24:42 UTC] PHP Warning:  Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:24:52 UTC] PHP Warning:  Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:02 UTC] PHP Warning:  Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:38 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:38 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:38 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:40 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:40 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:40 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:40 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:48 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:48 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:48 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:50 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:50 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:50 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:50 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:57 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:57 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:57 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:59 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:59 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:59 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:59 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:09 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:11 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:20 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:22 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:31 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:33 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:28:29 UTC] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163\nStack trace:\n#0 /wordpress/wp-includes/class-wp-widget-factory.php(62): WP_Widget->__construct()\n#1 /wordpress/wp-includes/widgets.php(123): WP_Widget_Factory->register('CloudyTagsWidge...')\n#2 /wordpress/wp-content/plugins/cloudy-tags/widget.php(177): register_widget('CloudyTagsWidge...')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): cloudy_tags_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#7 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#10 /wordpress/wp-settings.php(727): do_action('init')\n#11 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#12 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#13 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#14 {main}\n  thrown in /wordpress/wp-includes/class-wp-widget.php on line 163",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:28:39 UTC] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163\nStack trace:\n#0 /wordpress/wp-includes/class-wp-widget-factory.php(62): WP_Widget->__construct()\n#1 /wordpress/wp-includes/widgets.php(123): WP_Widget_Factory->register('CloudyTagsWidge...')\n#2 /wordpress/wp-content/plugins/cloudy-tags/widget.php(177): register_widget('CloudyTagsWidge...')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): cloudy_tags_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#7 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#10 /wordpress/wp-settings.php(727): do_action('init')\n#11 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#12 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#13 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#14 {main}\n  thrown in /wordpress/wp-includes/class-wp-widget.php on line 163",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:28:47 UTC] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163\nStack trace:\n#0 /wordpress/wp-includes/class-wp-widget-factory.php(62): WP_Widget->__construct()\n#1 /wordpress/wp-includes/widgets.php(123): WP_Widget_Factory->register('CloudyTagsWidge...')\n#2 /wordpress/wp-content/plugins/cloudy-tags/widget.php(177): register_widget('CloudyTagsWidge...')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): cloudy_tags_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#7 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#10 /wordpress/wp-settings.php(727): do_action('init')\n#11 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#12 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#13 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#14 {main}\n  thrown in /wordpress/wp-includes/class-wp-widget.php on line 163",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $custom_column follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:30:46 UTC] PHP Deprecated:  Required parameter $custom_column follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $term_id follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:30:46 UTC] PHP Deprecated:  Required parameter $term_id follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Cannot redeclare update_termmeta_cache() (previously declared in /wordpress/wp-includes/taxonomy.php:1490) in /wordpress/wp-content/plugins/custom-taxonomy-sort/includes/simple-term-meta.php on line 93",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:30:46 UTC] PHP Fatal error:  Cannot redeclare update_termmeta_cache() (previously declared in /wordpress/wp-includes/taxonomy.php:1490) in /wordpress/wp-content/plugins/custom-taxonomy-sort/includes/simple-term-meta.php on line 93",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $custom_column follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:30:54 UTC] PHP Deprecated:  Required parameter $custom_column follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $term_id follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:30:54 UTC] PHP Deprecated:  Required parameter $term_id follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Cannot redeclare update_termmeta_cache() (previously declared in /wordpress/wp-includes/taxonomy.php:1490) in /wordpress/wp-content/plugins/custom-taxonomy-sort/includes/simple-term-meta.php on line 93",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:30:54 UTC] PHP Fatal error:  Cannot redeclare update_termmeta_cache() (previously declared in /wordpress/wp-includes/taxonomy.php:1490) in /wordpress/wp-content/plugins/custom-taxonomy-sort/includes/simple-term-meta.php on line 93\n\n    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n  [cause]: Error: Error when executing the blueprint step #1 ({\"step\":\"installPlugin\",\"pluginData\":{\"resource\":\"wordpress.org/plugins\",\"slug\":\"custom-taxonomy-sort\"},\"options\":{\"activate\":true}}) : PHP.run() failed with exit code 255 and the following output: \n      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12449:19)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)\n      ... 2 lines matching cause stack trace ...\n      at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n    [cause]: PHPExecutionFailureError: PHP.run() failed with exit code 255 and the following output: \n        at PHP.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:987:19)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async wr (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:33:39)\n        at async Object.gt [as installPlugin] (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:974:42)\n        at async g (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12517:30)\n        at async Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12446:23)\n        at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)\n        at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)\n        at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n        at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n      response: PHPResponse {\n        httpStatusCode: 500,\n        headers: {\n          'x-powered-by': [ 'PHP/8.0.30-dev' ],\n          'content-type': [ 'text/html; charset=UTF-8' ]\n        },\n        bytes: Uint8Array(0) [],\n        exitCode: 255,\n        errors: ''\n      },\n      source: 'request'\n    }\n  }\n}\n\n",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "level": "FATAL",
    "type": "PLAYGROUND",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "log": "/tmp/tmp.zCk3HzLrxs"
  },
  {
    "message": "Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:24:42 UTC] PHP Warning:  Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:24:52 UTC] PHP Warning:  Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:02 UTC] PHP Warning:  Constant CUSTOM_TAGS already defined in /wordpress/wp-content/plugins/card-converter/card-converter.php on line 106",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:38 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:38 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:38 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:40 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:40 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:40 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:40 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:48 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:48 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:48 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:50 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:50 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:50 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:50 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:57 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:57 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:57 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:59 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 29",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:59 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:59 UTC] PHP Warning:  The magic method Clearcode\\Backup\\Singleton::__wakeup() must have public visibility in /wordpress/wp-content/plugins/cc-backup/framework/singleton.php on line 32",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:25:59 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>cc-backup</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:09 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:11 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:20 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:22 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:31 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:26:33 UTC] PHP Deprecated:  Required parameter $wrapper follows optional parameter $type in /wordpress/wp-content/plugins/cf7-easy-math-captcha/freemius/includes/class-fs-logger.php on line 145",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:28:29 UTC] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163\nStack trace:\n#0 /wordpress/wp-includes/class-wp-widget-factory.php(62): WP_Widget->__construct()\n#1 /wordpress/wp-includes/widgets.php(123): WP_Widget_Factory->register('CloudyTagsWidge...')\n#2 /wordpress/wp-content/plugins/cloudy-tags/widget.php(177): register_widget('CloudyTagsWidge...')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): cloudy_tags_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#7 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#10 /wordpress/wp-settings.php(727): do_action('init')\n#11 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#12 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#13 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#14 {main}\n  thrown in /wordpress/wp-includes/class-wp-widget.php on line 163",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:28:39 UTC] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163\nStack trace:\n#0 /wordpress/wp-includes/class-wp-widget-factory.php(62): WP_Widget->__construct()\n#1 /wordpress/wp-includes/widgets.php(123): WP_Widget_Factory->register('CloudyTagsWidge...')\n#2 /wordpress/wp-content/plugins/cloudy-tags/widget.php(177): register_widget('CloudyTagsWidge...')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): cloudy_tags_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#7 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#10 /wordpress/wp-settings.php(727): do_action('init')\n#11 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#12 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#13 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#14 {main}\n  thrown in /wordpress/wp-includes/class-wp-widget.php on line 163",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:28:47 UTC] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163\nStack trace:\n#0 /wordpress/wp-includes/class-wp-widget-factory.php(62): WP_Widget->__construct()\n#1 /wordpress/wp-includes/widgets.php(123): WP_Widget_Factory->register('CloudyTagsWidge...')\n#2 /wordpress/wp-content/plugins/cloudy-tags/widget.php(177): register_widget('CloudyTagsWidge...')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): cloudy_tags_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#7 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#10 /wordpress/wp-settings.php(727): do_action('init')\n#11 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#12 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#13 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#14 {main}\n  thrown in /wordpress/wp-includes/class-wp-widget.php on line 163",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $custom_column follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:30:46 UTC] PHP Deprecated:  Required parameter $custom_column follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $term_id follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:30:46 UTC] PHP Deprecated:  Required parameter $term_id follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Cannot redeclare update_termmeta_cache() (previously declared in /wordpress/wp-includes/taxonomy.php:1490) in /wordpress/wp-content/plugins/custom-taxonomy-sort/includes/simple-term-meta.php on line 93",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:30:46 UTC] PHP Fatal error:  Cannot redeclare update_termmeta_cache() (previously declared in /wordpress/wp-includes/taxonomy.php:1490) in /wordpress/wp-content/plugins/custom-taxonomy-sort/includes/simple-term-meta.php on line 93",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $custom_column follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:30:54 UTC] PHP Deprecated:  Required parameter $custom_column follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $term_id follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:30:54 UTC] PHP Deprecated:  Required parameter $term_id follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Cannot redeclare update_termmeta_cache() (previously declared in /wordpress/wp-includes/taxonomy.php:1490) in /wordpress/wp-content/plugins/custom-taxonomy-sort/includes/simple-term-meta.php on line 93",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:30:54 UTC] PHP Fatal error:  Cannot redeclare update_termmeta_cache() (previously declared in /wordpress/wp-includes/taxonomy.php:1490) in /wordpress/wp-content/plugins/custom-taxonomy-sort/includes/simple-term-meta.php on line 93",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $custom_column follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:31:02 UTC] PHP Deprecated:  Required parameter $custom_column follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Required parameter $term_id follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:31:02 UTC] PHP Deprecated:  Required parameter $term_id follows optional parameter $empty in /wordpress/wp-content/plugins/custom-taxonomy-sort/custom-taxonomy-sort.php on line 660",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  },
  {
    "message": "Cannot redeclare update_termmeta_cache() (previously declared in /wordpress/wp-includes/taxonomy.php:1490) in /wordpress/wp-content/plugins/custom-taxonomy-sort/includes/simple-term-meta.php on line 93",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "custom-taxonomy-sort",
    "details": "[17-Apr-2025 11:31:02 UTC] PHP Fatal error:  Cannot redeclare update_termmeta_cache() (previously declared in /wordpress/wp-includes/taxonomy.php:1490) in /wordpress/wp-content/plugins/custom-taxonomy-sort/includes/simple-term-meta.php on line 93\n\n    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n  [cause]: Error: Error when executing the blueprint step #1 ({\"step\":\"installPlugin\",\"pluginData\":{\"resource\":\"wordpress.org/plugins\",\"slug\":\"custom-taxonomy-sort\"},\"options\":{\"activate\":true}}) : PHP.run() failed with exit code 255 and the following output: \n      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12449:19)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)\n      ... 2 lines matching cause stack trace ...\n      at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n    [cause]: PHPExecutionFailureError: PHP.run() failed with exit code 255 and the following output: \n        at PHP.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:987:19)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async wr (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:33:39)\n        at async Object.gt [as installPlugin] (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:974:42)\n        at async g (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12517:30)\n        at async Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12446:23)\n        at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)\n        at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)\n        at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n        at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n      response: PHPResponse {\n        httpStatusCode: 500,\n        headers: {\n          'x-powered-by': [ 'PHP/8.0.30-dev' ],\n          'content-type': [ 'text/html; charset=UTF-8' ]\n        },\n        bytes: Uint8Array(0) [],\n        exitCode: 255,\n        errors: ''\n      },\n      source: 'request'\n    }\n  }\n}\n\n",
    "log": "/logs/plugins/c/custom-taxonomy-sort/error.json"
  }
]
