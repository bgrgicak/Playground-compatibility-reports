file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:21
`)},constants:R,phpIniEntries:{"openssl.cafile":"/internal/shared/ca-bundle.crt",allow_url_fopen:"1",disable_functions:""},hooks:{async beforeWordPressFiles(h){e.mountBeforeInstall&&u(h,e.mountBeforeInstall)}}}),d.log("Booted!");const W=await w.getPrimaryPhp();try{if(o&&!e.mountBeforeInstall&&!m.existsSync(f)&&(d.log("Caching preinstalled WordPress for the next boot..."),m.writeFileSync(f,await Z(W,"/wordpress")),d.log("Cached!")),e.mount&&u(W,e.mount),H=!0,l){const{php:h,reap:b}=await w.processManager.acquirePHPInstance();try{d.log("Running the Blueprint..."),await M(l,h),d.log("Finished running the blueprint")}finally{b()}}a==="build-snapshot"?(await i(e.outfile),d.log(`WordPress exported to ${e.outfile}`),process.exit(0)):a==="run-blueprint"?(d.log("Blueprint executed"),process.exit(0)):d.log(`WordPress is running on ${s}`)}catch(h){if(!e.debug)throw h;const b=W.readFileAsText(L);throw new Error(b,{cause:h})}},async handleRequest(r){return H?await w.request(r):U.forHttpCode(502,"WordPress is not ready yet")}})}te();


Error: [10-Apr-2025 16:34:51 UTC] PHP Fatal error:  Uncaught Error: Class 'WpOrg\Requests\Response' not found in /wordpress/wp-includes/Requests/src/Requests.php:724
Stack trace:
#0 /wordpress/wp-includes/Requests/src/Requests.php(473): WpOrg\Requests\Requests::parse_response('', 'http://127.0.0....', Array, NULL, Array)
#1 /wordpress/wp-includes/class-wp-http.php(410): WpOrg\Requests\Requests::request('http://127.0.0....', Array, NULL, 'POST', Array)
#2 /wordpress/wp-includes/class-wp-http.php(633): WP_Http->request('http://127.0.0....', Array)
#3 /wordpress/wp-includes/http.php(196): WP_Http->post('http://127.0.0....', Array)
#4 /wordpress/wp-includes/cron.php(949): wp_remote_post('http://127.0.0....', Array)
#5 /wordpress/wp-includes/cron.php(1029): spawn_cron(1744302888.809)
#6 /wordpress/wp-includes/class-wp-hook.php(324): _wp_cron('')
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-settings.php(726): do_action('wp_loaded')
#10 /word in /wordpress/wp-includes/Requests/src/Requests.php on line 724
[10-Apr-2025 16:35:26 UTC] Automatic updates starting...

    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:21:903)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    ... 2 lines matching cause stack trace ...
    at process.processTimers (node:internal/timers:543:7)
    at async Y (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:1:1159) {
  [cause]: Error: Error when executing the blueprint step #4 ({"step":"installPlugin","pluginData":{"resource":"wordpress.org/plugins","slug":"integration-cds"},"options":{"activate":true}}) : 
  "unreachable" WASM instruction executed.
  
  The typical reason is a PHP function missing from the ASYNCIFY_ONLY
  list when building PHP.wasm.
  
  You will need to file a new issue in the WordPress Playground repository
  and paste this error message there:
  
  https://github.com/WordPress/wordpress-playground/issues/new
  
  If you're a core developer, the typical fix is to:
  
  * Isolate a minimal reproduction of the error
  * Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository
  * Run 'npm run fix-asyncify'
  * Commit the changes, push to the repo, release updated NPM packages
  
  Below is a list of all the PHP functions found in the stack trace to
  help with the minimal reproduction. If they're all already listed in
  the Dockerfile, you'll need to trigger this error again with long stack
  traces enabled. In node.js, you can do it using the --stack-trace-limit=100
  CLI option: 
  
      * php.wasm.__wrap_select
      * php.wasm.Curl_socket_check
      * php.wasm.curl_multi_perform
      * php.wasm.zif_curl_exec
      * php.wasm.ZEND_DO_ICALL_SPEC_RETVAL_UNUSED_HANDLER
      * php.wasm.execute_ex
      * php.wasm.zend_call_function
      * php.wasm.php_array_walk
  
      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12407:32)
      at processTicksAndRejections (node:internal/process/task_queues:105:5)
      ... 2 lines matching cause stack trace ...
      at process.processTimers (node:internal/timers:543:7)
      at async ns (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12508:3)
      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:21:568)
      at async Y (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:1:1159) {
    [cause]: Error: 
    "unreachable" WASM instruction executed.
    
    The typical reason is a PHP function missing from the ASYNCIFY_ONLY
    list when building PHP.wasm.
    
    You will need to file a new issue in the WordPress Playground repository
    and paste this error message there:
    
    https://github.com/WordPress/wordpress-playground/issues/new
    
    If you're a core developer, the typical fix is to:
    
    * Isolate a minimal reproduction of the error
    * Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository
    * Run 'npm run fix-asyncify'
    * Commit the changes, push to the repo, release updated NPM packages
    
    Below is a list of all the PHP functions found in the stack trace to
    help with the minimal reproduction. If they're all already listed in
    the Dockerfile, you'll need to trigger this error again with long stack
    traces enabled. In node.js, you can do it using the --stack-trace-limit=100
    CLI option: 
    
        * php.wasm.__wrap_select
        * php.wasm.Curl_socket_check
        * php.wasm.curl_multi_perform
        * php.wasm.zif_curl_exec
        * php.wasm.ZEND_DO_ICALL_SPEC_RETVAL_UNUSED_HANDLER
        * php.wasm.execute_ex
        * php.wasm.zend_call_function
        * php.wasm.php_array_walk
    
        at PHP.ae (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:1446:78)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at runNextTicks (node:internal/process/task_queues:69:3)
        at listOnTimeout (node:internal/timers:569:9)
        at process.processTimers (node:internal/timers:543:7)
        at async PHP.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:981:17)
        at async vr (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:33:39)
        at async Object.ut [as installPlugin] (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:1084:42)
        at async d (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12473:30)
        at async Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12404:23) {
      cause: Error: Rethrown
          at UnhandledRejectionsTarget.e (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:1423:19)
          at [nodejs.internal.kHybridDispatch] (node:internal/event_target:827:20)
          at UnhandledRejectionsTarget.dispatchEvent (node:internal/event_target:762:26)
          at t.wasmExports.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:565:15)
          at invoke_iiiii (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:94821:14)
          at php.wasm.php_execute_script (wasm://wasm/php.wasm-03814f8a:wasm-function[11306]:0x63974d)
          at php.wasm.dynCall_ii (wasm://wasm/php.wasm-03814f8a:wasm-function[13224]:0x71334e)
          at ret.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:94159:22)
          at t.wasmExports.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:556:18)
          at invoke_ii (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:94744:14) {
        cause: RuntimeError: unreachable
            at php.wasm.zend_call_function (wasm://wasm/php.wasm-03814f8a:wasm-function[388]:0x2d060)
            at php.wasm.php_array_walk (wasm://wasm/php.wasm-03814f8a:wasm-function[3970]:0x29d74e)
            at php.wasm.zif_array_walk (wasm://wasm/php.wasm-03814f8a:wasm-function[9210]:0x593ca7)
            at php.wasm.ZEND_DO_FCALL_BY_NAME_SPEC_RETVAL_UNUSED_HANDLER (wasm://wasm/php.wasm-03814f8a:wasm-function[14623]:0x77c704)
            at php.wasm.execute_ex (wasm://wasm/php.wasm-03814f8a:wasm-function[13042]:0x6f8b20)
            at php.wasm.zend_execute (wasm://wasm/php.wasm-03814f8a:wasm-function[3505]:0x23f451)
            at php.wasm.zend_execute_scripts (wasm://wasm/php.wasm-03814f8a:wasm-function[9413]:0x5a67cf)
            at php.wasm.dynCall_iiiii (wasm://wasm/php.wasm-03814f8a:wasm-function[13221]:0x7130ea)
            at ret.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:94159:22)
            at t.wasmExports.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:556:18) {
          cause: Error
              at Asyncify.handleSleep (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:94970:45)
              at _emscripten_sleep (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:92880:44)
              at php.wasm.__wrap_select (wasm://wasm/php.wasm-03814f8a:wasm-function[1362]:0xccaeb)
              at php.wasm.Curl_socket_check (wasm://wasm/php.wasm-03814f8a:wasm-function[2044]:0x13df86)
              at php.wasm.curl_multi_perform (wasm://wasm/php.wasm-03814f8a:wasm-function[6238]:0x43808b)
              at php.wasm.zif_curl_exec (wasm://wasm/php.wasm-03814f8a:wasm-function[9128]:0x58bddb)
              at php.wasm.ZEND_DO_ICALL_SPEC_RETVAL_UNUSED_HANDLER (wasm://wasm/php.wasm-03814f8a:wasm-function[14617]:0x77a973)
              at php.wasm.execute_ex (wasm://wasm/php.wasm-03814f8a:wasm-function[13042]:0x6f8b20)
              at php.wasm.zend_call_function (wasm://wasm/php.wasm-03814f8a:wasm-function[388]:0x2cb51)
              at php.wasm.php_array_walk (wasm://wasm/php.wasm-03814f8a:wasm-function[3970]:0x29d74e)
        },
        betterMessage: '\n' +
          '"unreachable" WASM instruction executed.\n' +
          '\n' +
          'The typical reason is a PHP function missing from the ASYNCIFY_ONLY\n' +
          'list when building PHP.wasm.\n' +
          '\n' +
          'You will need to file a new issue in the WordPress Playground repository\n' +
          'and paste this error message there:\n' +
          '\n' +
          'https://github.com/WordPress/wordpress-playground/issues/new\n' +
          '\n' +
          "If you're a core developer, the typical fix is to:\n" +
          '\n' +
          '* Isolate a minimal reproduction of the error\n' +
          '* Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository\n' +
          "* Run 'npm run fix-asyncify'\n" +
          '* Commit the changes, push to the repo, release updated NPM packages\n' +
          '\n' +
          'Below is a list of all the PHP functions found in the stack trace to\n' +
          "help with the minimal reproduction. If they're all already listed in\n" +
          "the Dockerfile, you'll need to trigger this error again with long stack\n" +
          'traces enabled. In node.js, you can do it using the --stack-trace-limit=100\n' +
          'CLI option: \n' +
          '\n' +
          '    * php.wasm.__wrap_select\n' +
          '    * php.wasm.Curl_socket_check\n' +
          '    * php.wasm.curl_multi_perform\n' +
          '    * php.wasm.zif_curl_exec\n' +
          '    * php.wasm.ZEND_DO_ICALL_SPEC_RETVAL_UNUSED_HANDLER\n' +
          '    * php.wasm.execute_ex\n' +
          '    * php.wasm.zend_call_function\n' +
          '    * php.wasm.php_array_walk\n'
      }
    }
  }
}

Node.js v23.11.0
