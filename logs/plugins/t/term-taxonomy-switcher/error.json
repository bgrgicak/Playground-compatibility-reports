[
  {
    "message": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "level": "FATAL",
    "type": "PLAYGROUND",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "log": "/tmp/tmp.h5uClj4aa3"
  },
  {
    "message": "Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:16 UTC] PHP Warning:  Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:16 UTC] PHP Fatal error:  Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39\nStack trace:\n#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()\n#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('tag-this/tagthi...')\n#2 /internal/eval.php(20): activate_plugin('tag-this/tagthi...')\n#3 {main}\n  thrown in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:24 UTC] PHP Warning:  Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:24 UTC] PHP Fatal error:  Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39\nStack trace:\n#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()\n#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('tag-this/tagthi...')\n#2 /internal/eval.php(20): activate_plugin('tag-this/tagthi...')\n#3 {main}\n  thrown in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:33 UTC] PHP Warning:  Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:33 UTC] PHP Fatal error:  Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39\nStack trace:\n#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()\n#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('tag-this/tagthi...')\n#2 /internal/eval.php(20): activate_plugin('tag-this/tagthi...')\n#3 {main}\n  thrown in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:42 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:42 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:42 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:43 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:43 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:43 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:51 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:51 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:51 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:52 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:52 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:52 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:00 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:00 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:00 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:01 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:01 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:01 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:48:35 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-settings.php(727): do_action('init')\n#7 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#8 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#9 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#10 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:48:44 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-settings.php(727): do_action('init')\n#7 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#8 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#9 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#10 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:48:54 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-settings.php(727): do_action('init')\n#7 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#8 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#9 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#10 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:25 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:25 UTC] PHP Deprecated:  Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:35 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:35 UTC] PHP Deprecated:  Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:43 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:43 UTC] PHP Deprecated:  Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:54 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:54 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27\nStack trace:\n#0 /wordpress/wp-content/plugins/travelers-map/cttm-activation.php(14): cttm_create_new_marker('Default - Black', 'black', 'cttm_markers-bl...')\n#1 /wordpress/wp-content/plugins/travelers-map/travelers-map.php(44): require_once('/wordpress/wp-c...')\n#2 /wordpress/wp-includes/class-wp-hook.php(324): cttm_activation(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_travel...', false)\n#6 /internal/eval.php(20): activate_plugin('travelers-map/t...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php on line 27",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:51:03 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:51:04 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27\nStack trace:\n#0 /wordpress/wp-content/plugins/travelers-map/cttm-activation.php(14): cttm_create_new_marker('Default - Black', 'black', 'cttm_markers-bl...')\n#1 /wordpress/wp-content/plugins/travelers-map/travelers-map.php(44): require_once('/wordpress/wp-c...')\n#2 /wordpress/wp-includes/class-wp-hook.php(324): cttm_activation(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_travel...', false)\n#6 /internal/eval.php(20): activate_plugin('travelers-map/t...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php on line 27",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:51:14 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:51:14 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27\nStack trace:\n#0 /wordpress/wp-content/plugins/travelers-map/cttm-activation.php(14): cttm_create_new_marker('Default - Black', 'black', 'cttm_markers-bl...')\n#1 /wordpress/wp-content/plugins/travelers-map/travelers-map.php(44): require_once('/wordpress/wp-c...')\n#2 /wordpress/wp-includes/class-wp-hook.php(324): cttm_activation(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_travel...', false)\n#6 /internal/eval.php(20): activate_plugin('travelers-map/t...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php on line 27",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:52:21 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_zm-gal...', false)\n#3 /internal/eval.php(20): activate_plugin('zm-gallery/zm-g...')\n#4 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:52:29 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_zm-gal...', false)\n#3 /internal/eval.php(20): activate_plugin('zm-gallery/zm-g...')\n#4 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:52:37 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_zm-gal...', false)\n#3 /internal/eval.php(20): activate_plugin('zm-gallery/zm-g...')\n#4 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:53:44 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'http://127.0.0....', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('http://127.0.0....')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('http://127.0.0....', Array)\n#3 /wordpress/wp-includes/option.php(256): apply_filters('option_home', 'http://127.0.0....', 'home')\n#4 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(599): get_option('home')\n#5 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(146): ztrans_convertURL('?lang=en')\n#6 /wordpress/wp-includes/class-wp-hook.php(324): ztrans_init('')\n#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#9 /wordpress/wp-settings.php(578): do_action('plugins_loaded')\n#10 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#11 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#12 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#13 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:53:44 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'Error occurred ...', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('Error occurred ...')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('Error occurred ...', Array)\n#3 /wordpress/wp-includes/l10n.php(207): apply_filters('gettext', 'Error occurred ...', 'Error occurred ...', 'default')\n#4 /wordpress/wp-includes/l10n.php(307): translate('Error occurred ...', 'default')\n#5 /wordpress/wp-includes/class-wp-recovery-mode.php(178): __('Error occurred ...')\n#6 /wordpress/wp-includes/class-wp-fatal-error-handler.php(55): WP_Recovery_Mode->handle_error(Array)\n#7 [internal function]: WP_Fatal_Error_Handler->handle()\n#8 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:53:55 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'http://127.0.0....', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('http://127.0.0....')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('http://127.0.0....', Array)\n#3 /wordpress/wp-includes/option.php(256): apply_filters('option_home', 'http://127.0.0....', 'home')\n#4 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(599): get_option('home')\n#5 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(146): ztrans_convertURL('?lang=en')\n#6 /wordpress/wp-includes/class-wp-hook.php(324): ztrans_init('')\n#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#9 /wordpress/wp-settings.php(578): do_action('plugins_loaded')\n#10 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#11 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#12 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#13 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:53:55 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'Error occurred ...', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('Error occurred ...')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('Error occurred ...', Array)\n#3 /wordpress/wp-includes/l10n.php(207): apply_filters('gettext', 'Error occurred ...', 'Error occurred ...', 'default')\n#4 /wordpress/wp-includes/l10n.php(307): translate('Error occurred ...', 'default')\n#5 /wordpress/wp-includes/class-wp-recovery-mode.php(178): __('Error occurred ...')\n#6 /wordpress/wp-includes/class-wp-fatal-error-handler.php(55): WP_Recovery_Mode->handle_error(Array)\n#7 [internal function]: WP_Fatal_Error_Handler->handle()\n#8 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:54:05 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'http://127.0.0....', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('http://127.0.0....')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('http://127.0.0....', Array)\n#3 /wordpress/wp-includes/option.php(256): apply_filters('option_home', 'http://127.0.0....', 'home')\n#4 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(599): get_option('home')\n#5 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(146): ztrans_convertURL('?lang=en')\n#6 /wordpress/wp-includes/class-wp-hook.php(324): ztrans_init('')\n#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#9 /wordpress/wp-settings.php(578): do_action('plugins_loaded')\n#10 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#11 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#12 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#13 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:54:05 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'Error occurred ...', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('Error occurred ...')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('Error occurred ...', Array)\n#3 /wordpress/wp-includes/l10n.php(207): apply_filters('gettext', 'Error occurred ...', 'Error occurred ...', 'default')\n#4 /wordpress/wp-includes/l10n.php(307): translate('Error occurred ...', 'default')\n#5 /wordpress/wp-includes/class-wp-recovery-mode.php(178): __('Error occurred ...')\n#6 /wordpress/wp-includes/class-wp-fatal-error-handler.php(55): WP_Recovery_Mode->handle_error(Array)\n#7 [internal function]: WP_Fatal_Error_Handler->handle()\n#8 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817\n\n    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n  [cause]: Error: Error when executing the blueprint step #5 ({\"step\":\"installPlugin\",\"pluginData\":{\"resource\":\"wordpress.org/plugins\",\"slug\":\"term-taxonomy-switcher\"},\"options\":{\"activate\":true}}) : Could not download \"https://downloads.wordpress.org/plugin/term-taxonomy-switcher.latest-stable.zip\".\n  \t\t\t\tCheck if the URL is correct and the server is reachable.\n  \t\t\t\tIf it is reachable, the server might be blocking the request.\n  \t\t\t\tCheck the browser console and network tabs for more information.\n  \n  \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n  \n  \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n  \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n  \t\t\t\tcross-origin file downloads. Learn more about CORS at\n  \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n  \n  \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n  \t\t\t\tHere's how to do that:\n  \n  \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n  \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n  \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n  \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n  \n  \t\t\t\tThe resulting URL should look like this:\n  \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n  \n  \t\t\t\tError:\n  \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/term-taxonomy-switcher.latest-stable.zip\"\n      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12449:19)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)\n      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)\n      at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n      at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n    [cause]: Error: Could not download \"https://downloads.wordpress.org/plugin/term-taxonomy-switcher.latest-stable.zip\".\n    \t\t\t\tCheck if the URL is correct and the server is reachable.\n    \t\t\t\tIf it is reachable, the server might be blocking the request.\n    \t\t\t\tCheck the browser console and network tabs for more information.\n    \n    \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n    \n    \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n    \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n    \t\t\t\tcross-origin file downloads. Learn more about CORS at\n    \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n    \n    \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n    \t\t\t\tHere's how to do that:\n    \n    \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n    \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n    \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n    \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n    \n    \t\t\t\tThe resulting URL should look like this:\n    \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n    \n    \t\t\t\tError:\n    \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/term-taxonomy-switcher.latest-stable.zip\"\n        at Ct.resolve (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:1472:13)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async _.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/util/index.js:45:14)\n  }\n}\n\n",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "level": "FATAL",
    "type": "PLAYGROUND",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "log": "/tmp/tmp.woFgIcmXPQ"
  },
  {
    "message": "Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:16 UTC] PHP Warning:  Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:16 UTC] PHP Fatal error:  Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39\nStack trace:\n#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()\n#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('tag-this/tagthi...')\n#2 /internal/eval.php(20): activate_plugin('tag-this/tagthi...')\n#3 {main}\n  thrown in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:24 UTC] PHP Warning:  Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:24 UTC] PHP Fatal error:  Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39\nStack trace:\n#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()\n#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('tag-this/tagthi...')\n#2 /internal/eval.php(20): activate_plugin('tag-this/tagthi...')\n#3 {main}\n  thrown in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:33 UTC] PHP Warning:  Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:33 UTC] PHP Fatal error:  Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39\nStack trace:\n#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()\n#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('tag-this/tagthi...')\n#2 /internal/eval.php(20): activate_plugin('tag-this/tagthi...')\n#3 {main}\n  thrown in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:42 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:42 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:42 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:43 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:43 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:43 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:51 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:51 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:51 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:52 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:52 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:52 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:00 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:00 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:00 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:01 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:01 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:01 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:48:35 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-settings.php(727): do_action('init')\n#7 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#8 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#9 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#10 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:48:44 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-settings.php(727): do_action('init')\n#7 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#8 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#9 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#10 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:48:54 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-settings.php(727): do_action('init')\n#7 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#8 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#9 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#10 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:25 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:25 UTC] PHP Deprecated:  Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:35 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:35 UTC] PHP Deprecated:  Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:43 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:43 UTC] PHP Deprecated:  Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:54 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:54 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27\nStack trace:\n#0 /wordpress/wp-content/plugins/travelers-map/cttm-activation.php(14): cttm_create_new_marker('Default - Black', 'black', 'cttm_markers-bl...')\n#1 /wordpress/wp-content/plugins/travelers-map/travelers-map.php(44): require_once('/wordpress/wp-c...')\n#2 /wordpress/wp-includes/class-wp-hook.php(324): cttm_activation(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_travel...', false)\n#6 /internal/eval.php(20): activate_plugin('travelers-map/t...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php on line 27",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:51:03 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:51:04 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27\nStack trace:\n#0 /wordpress/wp-content/plugins/travelers-map/cttm-activation.php(14): cttm_create_new_marker('Default - Black', 'black', 'cttm_markers-bl...')\n#1 /wordpress/wp-content/plugins/travelers-map/travelers-map.php(44): require_once('/wordpress/wp-c...')\n#2 /wordpress/wp-includes/class-wp-hook.php(324): cttm_activation(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_travel...', false)\n#6 /internal/eval.php(20): activate_plugin('travelers-map/t...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php on line 27",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:51:14 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:51:14 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27\nStack trace:\n#0 /wordpress/wp-content/plugins/travelers-map/cttm-activation.php(14): cttm_create_new_marker('Default - Black', 'black', 'cttm_markers-bl...')\n#1 /wordpress/wp-content/plugins/travelers-map/travelers-map.php(44): require_once('/wordpress/wp-c...')\n#2 /wordpress/wp-includes/class-wp-hook.php(324): cttm_activation(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_travel...', false)\n#6 /internal/eval.php(20): activate_plugin('travelers-map/t...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php on line 27",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:52:21 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_zm-gal...', false)\n#3 /internal/eval.php(20): activate_plugin('zm-gallery/zm-g...')\n#4 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:52:29 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_zm-gal...', false)\n#3 /internal/eval.php(20): activate_plugin('zm-gallery/zm-g...')\n#4 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:52:37 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_zm-gal...', false)\n#3 /internal/eval.php(20): activate_plugin('zm-gallery/zm-g...')\n#4 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:53:44 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'http://127.0.0....', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('http://127.0.0....')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('http://127.0.0....', Array)\n#3 /wordpress/wp-includes/option.php(256): apply_filters('option_home', 'http://127.0.0....', 'home')\n#4 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(599): get_option('home')\n#5 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(146): ztrans_convertURL('?lang=en')\n#6 /wordpress/wp-includes/class-wp-hook.php(324): ztrans_init('')\n#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#9 /wordpress/wp-settings.php(578): do_action('plugins_loaded')\n#10 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#11 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#12 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#13 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:53:44 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'Error occurred ...', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('Error occurred ...')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('Error occurred ...', Array)\n#3 /wordpress/wp-includes/l10n.php(207): apply_filters('gettext', 'Error occurred ...', 'Error occurred ...', 'default')\n#4 /wordpress/wp-includes/l10n.php(307): translate('Error occurred ...', 'default')\n#5 /wordpress/wp-includes/class-wp-recovery-mode.php(178): __('Error occurred ...')\n#6 /wordpress/wp-includes/class-wp-fatal-error-handler.php(55): WP_Recovery_Mode->handle_error(Array)\n#7 [internal function]: WP_Fatal_Error_Handler->handle()\n#8 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:53:55 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'http://127.0.0....', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('http://127.0.0....')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('http://127.0.0....', Array)\n#3 /wordpress/wp-includes/option.php(256): apply_filters('option_home', 'http://127.0.0....', 'home')\n#4 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(599): get_option('home')\n#5 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(146): ztrans_convertURL('?lang=en')\n#6 /wordpress/wp-includes/class-wp-hook.php(324): ztrans_init('')\n#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#9 /wordpress/wp-settings.php(578): do_action('plugins_loaded')\n#10 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#11 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#12 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#13 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:53:55 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'Error occurred ...', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('Error occurred ...')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('Error occurred ...', Array)\n#3 /wordpress/wp-includes/l10n.php(207): apply_filters('gettext', 'Error occurred ...', 'Error occurred ...', 'default')\n#4 /wordpress/wp-includes/l10n.php(307): translate('Error occurred ...', 'default')\n#5 /wordpress/wp-includes/class-wp-recovery-mode.php(178): __('Error occurred ...')\n#6 /wordpress/wp-includes/class-wp-fatal-error-handler.php(55): WP_Recovery_Mode->handle_error(Array)\n#7 [internal function]: WP_Fatal_Error_Handler->handle()\n#8 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:54:05 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'http://127.0.0....', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('http://127.0.0....')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('http://127.0.0....', Array)\n#3 /wordpress/wp-includes/option.php(256): apply_filters('option_home', 'http://127.0.0....', 'home')\n#4 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(599): get_option('home')\n#5 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(146): ztrans_convertURL('?lang=en')\n#6 /wordpress/wp-includes/class-wp-hook.php(324): ztrans_init('')\n#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#9 /wordpress/wp-settings.php(578): do_action('plugins_loaded')\n#10 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#11 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#12 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#13 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:54:05 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'Error occurred ...', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('Error occurred ...')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('Error occurred ...', Array)\n#3 /wordpress/wp-includes/l10n.php(207): apply_filters('gettext', 'Error occurred ...', 'Error occurred ...', 'default')\n#4 /wordpress/wp-includes/l10n.php(307): translate('Error occurred ...', 'default')\n#5 /wordpress/wp-includes/class-wp-recovery-mode.php(178): __('Error occurred ...')\n#6 /wordpress/wp-includes/class-wp-fatal-error-handler.php(55): WP_Recovery_Mode->handle_error(Array)\n#7 [internal function]: WP_Fatal_Error_Handler->handle()\n#8 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817\n\n    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n  [cause]: Error: Error when executing the blueprint step #1 ({\"step\":\"installPlugin\",\"pluginData\":{\"resource\":\"wordpress.org/plugins\",\"slug\":\"term-taxonomy-switcher\"},\"options\":{\"activate\":true}}) : Could not download \"https://downloads.wordpress.org/plugin/term-taxonomy-switcher.latest-stable.zip\".\n  \t\t\t\tCheck if the URL is correct and the server is reachable.\n  \t\t\t\tIf it is reachable, the server might be blocking the request.\n  \t\t\t\tCheck the browser console and network tabs for more information.\n  \n  \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n  \n  \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n  \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n  \t\t\t\tcross-origin file downloads. Learn more about CORS at\n  \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n  \n  \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n  \t\t\t\tHere's how to do that:\n  \n  \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n  \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n  \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n  \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n  \n  \t\t\t\tThe resulting URL should look like this:\n  \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n  \n  \t\t\t\tError:\n  \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/term-taxonomy-switcher.latest-stable.zip\"\n      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12449:19)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)\n      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)\n      at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n      at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n    [cause]: Error: Could not download \"https://downloads.wordpress.org/plugin/term-taxonomy-switcher.latest-stable.zip\".\n    \t\t\t\tCheck if the URL is correct and the server is reachable.\n    \t\t\t\tIf it is reachable, the server might be blocking the request.\n    \t\t\t\tCheck the browser console and network tabs for more information.\n    \n    \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n    \n    \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n    \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n    \t\t\t\tcross-origin file downloads. Learn more about CORS at\n    \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n    \n    \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n    \t\t\t\tHere's how to do that:\n    \n    \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n    \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n    \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n    \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n    \n    \t\t\t\tThe resulting URL should look like this:\n    \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n    \n    \t\t\t\tError:\n    \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/term-taxonomy-switcher.latest-stable.zip\"\n        at Ct.resolve (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:1472:13)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async _.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/util/index.js:45:14)\n  }\n}\n\n",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "level": "FATAL",
    "type": "PLAYGROUND",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "log": "/tmp/tmp.3UIpv6VLlQ"
  },
  {
    "message": "Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:16 UTC] PHP Warning:  Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:16 UTC] PHP Fatal error:  Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39\nStack trace:\n#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()\n#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('tag-this/tagthi...')\n#2 /internal/eval.php(20): activate_plugin('tag-this/tagthi...')\n#3 {main}\n  thrown in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:24 UTC] PHP Warning:  Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:24 UTC] PHP Fatal error:  Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39\nStack trace:\n#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()\n#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('tag-this/tagthi...')\n#2 /internal/eval.php(20): activate_plugin('tag-this/tagthi...')\n#3 {main}\n  thrown in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:33 UTC] PHP Warning:  Undefined variable $table_prefix in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:33 UTC] PHP Fatal error:  Uncaught Error: Attempt to assign property \"tagthis\" on null in /wordpress/wp-content/plugins/tag-this/tagthis.php:39\nStack trace:\n#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()\n#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('tag-this/tagthi...')\n#2 /internal/eval.php(20): activate_plugin('tag-this/tagthi...')\n#3 {main}\n  thrown in /wordpress/wp-content/plugins/tag-this/tagthis.php on line 39",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:42 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:42 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:42 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:43 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:43 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:43 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:51 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:51 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:51 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:52 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:52 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:46:52 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:00 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:00 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:00 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:01 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 12",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:01 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/tags-mananger/tagsmanager.php on line 13",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:47:01 UTC] PHP Deprecated:  Function add_option was called with an argument that is <strong>deprecated</strong> since version 2.3.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:48:35 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-settings.php(727): do_action('init')\n#7 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#8 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#9 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#10 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:48:44 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-settings.php(727): do_action('init')\n#7 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#8 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#9 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#10 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:48:54 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ts3_wp_viewer::init() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')\n#3 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-settings.php(727): do_action('init')\n#7 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#8 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#9 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#10 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:25 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:25 UTC] PHP Deprecated:  Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:35 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:35 UTC] PHP Deprecated:  Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:43 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>traficro</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href=\"https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/\">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:43 UTC] PHP Deprecated:  Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:54 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:50:54 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27\nStack trace:\n#0 /wordpress/wp-content/plugins/travelers-map/cttm-activation.php(14): cttm_create_new_marker('Default - Black', 'black', 'cttm_markers-bl...')\n#1 /wordpress/wp-content/plugins/travelers-map/travelers-map.php(44): require_once('/wordpress/wp-c...')\n#2 /wordpress/wp-includes/class-wp-hook.php(324): cttm_activation(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_travel...', false)\n#6 /internal/eval.php(20): activate_plugin('travelers-map/t...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php on line 27",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:51:03 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:51:04 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27\nStack trace:\n#0 /wordpress/wp-content/plugins/travelers-map/cttm-activation.php(14): cttm_create_new_marker('Default - Black', 'black', 'cttm_markers-bl...')\n#1 /wordpress/wp-content/plugins/travelers-map/travelers-map.php(44): require_once('/wordpress/wp-c...')\n#2 /wordpress/wp-includes/class-wp-hook.php(324): cttm_activation(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_travel...', false)\n#6 /internal/eval.php(20): activate_plugin('travelers-map/t...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php on line 27",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:51:14 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/travelers-map/includes/admin/cttm-admin.php on line 374",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:51:14 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function post_exists() in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php:27\nStack trace:\n#0 /wordpress/wp-content/plugins/travelers-map/cttm-activation.php(14): cttm_create_new_marker('Default - Black', 'black', 'cttm_markers-bl...')\n#1 /wordpress/wp-content/plugins/travelers-map/travelers-map.php(44): require_once('/wordpress/wp-c...')\n#2 /wordpress/wp-includes/class-wp-hook.php(324): cttm_activation(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_travel...', false)\n#6 /internal/eval.php(20): activate_plugin('travelers-map/t...')\n#7 {main}\n  thrown in /wordpress/wp-content/plugins/travelers-map/cttm-activation.php on line 27",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:52:21 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_zm-gal...', false)\n#3 /internal/eval.php(20): activate_plugin('zm-gallery/zm-g...')\n#4 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:52:29 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_zm-gal...', false)\n#3 /internal/eval.php(20): activate_plugin('zm-gallery/zm-g...')\n#4 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:52:37 UTC] PHP Fatal error:  Uncaught TypeError: call_user_func_array(): Argument #1 ($callback) must be a valid callback, non-static method ZMGallery::zm_gallery_plugin_create() cannot be called statically in /wordpress/wp-includes/class-wp-hook.php:324\nStack trace:\n#0 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#1 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#2 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_zm-gal...', false)\n#3 /internal/eval.php(20): activate_plugin('zm-gallery/zm-g...')\n#4 {main}\n  thrown in /wordpress/wp-includes/class-wp-hook.php on line 324",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:53:44 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'http://127.0.0....', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('http://127.0.0....')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('http://127.0.0....', Array)\n#3 /wordpress/wp-includes/option.php(256): apply_filters('option_home', 'http://127.0.0....', 'home')\n#4 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(599): get_option('home')\n#5 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(146): ztrans_convertURL('?lang=en')\n#6 /wordpress/wp-includes/class-wp-hook.php(324): ztrans_init('')\n#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#9 /wordpress/wp-settings.php(578): do_action('plugins_loaded')\n#10 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#11 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#12 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#13 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:53:44 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'Error occurred ...', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('Error occurred ...')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('Error occurred ...', Array)\n#3 /wordpress/wp-includes/l10n.php(207): apply_filters('gettext', 'Error occurred ...', 'Error occurred ...', 'default')\n#4 /wordpress/wp-includes/l10n.php(307): translate('Error occurred ...', 'default')\n#5 /wordpress/wp-includes/class-wp-recovery-mode.php(178): __('Error occurred ...')\n#6 /wordpress/wp-includes/class-wp-fatal-error-handler.php(55): WP_Recovery_Mode->handle_error(Array)\n#7 [internal function]: WP_Fatal_Error_Handler->handle()\n#8 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:53:55 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'http://127.0.0....', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('http://127.0.0....')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('http://127.0.0....', Array)\n#3 /wordpress/wp-includes/option.php(256): apply_filters('option_home', 'http://127.0.0....', 'home')\n#4 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(599): get_option('home')\n#5 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(146): ztrans_convertURL('?lang=en')\n#6 /wordpress/wp-includes/class-wp-hook.php(324): ztrans_init('')\n#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#9 /wordpress/wp-settings.php(578): do_action('plugins_loaded')\n#10 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#11 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#12 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#13 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:53:55 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'Error occurred ...', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('Error occurred ...')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('Error occurred ...', Array)\n#3 /wordpress/wp-includes/l10n.php(207): apply_filters('gettext', 'Error occurred ...', 'Error occurred ...', 'default')\n#4 /wordpress/wp-includes/l10n.php(307): translate('Error occurred ...', 'default')\n#5 /wordpress/wp-includes/class-wp-recovery-mode.php(178): __('Error occurred ...')\n#6 /wordpress/wp-includes/class-wp-fatal-error-handler.php(55): WP_Recovery_Mode->handle_error(Array)\n#7 [internal function]: WP_Fatal_Error_Handler->handle()\n#8 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:54:05 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'http://127.0.0....', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('http://127.0.0....')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('http://127.0.0....', Array)\n#3 /wordpress/wp-includes/option.php(256): apply_filters('option_home', 'http://127.0.0....', 'home')\n#4 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(599): get_option('home')\n#5 /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php(146): ztrans_convertURL('?lang=en')\n#6 /wordpress/wp-includes/class-wp-hook.php(324): ztrans_init('')\n#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)\n#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#9 /wordpress/wp-settings.php(578): do_action('plugins_loaded')\n#10 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')\n#11 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')\n#12 /internal/eval.php(3): require_once('/wordpress/wp-l...')\n#13 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  },
  {
    "message": "Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "term-taxonomy-switcher",
    "details": "[11-May-2025 07:54:05 UTC] PHP Fatal error:  Uncaught TypeError: get_class(): Argument #1 ($object) must be of type object, string given in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php:817\nStack trace:\n#0 /wordpress/wp-content/plugins/ztranslate/ztranslate_hooks.php(110): ztrans_use('en', 'Error occurred ...', false)\n#1 /wordpress/wp-includes/class-wp-hook.php(326): ztrans_useCurrentLanguageIfNotFoundUseDefaultLanguage('Error occurred ...')\n#2 /wordpress/wp-includes/plugin.php(205): WP_Hook->apply_filters('Error occurred ...', Array)\n#3 /wordpress/wp-includes/l10n.php(207): apply_filters('gettext', 'Error occurred ...', 'Error occurred ...', 'default')\n#4 /wordpress/wp-includes/l10n.php(307): translate('Error occurred ...', 'default')\n#5 /wordpress/wp-includes/class-wp-recovery-mode.php(178): __('Error occurred ...')\n#6 /wordpress/wp-includes/class-wp-fatal-error-handler.php(55): WP_Recovery_Mode->handle_error(Array)\n#7 [internal function]: WP_Fatal_Error_Handler->handle()\n#8 {main}\n  thrown in /wordpress/wp-content/plugins/ztranslate/ztranslate_core.php on line 817\n\n    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n  [cause]: Error: Error when executing the blueprint step #1 ({\"step\":\"installPlugin\",\"pluginData\":{\"resource\":\"wordpress.org/plugins\",\"slug\":\"term-taxonomy-switcher\"},\"options\":{\"activate\":true}}) : Could not download \"https://downloads.wordpress.org/plugin/term-taxonomy-switcher.latest-stable.zip\".\n  \t\t\t\tCheck if the URL is correct and the server is reachable.\n  \t\t\t\tIf it is reachable, the server might be blocking the request.\n  \t\t\t\tCheck the browser console and network tabs for more information.\n  \n  \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n  \n  \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n  \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n  \t\t\t\tcross-origin file downloads. Learn more about CORS at\n  \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n  \n  \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n  \t\t\t\tHere's how to do that:\n  \n  \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n  \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n  \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n  \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n  \n  \t\t\t\tThe resulting URL should look like this:\n  \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n  \n  \t\t\t\tError:\n  \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/term-taxonomy-switcher.latest-stable.zip\"\n      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12449:19)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)\n      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)\n      at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n      at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n    [cause]: Error: Could not download \"https://downloads.wordpress.org/plugin/term-taxonomy-switcher.latest-stable.zip\".\n    \t\t\t\tCheck if the URL is correct and the server is reachable.\n    \t\t\t\tIf it is reachable, the server might be blocking the request.\n    \t\t\t\tCheck the browser console and network tabs for more information.\n    \n    \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n    \n    \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n    \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n    \t\t\t\tcross-origin file downloads. Learn more about CORS at\n    \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n    \n    \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n    \t\t\t\tHere's how to do that:\n    \n    \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n    \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n    \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n    \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n    \n    \t\t\t\tThe resulting URL should look like this:\n    \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n    \n    \t\t\t\tError:\n    \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/term-taxonomy-switcher.latest-stable.zip\"\n        at Ct.resolve (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:1472:13)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async _.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/util/index.js:45:14)\n  }\n}\n\n",
    "log": "/logs/plugins/t/term-taxonomy-switcher/error.json"
  }
]
