file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:21
`)},constants:R,phpIniEntries:{"openssl.cafile":"/internal/shared/ca-bundle.crt",allow_url_fopen:"1",disable_functions:""},hooks:{async beforeWordPressFiles(h){e.mountBeforeInstall&&u(h,e.mountBeforeInstall)}}}),d.log("Booted!");const W=await w.getPrimaryPhp();try{if(o&&!e.mountBeforeInstall&&!m.existsSync(f)&&(d.log("Caching preinstalled WordPress for the next boot..."),m.writeFileSync(f,await Z(W,"/wordpress")),d.log("Cached!")),e.mount&&u(W,e.mount),H=!0,l){const{php:h,reap:b}=await w.processManager.acquirePHPInstance();try{d.log("Running the Blueprint..."),await M(l,h),d.log("Finished running the blueprint")}finally{b()}}a==="build-snapshot"?(await i(e.outfile),d.log(`WordPress exported to ${e.outfile}`),process.exit(0)):a==="run-blueprint"?(d.log("Blueprint executed"),process.exit(0)):d.log(`WordPress is running on ${s}`)}catch(h){if(!e.debug)throw h;const b=W.readFileAsText(L);throw new Error(b,{cause:h})}},async handleRequest(r){return H?await w.request(r):U.forHttpCode(502,"WordPress is not ready yet")}})}te();


Error: [09-Apr-2025 13:39:30 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>INSERT INTO `wp_options` (`option_name`, `option_value`, `autoload`) VALUES ('mihdan_noexternallinks_version', '4.5.1', 'auto') ON DUPLICATE KEY UPDATE `option_name` = VALUES(`option_name`), `option_value` = VALUES(`option_value`), `autoload` = VALUES(`autoload`)</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: SELECT 1 FROM sqlite_temp_schema WHERE type = 'table' AND name = ? | parameters: wp_options</li>
<li>Executing: 
				SELECT column_name, is_nullable, column_default, data_type, extra
				FROM _wp_sqlite_mysql_information_schema_columns
				WHERE table_schema = ?
				AND table_name = ?
				ORDER BY ordinal_position
			 | parameters: database_name_here, wp_options</li>
<li>Executing: INSERT INTO `wp_options` () SELECT  FROM (VALUES ( 'mihdan_noexternallinks_version' , '4.5.1' , 'auto' )) WHERE true ON CONFLICT DO UPDATE SET `option_name` = `excluded`.`option_name` , `option_value` = `excluded`.`option_value` , `autoload` = `excluded`.`autoload` | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 near ")": syntax error
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(690): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 0, Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(472): WP_SQLite_Driver->query('INSERT INTO `wp...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(413): WP_SQLite_DB->_do_query('INSERT INTO `wp...')
#3 /wordpress/wp-includes/option.php(1134): WP_SQLite_DB->query('INSERT INTO `wp...')
#4 /wordpress/wp-includes/option.php(921): add_option('mihdan_noextern...', '4.5.1', '', 'auto')
#5 /wordpress/wp-content/plugins/mihdan-no-external-links/includes/Installer.php(60): update_option('mihdan_noextern...', '4.5.1')
#6 /wordpress/wp-content/plugins/mihdan-no-external-links/includes/Main.php(228): Mihdan\No_External_Links\Installer->install()
#7 /wordpress/wp-content/plugins/mihdan-no-external-links/includes/Main.php(111): Mihdan\No_External_Links\Main->install()
#8 /wordpress/wp-content/plugins/mihdan-no-external-links/mihdan-no-external-links.php(58): Mihdan\No_External_Links\Main->__construct()
#9 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#10 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('mihdan-no-exter...')
#11 /internal/eval.php(20): activate_plugin('mihdan-no-exter...')
#12 {main}</pre>
 for query INSERT INTO `wp_options` (`option_name`, `option_value`, `autoload`) VALUES ('mihdan_noexternallinks_version', '4.5.1', 'auto') ON DUPLICATE KEY UPDATE `option_name` = VALUES(`option_name`), `option_value` = VALUES(`option_value`), `autoload` = VALUES(`autoload`) made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/mihdan-no-external-links/mihdan-no-external-links.php'), Mihdan\No_External_Links\Main->__construct, Mihdan\No_External_Links\Main->install, Mihdan\No_External_Links\Installer->install, update_option, add_option, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[09-Apr-2025 13:39:30 UTC] PHP Fatal error:  Uncaught Error: Class 'Mihdan\No_External_Links\Mihdan_NoExternalLinks_Database' not found in /wordpress/wp-content/plugins/mihdan-no-external-links/includes/Upgrader.php:337
Stack trace:
#0 /wordpress/wp-content/plugins/mihdan-no-external-links/includes/Main.php(249): Mihdan\No_External_Links\Upgrader->upgrade()
#1 /wordpress/wp-content/plugins/mihdan-no-external-links/includes/Main.php(112): Mihdan\No_External_Links\Main->upgrade()
#2 /wordpress/wp-content/plugins/mihdan-no-external-links/mihdan-no-external-links.php(58): Mihdan\No_External_Links\Main->__construct()
#3 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#4 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('mihdan-no-exter...')
#5 /internal/eval.php(20): activate_plugin('mihdan-no-exter...')
#6 {main}
  thrown in /wordpress/wp-content/plugins/mihdan-no-external-links/includes/Upgrader.php on line 337

    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:21:903)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Y (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:1:1159) {
  [cause]: Error: Error when executing the blueprint step #0 ({"step":"installPlugin","pluginData":{"resource":"wordpress.org/plugins","slug":"mihdan-no-external-links"},"options":{"activate":true}}) : 
  "unreachable" WASM instruction executed.
  
  The typical reason is a PHP function missing from the ASYNCIFY_ONLY
  list when building PHP.wasm.
  
  You will need to file a new issue in the WordPress Playground repository
  and paste this error message there:
  
  https://github.com/WordPress/wordpress-playground/issues/new
  
  If you're a core developer, the typical fix is to:
  
  * Isolate a minimal reproduction of the error
  * Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository
  * Run 'npm run fix-asyncify'
  * Commit the changes, push to the repo, release updated NPM packages
  
  Below is a list of all the PHP functions found in the stack trace to
  help with the minimal reproduction. If they're all already listed in
  the Dockerfile, you'll need to trigger this error again with long stack
  traces enabled. In node.js, you can do it using the --stack-trace-limit=100
  CLI option: 
  
      * php.wasm.__wrap_select
      * php.wasm.RAND_poll
      * php.wasm.rand_bytes
      * php.wasm.rand_nopseudo_bytes
      * php.wasm
      * php.wasm.RAND_bytes
      * php.wasm.zif_openssl_random_pseudo_bytes
  
      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12407:32)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async ns (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12508:3)
      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:21:568)
      at async Y (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:1:1159) {
    [cause]: Error: 
    "unreachable" WASM instruction executed.
    
    The typical reason is a PHP function missing from the ASYNCIFY_ONLY
    list when building PHP.wasm.
    
    You will need to file a new issue in the WordPress Playground repository
    and paste this error message there:
    
    https://github.com/WordPress/wordpress-playground/issues/new
    
    If you're a core developer, the typical fix is to:
    
    * Isolate a minimal reproduction of the error
    * Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository
    * Run 'npm run fix-asyncify'
    * Commit the changes, push to the repo, release updated NPM packages
    
    Below is a list of all the PHP functions found in the stack trace to
    help with the minimal reproduction. If they're all already listed in
    the Dockerfile, you'll need to trigger this error again with long stack
    traces enabled. In node.js, you can do it using the --stack-trace-limit=100
    CLI option: 
    
        * php.wasm.__wrap_select
        * php.wasm.RAND_poll
        * php.wasm.rand_bytes
        * php.wasm.rand_nopseudo_bytes
        * php.wasm
        * php.wasm.RAND_bytes
        * php.wasm.zif_openssl_random_pseudo_bytes
    
        at PHP.ae (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:1446:78)
        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
        at async PHP.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:981:17)
        at async vr (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:33:39)
        at async Object.ut [as installPlugin] (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:1084:42)
        at async d (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12473:30)
        at async Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12404:23)
        at async ns (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12508:3)
        at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:21:568)
        at async Y (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:1:1159) {
      cause: Error: Rethrown
          at UnhandledRejectionsTarget.e (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:1423:19)
          at [nodejs.internal.kHybridDispatch] (node:internal/event_target:827:20)
          at UnhandledRejectionsTarget.dispatchEvent (node:internal/event_target:762:26)
          at t.wasmExports.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:565:15)
          at invoke_iiiii (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:117110:14)
          at php.wasm.php_execute_script (wasm://wasm/php.wasm-0390d672:wasm-function[10893]:0x63e2cd)
          at php.wasm (wasm://wasm/php.wasm-0390d672:wasm-function[15574]:0x7e45ff)
          at php.wasm.dynCall_ii (wasm://wasm/php.wasm-0390d672:wasm-function[12754]:0x72a847)
          at ret.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:116494:22)
          at t.wasmExports.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:556:18) {
        cause: RuntimeError: unreachable
            at php.wasm.zend_std_write_property (wasm://wasm/php.wasm-0390d672:wasm-function[1172]:0xba974)
            at php.wasm (wasm://wasm/php.wasm-0390d672:wasm-function[23303]:0x807c09)
            at php.wasm.zend_update_property_ex (wasm://wasm/php.wasm-0390d672:wasm-function[687]:0x5c961)
            at php.wasm.zend_default_exception_new_ex (wasm://wasm/php.wasm-0390d672:wasm-function[4476]:0x3186c9)
            at php.wasm.zend_default_exception_new (wasm://wasm/php.wasm-0390d672:wasm-function[9002]:0x59d54b)
            at php.wasm (wasm://wasm/php.wasm-0390d672:wasm-function[23326]:0x807e8d)
            at php.wasm.object_init_ex (wasm://wasm/php.wasm-0390d672:wasm-function[246]:0x1b4a8)
            at php.wasm.zend_throw_exception (wasm://wasm/php.wasm-0390d672:wasm-function[203]:0x16cbd)
            at php.wasm.zif_openssl_random_pseudo_bytes (wasm://wasm/php.wasm-0390d672:wasm-function[7986]:0x52cb83)
            at php.wasm (wasm://wasm/php.wasm-0390d672:wasm-function[20013]:0x7f92c4) {
          cause: Error
              at Asyncify.handleSleep (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:117281:45)
              at _emscripten_sleep (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:115255:44)
              at php.wasm.__wrap_select (wasm://wasm/php.wasm-0390d672:wasm-function[1431]:0xe92e8)
              at php.wasm.RAND_poll (wasm://wasm/php.wasm-0390d672:wasm-function[6302]:0x495419)
              at php.wasm.rand_bytes (wasm://wasm/php.wasm-0390d672:wasm-function[5185]:0x3adffb)
              at php.wasm.rand_nopseudo_bytes (wasm://wasm/php.wasm-0390d672:wasm-function[10319]:0x5ff4b3)
              at php.wasm (wasm://wasm/php.wasm-0390d672:wasm-function[20910]:0x7fccaf)
              at php.wasm.RAND_bytes (wasm://wasm/php.wasm-0390d672:wasm-function[470]:0x3ae66)
              at php.wasm.zif_openssl_random_pseudo_bytes (wasm://wasm/php.wasm-0390d672:wasm-function[7986]:0x52cac4)
              at php.wasm (wasm://wasm/php.wasm-0390d672:wasm-function[20013]:0x7f92c4)
        },
        betterMessage: '\n' +
          '"unreachable" WASM instruction executed.\n' +
          '\n' +
          'The typical reason is a PHP function missing from the ASYNCIFY_ONLY\n' +
          'list when building PHP.wasm.\n' +
          '\n' +
          'You will need to file a new issue in the WordPress Playground repository\n' +
          'and paste this error message there:\n' +
          '\n' +
          'https://github.com/WordPress/wordpress-playground/issues/new\n' +
          '\n' +
          "If you're a core developer, the typical fix is to:\n" +
          '\n' +
          '* Isolate a minimal reproduction of the error\n' +
          '* Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository\n' +
          "* Run 'npm run fix-asyncify'\n" +
          '* Commit the changes, push to the repo, release updated NPM packages\n' +
          '\n' +
          'Below is a list of all the PHP functions found in the stack trace to\n' +
          "help with the minimal reproduction. If they're all already listed in\n" +
          "the Dockerfile, you'll need to trigger this error again with long stack\n" +
          'traces enabled. In node.js, you can do it using the --stack-trace-limit=100\n' +
          'CLI option: \n' +
          '\n' +
          '    * php.wasm.__wrap_select\n' +
          '    * php.wasm.RAND_poll\n' +
          '    * php.wasm.rand_bytes\n' +
          '    * php.wasm.rand_nopseudo_bytes\n' +
          '    * php.wasm\n' +
          '    * php.wasm.RAND_bytes\n' +
          '    * php.wasm.zif_openssl_random_pseudo_bytes\n'
      }
    }
  }
}

Node.js v23.11.0
