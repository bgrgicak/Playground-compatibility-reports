[
  {
    "message": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:20\n`)},constants:R,phpIniEntries:{\"openssl.cafile\":\"/internal/shared/ca-bundle.crt\",allow_url_fopen:\"1\",disable_functions:\"\"},hooks:{async beforeWordPressFiles(h){t.mountBeforeInstall&&p(h,t.mountBeforeInstall)}}});const v=await s.getPrimaryPhp();try{if(n&&!t.mountBeforeInstall&&g.writeFileSync(f,await q(v,\"/wordpress\")),t.mount&&p(v,t.mount),d=!0,u){const{php:h,reap:m}=await s.processManager.acquirePHPInstance();try{c.log(\"Running the Blueprint...\"),await x(u,h),c.log(\"Finished running the blueprint\")}finally{m()}}a===\"build-snapshot\"?(await r(t.outfile),c.log(`WordPress exported to ${t.outfile}`),process.exit(0)):a===\"run-blueprint\"?(c.log(\"Blueprint executed\"),process.exit(0)):c.log(`WordPress is running on ${l}`)}catch(h){if(!t.debug)throw h;const m=v.readFileAsText(D);throw new Error(m,{cause:h})}},async handleRequest(o){return d?await s.request(o):I.forHttpCode(502,\"WordPress is not ready yet\")}})}Q();\nn",
    "level": "FATAL",
    "type": "PLAYGROUND",
    "test": "asyncify-boot",
    "plugin": "miniorange-wp-as-saml-idp",
    "details": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:20\n`)},constants:R,phpIniEntries:{\"openssl.cafile\":\"/internal/shared/ca-bundle.crt\",allow_url_fopen:\"1\",disable_functions:\"\"},hooks:{async beforeWordPressFiles(h){t.mountBeforeInstall&&p(h,t.mountBeforeInstall)}}});const v=await s.getPrimaryPhp();try{if(n&&!t.mountBeforeInstall&&g.writeFileSync(f,await q(v,\"/wordpress\")),t.mount&&p(v,t.mount),d=!0,u){const{php:h,reap:m}=await s.processManager.acquirePHPInstance();try{c.log(\"Running the Blueprint...\"),await x(u,h),c.log(\"Finished running the blueprint\")}finally{m()}}a===\"build-snapshot\"?(await r(t.outfile),c.log(`WordPress exported to ${t.outfile}`),process.exit(0)):a===\"run-blueprint\"?(c.log(\"Blueprint executed\"),process.exit(0)):c.log(`WordPress is running on ${l}`)}catch(h){if(!t.debug)throw h;const m=v.readFileAsText(D);throw new Error(m,{cause:h})}},async handleRequest(o){return d?await s.request(o):I.forHttpCode(502,\"WordPress is not ready yet\")}})}Q();\nn",
    "log": "/tmp/tmp.DGeQ1xLr6X"
  },
  {
    "message": "SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.",
    "level": "FATAL",
    "type": "SQL",
    "test": "asyncify-boot",
    "plugin": "miniorange-wp-as-saml-idp",
    "details": "[19-Jan-2025 10:59:13 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>CREATE TABLE wp_mo_sp_attributes (\r\n                    id bigint(20) NOT NULL auto_increment,\r\n                    mo_sp_id bigint(20),\r\n                    mo_sp_attr_name longtext NOT NULL,\r\n                    mo_sp_attr_value longtext NOT NULL,\r\n                    mo_attr_type smallint DEFAULT 0 NOT NULL,\r\n                    PRIMARY KEY  (id),\r\n                    FOREIGN KEY  (mo_sp_id) REFERENCES wp_mo_sp_data (id)\r\n                )</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_mo_sp_attributes, id, bigint(20)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_mo_sp_attributes, mo_sp_id, bigint(20)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_mo_sp_attributes, mo_sp_attr_name, longtext</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_mo_sp_attributes, mo_sp_attr_value, longtext</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_mo_sp_attributes, mo_attr_type, smallint</li>\n<li>Executing: CREATE TABLE &quot;wp_mo_sp_attributes&quot; (\n&quot;id&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;mo_sp_id&quot; integer,\n&quot;mo_sp_attr_name&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;mo_sp_attr_value&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;mo_attr_type&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0) | (no parameters)</li>\n<li>Executing: CREATE  INDEX  &quot;wp_mo_sp_attributes__&quot; ON &quot;wp_mo_sp_attributes&quot; (&quot;&quot;) | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_mo_sp_attributes, wp_mo_sp_attributes__, </li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-admin/includes/upgrade.php(3271): WP_SQLite_DB->query('CREATE TABLE wp...')\n#2 /wordpress/wp-content/plugins/miniorange-wp-as-saml-idp/helper/database/MoDbQueries.php(124): dbDelta(Array)\n#3 /wordpress/wp-content/plugins/miniorange-wp-as-saml-idp/helper/database/MoDbQueries.php(154): IDP\\Helper\\Database\\MoDbQueries->generate_tables()\n#4 /wordpress/wp-content/plugins/miniorange-wp-as-saml-idp/MoIDP.php(156): IDP\\Helper\\Database\\MoDbQueries->check_tables_and_run_queries()\n#5 /wordpress/wp-includes/class-wp-hook.php(324): IDP\\MoIDP->mo_plugin_activate(false)\n#6 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#7 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#8 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_minior...', false)\n#9 /internal/eval.php(20): activate_plugin('miniorange-wp-a...')\n#10 {main}</pre>\n for query CREATE TABLE wp_mo_sp_attributes (\r\n                    id bigint(20) NOT NULL auto_increment,\r\n                    mo_sp_id bigint(20),\r\n                    mo_sp_attr_name longtext NOT NULL,\r\n                    mo_sp_attr_value longtext NOT NULL,\r\n                    mo_attr_type smallint DEFAULT 0 NOT NULL,\r\n                    PRIMARY KEY  (id),\r\n                    FOREIGN KEY  (mo_sp_id) REFERENCES wp_mo_sp_data (id)\r\n                ) made by activate_plugin, do_action('activate_miniorange-wp-as-saml-idp/MoIDPSettings.php'), WP_Hook->do_action, WP_Hook->apply_filters, IDP\\MoIDP->mo_plugin_activate, IDP\\Helper\\Database\\MoDbQueries->check_tables_and_run_queries, IDP\\Helper\\Database\\MoDbQueries->generate_tables, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error\n\n    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:20:788)\n    at async j (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:1:1166) {\n  [cause]: Error: Error when executing the blueprint step #0 ({\"step\":\"installPlugin\",\"pluginData\":{\"resource\":\"wordpress.org/plugins\",\"slug\":\"miniorange-wp-as-saml-idp\"},\"options\":{\"activate\":true}}) : \n  \"unreachable\" WASM instruction executed.\n  \n  The typical reason is a PHP function missing from the ASYNCIFY_ONLY\n  list when building PHP.wasm.\n  \n  You will need to file a new issue in the WordPress Playground repository\n  and paste this error message there:\n  \n  https://github.com/WordPress/wordpress-playground/issues/new\n  \n  If you're a core developer, the typical fix is to:\n  \n  * Isolate a minimal reproduction of the error\n  * Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository\n  * Run 'npm run fix-asyncify'\n  * Commit the changes, push to the repo, release updated NPM packages\n  \n  Below is a list of all the PHP functions found in the stack trace to\n  help with the minimal reproduction. If they're all already listed in\n  the Dockerfile, you'll need to trigger this error again with long stack\n  traces enabled. In node.js, you can do it using the --stack-trace-limit=100\n  CLI option: \n  \n      * php.wasm.__wrap_select\n      * php.wasm.RAND_poll\n      * php.wasm.rand_status\n      * php.wasm.RAND_status\n      * php.wasm.php_openssl_generate_private_key\n      * php.wasm.zif_openssl_pkey_new\n      * php.wasm.ZEND_DO_FCALL_BY_NAME_SPEC_RETVAL_USED_HANDLER\n      * php.wasm.execute_ex\n  \n      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12099:32)\n      at async Qt (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12200:3)\n      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:20:453)\n      at async j (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:1:1166) {\n    [cause]: Error: \n    \"unreachable\" WASM instruction executed.\n    \n    The typical reason is a PHP function missing from the ASYNCIFY_ONLY\n    list when building PHP.wasm.\n    \n    You will need to file a new issue in the WordPress Playground repository\n    and paste this error message there:\n    \n    https://github.com/WordPress/wordpress-playground/issues/new\n    \n    If you're a core developer, the typical fix is to:\n    \n    * Isolate a minimal reproduction of the error\n    * Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository\n    * Run 'npm run fix-asyncify'\n    * Commit the changes, push to the repo, release updated NPM packages\n    \n    Below is a list of all the PHP functions found in the stack trace to\n    help with the minimal reproduction. If they're all already listed in\n    the Dockerfile, you'll need to trigger this error again with long stack\n    traces enabled. In node.js, you can do it using the --stack-trace-limit=100\n    CLI option: \n    \n        * php.wasm.__wrap_select\n        * php.wasm.RAND_poll\n        * php.wasm.rand_status\n        * php.wasm.RAND_status\n        * php.wasm.php_openssl_generate_private_key\n        * php.wasm.zif_openssl_pkey_new\n        * php.wasm.ZEND_DO_FCALL_BY_NAME_SPEC_RETVAL_USED_HANDLER\n        * php.wasm.execute_ex\n    \n        at PHP.oe (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:1429:78)\n        at async PHP.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:976:17)\n        at async gr (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:31:39)\n        at async Object.at [as installPlugin] (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:877:42)\n        at async d (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12165:30)\n        at async Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12096:23)\n        at async Qt (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12200:3)\n        at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:20:453)\n        at async j (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:1:1166) {\n      cause: Error: Rethrown\n          at UnhandledRejectionsTarget.e (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:1406:19)\n          at [nodejs.internal.kHybridDispatch] (node:internal/event_target:757:20)\n          at UnhandledRejectionsTarget.dispatchEvent (node:internal/event_target:692:26)\n          at t.wasmExports.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:565:15)\n          at invoke_iiiii (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:92895:14)\n          at php.wasm.php_execute_script (wasm://wasm/php.wasm-0372e072:wasm-function[11032]:0x5fcfba)\n          at php.wasm.dynCall_ii (wasm://wasm/php.wasm-0372e072:wasm-function[12823]:0x6c1791)\n          at ret.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:92342:22)\n          at t.wasmExports.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:556:18)\n          at invoke_ii (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:92906:14) {\n        cause: RuntimeError: unreachable\n            at php.wasm.RAND_bytes (wasm://wasm/php.wasm-0372e072:wasm-function[457]:0x32de0)\n            at php.wasm.bnrand (wasm://wasm/php.wasm-0372e072:wasm-function[1581]:0xecccc)\n            at php.wasm.BN_generate_prime_ex (wasm://wasm/php.wasm-0372e072:wasm-function[4395]:0x2e2431)\n            at php.wasm.RSA_generate_key_ex (wasm://wasm/php.wasm-0372e072:wasm-function[6544]:0x4570d7)\n            at php.wasm.php_openssl_generate_private_key (wasm://wasm/php.wasm-0372e072:wasm-function[5449]:0x3a2911)\n            at php.wasm.zif_openssl_pkey_new (wasm://wasm/php.wasm-0372e072:wasm-function[8224]:0x4f81c0)\n            at php.wasm.ZEND_DO_FCALL_BY_NAME_SPEC_RETVAL_USED_HANDLER (wasm://wasm/php.wasm-0372e072:wasm-function[14229]:0x72897c)\n            at php.wasm.execute_ex (wasm://wasm/php.wasm-0372e072:wasm-function[12641]:0x6a6f7e)\n            at php.wasm.zend_execute (wasm://wasm/php.wasm-0372e072:wasm-function[3452]:0x233807)\n            at php.wasm.zend_execute_scripts (wasm://wasm/php.wasm-0372e072:wasm-function[9170]:0x56ba45) {\n          cause: Error\n              at Asyncify.handleSleep (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:93143:45)\n              at _emscripten_sleep (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:91103:44)\n              at php.wasm.__wrap_select (wasm://wasm/php.wasm-0372e072:wasm-function[1345]:0xc6766)\n              at php.wasm.RAND_poll (wasm://wasm/php.wasm-0372e072:wasm-function[6548]:0x457ab8)\n              at php.wasm.rand_status (wasm://wasm/php.wasm-0372e072:wasm-function[10454]:0x5c51e3)\n              at php.wasm.RAND_status (wasm://wasm/php.wasm-0372e072:wasm-function[1783]:0x109352)\n              at php.wasm.php_openssl_generate_private_key (wasm://wasm/php.wasm-0372e072:wasm-function[5449]:0x3a2847)\n              at php.wasm.zif_openssl_pkey_new (wasm://wasm/php.wasm-0372e072:wasm-function[8224]:0x4f81c0)\n              at php.wasm.ZEND_DO_FCALL_BY_NAME_SPEC_RETVAL_USED_HANDLER (wasm://wasm/php.wasm-0372e072:wasm-function[14229]:0x72897c)\n              at php.wasm.execute_ex (wasm://wasm/php.wasm-0372e072:wasm-function[12641]:0x6a6f7e)\n        },\n        betterMessage: '\\n' +\n          '\"unreachable\" WASM instruction executed.\\n' +\n          '\\n' +\n          'The typical reason is a PHP function missing from the ASYNCIFY_ONLY\\n' +\n          'list when building PHP.wasm.\\n' +\n          '\\n' +\n          'You will need to file a new issue in the WordPress Playground repository\\n' +\n          'and paste this error message there:\\n' +\n          '\\n' +\n          'https://github.com/WordPress/wordpress-playground/issues/new\\n' +\n          '\\n' +\n          \"If you're a core developer, the typical fix is to:\\n\" +\n          '\\n' +\n          '* Isolate a minimal reproduction of the error\\n' +\n          '* Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository\\n' +\n          \"* Run 'npm run fix-asyncify'\\n\" +\n          '* Commit the changes, push to the repo, release updated NPM packages\\n' +\n          '\\n' +\n          'Below is a list of all the PHP functions found in the stack trace to\\n' +\n          \"help with the minimal reproduction. If they're all already listed in\\n\" +\n          \"the Dockerfile, you'll need to trigger this error again with long stack\\n\" +\n          'traces enabled. In node.js, you can do it using the --stack-trace-limit=100\\n' +\n          'CLI option: \\n' +\n          '\\n' +\n          '    * php.wasm.__wrap_select\\n' +\n          '    * php.wasm.RAND_poll\\n' +\n          '    * php.wasm.rand_status\\n' +\n          '    * php.wasm.RAND_status\\n' +\n          '    * php.wasm.php_openssl_generate_private_key\\n' +\n          '    * php.wasm.zif_openssl_pkey_new\\n' +\n          '    * php.wasm.ZEND_DO_FCALL_BY_NAME_SPEC_RETVAL_USED_HANDLER\\n' +\n          '    * php.wasm.execute_ex\\n'\n      }\n    }\n  }\n}\n\n",
    "log": "/logs/plugins/m/miniorange-wp-as-saml-idp/error.json"
  }
]
