file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/run-cli-j-geJYS3.js:325
        throw new Error($, { cause: h });
              ^

Error: [29-Jun-2025 16:32:47 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/flower-delivery-by-florist-one/public/flower-delivery.php on line 16
[29-Jun-2025 16:32:57 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/flower-delivery-by-florist-one/public/flower-delivery.php on line 16
[29-Jun-2025 16:33:07 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/flower-delivery-by-florist-one/public/flower-delivery.php on line 16
[29-Jun-2025 16:33:50 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/feedly-insight/feedly-insight.php on line 66
[29-Jun-2025 16:34:00 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/feedly-insight/feedly-insight.php on line 66
[29-Jun-2025 16:34:09 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/feedly-insight/feedly-insight.php on line 66
[29-Jun-2025 16:34:49 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE INDEX filled_errors_data ON `wp_filled_in_errors` (`data_id`);</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createIndex"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('CREATE INDEX fi...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('CREATE INDEX fi...')
#4 /wordpress/wp-content/plugins/filled-in/controller/admin.php(277): WP_SQLite_DB->query('CREATE INDEX fi...')
#5 /wordpress/wp-includes/class-wp-hook.php(324): Filled_In_Admin->activate(false)
#6 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#7 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#8 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_filled...', false)
#9 /internal/eval.php(20): activate_plugin('filled-in/fille...')
#10 {main}</pre>
 for query CREATE INDEX filled_errors_data ON `wp_filled_in_errors` (`data_id`); made by activate_plugin, do_action('activate_filled-in/filled_in.php'), WP_Hook->do_action, WP_Hook->apply_filters, Filled_In_Admin->activate, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[29-Jun-2025 16:34:49 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>filled-in</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href="https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121
[29-Jun-2025 16:34:59 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE INDEX filled_errors_data ON `wp_filled_in_errors` (`data_id`);</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createIndex"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('CREATE INDEX fi...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('CREATE INDEX fi...')
#4 /wordpress/wp-content/plugins/filled-in/controller/admin.php(277): WP_SQLite_DB->query('CREATE INDEX fi...')
#5 /wordpress/wp-includes/class-wp-hook.php(324): Filled_In_Admin->activate(false)
#6 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#7 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#8 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_filled...', false)
#9 /internal/eval.php(20): activate_plugin('filled-in/fille...')
#10 {main}</pre>
 for query CREATE INDEX filled_errors_data ON `wp_filled_in_errors` (`data_id`); made by activate_plugin, do_action('activate_filled-in/filled_in.php'), WP_Hook->do_action, WP_Hook->apply_filters, Filled_In_Admin->activate, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[29-Jun-2025 16:35:00 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>filled-in</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href="https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121
[29-Jun-2025 16:35:09 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE INDEX filled_errors_data ON `wp_filled_in_errors` (`data_id`);</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createIndex"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('CREATE INDEX fi...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('CREATE INDEX fi...')
#4 /wordpress/wp-content/plugins/filled-in/controller/admin.php(277): WP_SQLite_DB->query('CREATE INDEX fi...')
#5 /wordpress/wp-includes/class-wp-hook.php(324): Filled_In_Admin->activate(false)
#6 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#7 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#8 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_filled...', false)
#9 /internal/eval.php(20): activate_plugin('filled-in/fille...')
#10 {main}</pre>
 for query CREATE INDEX filled_errors_data ON `wp_filled_in_errors` (`data_id`); made by activate_plugin, do_action('activate_filled-in/filled_in.php'), WP_Hook->do_action, WP_Hook->apply_filters, Filled_In_Admin->activate, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[29-Jun-2025 16:35:10 UTC] PHP Notice:  Function _load_textdomain_just_in_time was called <strong>incorrectly</strong>. Translation loading for the <code>filled-in</code> domain was triggered too early. This is usually an indicator for some code in the plugin or theme running too early. Translations should be loaded at the <code>init</code> action or later. Please see <a href="https://developer.wordpress.org/advanced-administration/debug/debug-wordpress/">Debugging in WordPress</a> for more information. (This message was added in version 6.7.0.) in /wordpress/wp-includes/functions.php on line 6121
[29-Jun-2025 16:35:20 UTC] PHP Warning:  Undefined array key "post_type" in /wordpress/wp-content/plugins/filter-pages-by-parent-in-admin/filter-pages-by-parent-in-admin.php on line 81
[29-Jun-2025 16:35:21 UTC] PHP Warning:  Undefined array key "post_type" in /wordpress/wp-content/plugins/filter-pages-by-parent-in-admin/filter-pages-by-parent-in-admin.php on line 81
[29-Jun-2025 16:35:28 UTC] PHP Warning:  Undefined array key "post_type" in /wordpress/wp-content/plugins/filter-pages-by-parent-in-admin/filter-pages-by-parent-in-admin.php on line 81
[29-Jun-2025 16:35:29 UTC] PHP Warning:  Undefined array key "post_type" in /wordpress/wp-content/plugins/filter-pages-by-parent-in-admin/filter-pages-by-parent-in-admin.php on line 81
[29-Jun-2025 16:35:37 UTC] PHP Warning:  Undefined array key "post_type" in /wordpress/wp-content/plugins/filter-pages-by-parent-in-admin/filter-pages-by-parent-in-admin.php on line 81
[29-Jun-2025 16:35:38 UTC] PHP Warning:  Undefined array key "post_type" in /wordpress/wp-content/plugins/filter-pages-by-parent-in-admin/filter-pages-by-parent-in-admin.php on line 81
[29-Jun-2025 16:41:30 UTC] PHP Deprecated:  Function register_sidebar_widget is <strong>deprecated</strong> since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121
[29-Jun-2025 16:41:30 UTC] PHP Deprecated:  Function register_widget_control is <strong>deprecated</strong> since version 2.8.0! Use wp_register_widget_control() instead. in /wordpress/wp-includes/functions.php on line 6121

    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/run-cli-j-geJYS3.js:325:15)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async re (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/run-cli-j-geJYS3.js:149:10) {
  [cause]: Error: Error when executing the blueprint step #5 ({"step":"installPlugin","pluginData":{"resource":"wordpress.org/plugins","slug":"finanz-nachrichten"},"options":{"activate":true}}) : 
  "unreachable" WASM instruction executed.
  
  The typical reason is a PHP function missing from the ASYNCIFY_ONLY
  list when building PHP.wasm.
  
  You will need to file a new issue in the WordPress Playground repository
  and paste this error message there:
  
  https://github.com/WordPress/wordpress-playground/issues/new
  
  If you're a core developer, the typical fix is to:
  
  * Isolate a minimal reproduction of the error
  * Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository
  * Run 'npm run fix-asyncify'
  * Commit the changes, push to the repo, release updated NPM packages
  
  Below is a list of all the PHP functions found in the stack trace to
  help with the minimal reproduction. If they're all already listed in
  the Dockerfile, you'll need to trigger this error again with long stack
  traces enabled. In node.js, you can do it using the --stack-trace-limit=100
  CLI option: 
  
      * php.wasm.php_pollfd_for
      * php.wasm.php_openssl_sockop_set_option
      * php.wasm._php_stream_eof
      * php.wasm.php_stream_url_wrap_http_ex
      * php.wasm.php_stream_url_wrap_http
      * php.wasm._php_stream_open_wrapper_ex
      * php.wasm.php_libxml_streams_IO_open_wrapper
  
      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12093:19)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async ys (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12196:3)
      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/run-cli-j-geJYS3.js:315:48)
      at async re (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/run-cli-j-geJYS3.js:149:10) {
    [cause]: Error: 
    "unreachable" WASM instruction executed.
    
    The typical reason is a PHP function missing from the ASYNCIFY_ONLY
    list when building PHP.wasm.
    
    You will need to file a new issue in the WordPress Playground repository
    and paste this error message there:
    
    https://github.com/WordPress/wordpress-playground/issues/new
    
    If you're a core developer, the typical fix is to:
    
    * Isolate a minimal reproduction of the error
    * Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository
    * Run 'npm run fix-asyncify'
    * Commit the changes, push to the repo, release updated NPM packages
    
    Below is a list of all the PHP functions found in the stack trace to
    help with the minimal reproduction. If they're all already listed in
    the Dockerfile, you'll need to trigger this error again with long stack
    traces enabled. In node.js, you can do it using the --stack-trace-limit=100
    CLI option: 
    
        * php.wasm.php_pollfd_for
        * php.wasm.php_openssl_sockop_set_option
        * php.wasm._php_stream_eof
        * php.wasm.php_stream_url_wrap_http_ex
        * php.wasm.php_stream_url_wrap_http
        * php.wasm._php_stream_open_wrapper_ex
        * php.wasm.php_libxml_streams_IO_open_wrapper
    
        at PHP.G (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:1504:78)
        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
        at async PHP.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:1031:17)
        at async wr (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:74:13)
        at async Object.gt [as installPlugin] (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:631:42)
        at async g (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12161:30)
        at async Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12090:23)
        at async ys (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12196:3)
        at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/run-cli-j-geJYS3.js:315:48)
        at async re (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/run-cli-j-geJYS3.js:149:10) {
      cause: Error: Rethrown
          at UnhandledRejectionsTarget.e (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:1481:19)
          at [nodejs.internal.kHybridDispatch] (node:internal/event_target:827:20)
          at UnhandledRejectionsTarget.dispatchEvent (node:internal/event_target:762:26)
          at t.wasmExports.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:637:15)
          at invoke_iiiii (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:99383:14)
          at php.wasm.php_execute_script (wasm://wasm/php.wasm-0424c09e:wasm-function[13929]:0x77b81e)
          at php.wasm.dynCall_ii (wasm://wasm/php.wasm-0424c09e:wasm-function[17571]:0x88d513)
          at ret.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:98433:22)
          at t.wasmExports.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:628:18)
          at invoke_ii (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:99394:14) {
        cause: RuntimeError: unreachable
            at php.wasm.__fwritex (wasm://wasm/php.wasm-0424c09e:wasm-function[5614]:0x387e6b)
            at php.wasm.out (wasm://wasm/php.wasm-0424c09e:wasm-function[1021]:0x91cdd)
            at php.wasm.printf_core (wasm://wasm/php.wasm-0424c09e:wasm-function[6843]:0x44b803)
            at php.wasm.__vfprintf_internal (wasm://wasm/php.wasm-0424c09e:wasm-function[1837]:0x10319c)
            at php.wasm.vsnprintf (wasm://wasm/php.wasm-0424c09e:wasm-function[1059]:0x944e4)
            at php.wasm.__xmlRaiseError (wasm://wasm/php.wasm-0424c09e:wasm-function[126]:0xda43)
            at php.wasm.__xmlLoaderErr (wasm://wasm/php.wasm-0424c09e:wasm-function[8591]:0x56de22)
            at php.wasm.xmlNewInputFromFile (wasm://wasm/php.wasm-0424c09e:wasm-function[6213]:0x3db793)
            at php.wasm.xmlDefaultExternalEntityLoader (wasm://wasm/php.wasm-0424c09e:wasm-function[6248]:0x3e009c)
            at php.wasm._php_libxml_pre_ext_ent_loader (wasm://wasm/php.wasm-0424c09e:wasm-function[18308]:0x8c56b3) {
          cause: Error
              at Asyncify.handleSleep (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:99711:45)
              at returnCallback (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:98722:51)
              at wasm_poll_socket (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:98729:12)
              at php.wasm.php_pollfd_for (wasm://wasm/php.wasm-0424c09e:wasm-function[1239]:0xad01b)
              at php.wasm.php_openssl_sockop_set_option (wasm://wasm/php.wasm-0424c09e:wasm-function[13746]:0x769623)
              at php.wasm._php_stream_eof (wasm://wasm/php.wasm-0424c09e:wasm-function[688]:0x4d1af)
              at php.wasm.php_stream_url_wrap_http_ex (wasm://wasm/php.wasm-0424c09e:wasm-function[6937]:0x45e11e)
              at php.wasm.php_stream_url_wrap_http (wasm://wasm/php.wasm-0424c09e:wasm-function[6938]:0x45f328)
              at php.wasm._php_stream_open_wrapper_ex (wasm://wasm/php.wasm-0424c09e:wasm-function[378]:0x2cc77)
              at php.wasm.php_libxml_streams_IO_open_wrapper (wasm://wasm/php.wasm-0424c09e:wasm-function[4963]:0x30d05c)
        },
        betterMessage: '\n' +
          '"unreachable" WASM instruction executed.\n' +
          '\n' +
          'The typical reason is a PHP function missing from the ASYNCIFY_ONLY\n' +
          'list when building PHP.wasm.\n' +
          '\n' +
          'You will need to file a new issue in the WordPress Playground repository\n' +
          'and paste this error message there:\n' +
          '\n' +
          'https://github.com/WordPress/wordpress-playground/issues/new\n' +
          '\n' +
          "If you're a core developer, the typical fix is to:\n" +
          '\n' +
          '* Isolate a minimal reproduction of the error\n' +
          '* Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository\n' +
          "* Run 'npm run fix-asyncify'\n" +
          '* Commit the changes, push to the repo, release updated NPM packages\n' +
          '\n' +
          'Below is a list of all the PHP functions found in the stack trace to\n' +
          "help with the minimal reproduction. If they're all already listed in\n" +
          "the Dockerfile, you'll need to trigger this error again with long stack\n" +
          'traces enabled. In node.js, you can do it using the --stack-trace-limit=100\n' +
          'CLI option: \n' +
          '\n' +
          '    * php.wasm.php_pollfd_for\n' +
          '    * php.wasm.php_openssl_sockop_set_option\n' +
          '    * php.wasm._php_stream_eof\n' +
          '    * php.wasm.php_stream_url_wrap_http_ex\n' +
          '    * php.wasm.php_stream_url_wrap_http\n' +
          '    * php.wasm._php_stream_open_wrapper_ex\n' +
          '    * php.wasm.php_libxml_streams_IO_open_wrapper\n'
      }
    }
  }
}

Node.js v23.11.0
