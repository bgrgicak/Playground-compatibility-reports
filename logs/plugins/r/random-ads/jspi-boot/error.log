file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237
        throw new Error(y, { cause: u });
              ^

Error: [20-May-2025 09:51:00 UTC] PHP Fatal error:  Uncaught Error: Non-static method SCRM_CSV::init() cannot be called statically in /wordpress/wp-content/plugins/simple-crm-csv-import/simple-crm-csv-import.php:24
Stack trace:
#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()
#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('simple-crm-csv-...')
#2 /internal/eval.php(20): activate_plugin('simple-crm-csv-...')
#3 {main}
  thrown in /wordpress/wp-content/plugins/simple-crm-csv-import/simple-crm-csv-import.php on line 24
[20-May-2025 09:51:07 UTC] PHP Fatal error:  Uncaught Error: Non-static method SCRM_CSV::init() cannot be called statically in /wordpress/wp-content/plugins/simple-crm-csv-import/simple-crm-csv-import.php:24
Stack trace:
#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()
#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('simple-crm-csv-...')
#2 /internal/eval.php(20): activate_plugin('simple-crm-csv-...')
#3 {main}
  thrown in /wordpress/wp-content/plugins/simple-crm-csv-import/simple-crm-csv-import.php on line 24
[20-May-2025 09:51:15 UTC] PHP Fatal error:  Uncaught Error: Non-static method SCRM_CSV::init() cannot be called statically in /wordpress/wp-content/plugins/simple-crm-csv-import/simple-crm-csv-import.php:24
Stack trace:
#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()
#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('simple-crm-csv-...')
#2 /internal/eval.php(20): activate_plugin('simple-crm-csv-...')
#3 {main}
  thrown in /wordpress/wp-content/plugins/simple-crm-csv-import/simple-crm-csv-import.php on line 24
[20-May-2025 09:53:07 UTC] PHP Warning:  Undefined array key "SERVER_PROTOCOL" in /wordpress/wp-content/plugins/simply-share-links-using-bubbles/includes/abstracts/class-db-url.php on line 19
[20-May-2025 09:53:16 UTC] PHP Warning:  Undefined array key "SERVER_PROTOCOL" in /wordpress/wp-content/plugins/simply-share-links-using-bubbles/includes/abstracts/class-db-url.php on line 19
[20-May-2025 09:53:26 UTC] PHP Warning:  Undefined array key "SERVER_PROTOCOL" in /wordpress/wp-content/plugins/simply-share-links-using-bubbles/includes/abstracts/class-db-url.php on line 19
[20-May-2025 09:54:57 UTC] PHP Fatal error:  Declaration of Site_Page_Tree::widget($args) must be compatible with WP_Widget::widget($args, $instance) in /wordpress/wp-content/plugins/site-page-tree/site-page-tree.php on line 56
[20-May-2025 09:55:05 UTC] PHP Fatal error:  Declaration of Site_Page_Tree::widget($args) must be compatible with WP_Widget::widget($args, $instance) in /wordpress/wp-content/plugins/site-page-tree/site-page-tree.php on line 56
[20-May-2025 09:55:12 UTC] PHP Fatal error:  Declaration of Site_Page_Tree::widget($args) must be compatible with WP_Widget::widget($args, $instance) in /wordpress/wp-content/plugins/site-page-tree/site-page-tree.php on line 56

    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237:15)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)
    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {
  [cause]: Error: Error when executing the blueprint step #1 ({"step":"installPlugin","pluginData":{"resource":"wordpress.org/plugins","slug":"random-ads"},"options":{"activate":true}}) : Plugin /wordpress/wp-content/plugins/random-ads could not be activated – WordPress exited with no error. Sometimes, when $_SERVER or site options are not configured correctly, WordPress exits early with a 301 redirect. Inspect the "debug" logs in the console for more details.
      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12449:19)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)
      ... 2 lines matching cause stack trace ...
      at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {
    [cause]: Error: Plugin /wordpress/wp-content/plugins/random-ads could not be activated – WordPress exited with no error. Sometimes, when $_SERVER or site options are not configured correctly, WordPress exits early with a 301 redirect. Inspect the "debug" logs in the console for more details.
        at wr (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:119:51)
        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
        at async Object.gt [as installPlugin] (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:974:42)
        at async g (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12517:30)
        at async Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12446:23)
        at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)
        at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)
        at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)
        at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12)
  }
}

		 changed_data_field VARCHAR(100),
		 changed_data_value_old LONGTEXT,
		 changed_data_value_new LONGTEXT,

		 variables LONGTEXT,

		 blobdata BLOB,

		 primary key (id),
		 key (created),
		 key (event_type),
		 key (active_user),
		 key (severity),
		 key (affected_post),
		 key (affected_term),
		 key (affected_user),
		 key (affected_comment),
		 key (expires),
		 key (changed_data_field),
    
    	 CONSTRAINT `wp_process_logs_ref` FOREIGN KEY (`process_id`) REFERENCES `wp_process_logs` (`id`) ON DELETE CASCADE

		) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 made by activate_plugin, do_action('activate_process-log/plugin.php'), WP_Hook->do_action, WP_Hook->apply_filters, Palasthotel\ProcessLog\Component\Plugin->onActivation, Palasthotel\ProcessLog\Plugin->onSiteActivation, Palasthotel\ProcessLog\Database->createTables, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[20-May-2025 09:56:20 UTC] PHP Fatal error:  Uncaught Exception: DateTimeZone::__construct(): Unknown or bad timezone () in /wordpress/wp-content/plugins/process-log/classes/Model/DatabaseItem.php:32
Stack trace:
#0 /wordpress/wp-content/plugins/process-log/classes/Model/DatabaseItem.php(32): DateTimeZone->__construct('')
#1 /wordpress/wp-content/plugins/process-log/classes/Model/ProcessLog.php(58): Palasthotel\ProcessLog\Model\DatabaseItem->getTimestamp()
#2 /wordpress/wp-content/plugins/process-log/classes/Model/ProcessLog.php(46): Palasthotel\ProcessLog\Model\ProcessLog->__construct()
#3 /wordpress/wp-content/plugins/process-log/classes/Watcher/OptionsWatcher.php(61): Palasthotel\ProcessLog\Model\ProcessLog::build()
#4 /wordpress/wp-includes/class-wp-hook.php(324): Palasthotel\ProcessLog\Watcher\OptionsWatcher->updated('cron', Array, Array)
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-includes/option.php(1031): do_action('updated_option', 'cron', Array, Array)
#8 /wordpress/wp-includes/cron.php(1263): update_option('cron', Array, true)
#9 /wordpress/wp-includes/cron.php(312): _set_cron_array(Array, false)
#10 /wordpress/wp-content/plugins/process-log/classes/Schedule.php(30): wp_schedule_event(1747734980, 'hourly', 'process_log_cle...')
#11 /wordpress/wp-content/plugins/process-log/plugin.php(108): Palasthotel\ProcessLog\Schedule->start()
#12 /wordpress/wp-content/plugins/process-log/classes/Component/Plugin.php(49): Palasthotel\ProcessLog\Plugin->onSiteActivation()
#13 /wordpress/wp-includes/class-wp-hook.php(324): Palasthotel\ProcessLog\Component\Plugin->onActivation(false)
#14 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#15 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#16 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_proces...', false)
#17 /internal/eval.php(20): activate_plugin('process-log/plu...')
#18 {main}
  thrown in /wordpress/wp-content/plugins/process-log/classes/Model/DatabaseItem.php on line 32
[20-May-2025 09:56:20 UTC] PHP Fatal error:  Uncaught Exception: DateTimeZone::__construct(): Unknown or bad timezone () in /wordpress/wp-content/plugins/process-log/classes/Model/DatabaseItem.php:32
Stack trace:
#0 /wordpress/wp-content/plugins/process-log/classes/Model/DatabaseItem.php(32): DateTimeZone->__construct('')
#1 /wordpress/wp-content/plugins/process-log/classes/Model/ProcessLog.php(58): Palasthotel\ProcessLog\Model\DatabaseItem->getTimestamp()
#2 /wordpress/wp-content/plugins/process-log/classes/Model/ProcessLog.php(46): Palasthotel\ProcessLog\Model\ProcessLog->__construct()
#3 /wordpress/wp-content/plugins/process-log/classes/Watcher/ErrorWatcher.php(30): Palasthotel\ProcessLog\Model\ProcessLog::build()
#4 [internal function]: Palasthotel\ProcessLog\Watcher\ErrorWatcher->onError()
#5 {main}
  thrown in /wordpress/wp-content/plugins/process-log/classes/Model/DatabaseItem.php on line 32
[20-May-2025 09:56:29 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS wp_process_log_items
		(
		 id bigint(20) unsigned auto_increment,
		 process_id bigint(20) unsigned,
		 created DATETIME NOT NULL,

		 event_type varchar(100) NOT NULL,
		 active_user BIGINT(20),
		 message TEXT comment 'Message from code',
		 note TEXT comment 'Comment from user that triggered event. Comparable to git commit message',
		 comment TEXT comment 'after creation comments in backend',
		 severity varchar(100) NOT NULL,
		 link_url varchar(255) comment 'link to the result of the event',
		 location_path varchar(255) comment 'where the event happend, file system path',
		 affected_post BIGINT comment 'post id that was affected by the event',
		 affected_term BIGINT comment 'term id that was affected by the event',
		 affected_user BIGINT comment 'user id that was affected by the event',
		 affected_comment BIGINT comment 'comment id that was affected by the event',
		 expires BIGINT comment 'timestamp when to clean up this log entry',

		 changed_data_field VARCHAR(100),
		 changed_data_value_old LONGTEXT,
		 changed_data_value_new LONGTEXT,

		 variables LONGTEXT,

		 blobdata BLOB,

		 primary key (id),
		 key (created),
		 key (event_type),
		 key (active_user),
		 key (severity),
		 key (affected_post),
		 key (affected_term),
		 key (affected_user),
		 key (affected_comment),
		 key (expires),
		 key (changed_data_field),
    
    	 CONSTRAINT `wp_process_logs_ref` FOREIGN KEY (`process_id`) REFERENCES `wp_process_logs` (`id`) ON DELETE CASCADE

		) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, id, bigint(20) unsigned</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, process_id, bigint(20) unsigned</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, created, datetime</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, event_type, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, active_user, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, message, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, note, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, comment, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, severity, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, link_url, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, location_path, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, affected_post, bigint</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, affected_term, bigint</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, affected_user, bigint</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, affected_comment, bigint</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, expires, bigint</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, changed_data_field, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, changed_data_value_old, longtext</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, changed_data_value_new, longtext</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, variables, longtext</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, blobdata, blob</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_process_log_items&quot; (
&quot;id&quot; integer PRIMARY KEY AUTOINCREMENT,
&quot;process_id&quot; integer,
&quot;created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;event_type&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;active_user&quot; integer,
&quot;message&quot; text COLLATE NOCASE,
&quot;note&quot; text COLLATE NOCASE,
&quot;comment&quot; text COLLATE NOCASE,
&quot;severity&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;link_url&quot; text COLLATE NOCASE,
&quot;location_path&quot; text COLLATE NOCASE,
&quot;affected_post&quot; integer,
&quot;affected_term&quot; integer,
&quot;affected_user&quot; integer,
&quot;affected_comment&quot; integer,
&quot;expires&quot; integer,
&quot;changed_data_field&quot; text COLLATE NOCASE,
&quot;changed_data_value_old&quot; text COLLATE NOCASE,
&quot;changed_data_value_new&quot; text COLLATE NOCASE,
&quot;variables&quot; text COLLATE NOCASE,
&quot;blobdata&quot; blob) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__created&quot; ON &quot;wp_process_log_items&quot; (&quot;created&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__created, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__event_type&quot; ON &quot;wp_process_log_items&quot; (&quot;event_type&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__event_type, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__active_user&quot; ON &quot;wp_process_log_items&quot; (&quot;active_user&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__active_user, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__severity&quot; ON &quot;wp_process_log_items&quot; (&quot;severity&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__severity, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__affected_post&quot; ON &quot;wp_process_log_items&quot; (&quot;affected_post&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__affected_post, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__affected_term&quot; ON &quot;wp_process_log_items&quot; (&quot;affected_term&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__affected_term, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__affected_user&quot; ON &quot;wp_process_log_items&quot; (&quot;affected_user&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__affected_user, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__affected_comment&quot; ON &quot;wp_process_log_items&quot; (&quot;affected_comment&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__affected_comment, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__expires&quot; ON &quot;wp_process_log_items&quot; (&quot;expires&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__expires, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__changed_data_field&quot; ON &quot;wp_process_log_items&quot; (&quot;changed_data_field&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__changed_data_field, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__&quot; ON &quot;wp_process_log_items&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-admin/includes/upgrade.php(3280): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/process-log/classes/Database.php(280): dbDelta(Array)
#3 /wordpress/wp-content/plugins/process-log/plugin.php(98): Palasthotel\ProcessLog\Database->createTables()
#4 /wordpress/wp-content/plugins/process-log/classes/Component/Plugin.php(32): Palasthotel\ProcessLog\Plugin->onCreate()
#5 /wordpress/wp-content/plugins/process-log/classes/Component/Plugin.php(111): Palasthotel\ProcessLog\Component\Plugin->__construct()
#6 /wordpress/wp-content/plugins/process-log/plugin.php(116): Palasthotel\ProcessLog\Component\Plugin::instance()
#7 /wordpress/wp-admin/includes/plugin.php(2387): include_once('/wordpress/wp-c...')
#8 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('process-log/plu...')
#9 /internal/eval.php(20): activate_plugin('process-log/plu...')
#10 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS wp_process_log_items
		(
		 id bigint(20) unsigned auto_increment,
		 process_id bigint(20) unsigned,
		 created DATETIME NOT NULL,

		 event_type varchar(100) NOT NULL,
		 active_user BIGINT(20),
		 message TEXT comment 'Message from code',
		 note TEXT comment 'Comment from user that triggered event. Comparable to git commit message',
		 comment TEXT comment 'after creation comments in backend',
		 severity varchar(100) NOT NULL,
		 link_url varchar(255) comment 'link to the result of the event',
		 location_path varchar(255) comment 'where the event happend, file system path',
		 affected_post BIGINT comment 'post id that was affected by the event',
		 affected_term BIGINT comment 'term id that was affected by the event',
		 affected_user BIGINT comment 'user id that was affected by the event',
		 affected_comment BIGINT comment 'comment id that was affected by the event',
		 expires BIGINT comment 'timestamp when to clean up this log entry',

		 changed_data_field VARCHAR(100),
		 changed_data_value_old LONGTEXT,
		 changed_data_value_new LONGTEXT,

		 variables LONGTEXT,

		 blobdata BLOB,

		 primary key (id),
		 key (created),
		 key (event_type),
		 key (active_user),
		 key (severity),
		 key (affected_post),
		 key (affected_term),
		 key (affected_user),
		 key (affected_comment),
		 key (expires),
		 key (changed_data_field),
    
    	 CONSTRAINT `wp_process_logs_ref` FOREIGN KEY (`process_id`) REFERENCES `wp_process_logs` (`id`) ON DELETE CASCADE

		) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 made by activate_plugin, plugin_sandbox_scrape, include_once('/plugins/process-log/plugin.php'), Palasthotel\ProcessLog\Component\Plugin::instance, Palasthotel\ProcessLog\Component\Plugin->__construct, Palasthotel\ProcessLog\Plugin->onCreate, Palasthotel\ProcessLog\Database->createTables, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[20-May-2025 09:56:29 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS wp_process_log_items
		(
		 id bigint(20) unsigned auto_increment,
		 process_id bigint(20) unsigned,
		 created DATETIME NOT NULL,

		 event_type varchar(100) NOT NULL,
		 active_user BIGINT(20),
		 message TEXT comment 'Message from code',
		 note TEXT comment 'Comment from user that triggered event. Comparable to git commit message',
		 comment TEXT comment 'after creation comments in backend',
		 severity varchar(100) NOT NULL,
		 link_url varchar(255) comment 'link to the result of the event',
		 location_path varchar(255) comment 'where the event happend, file system path',
		 affected_post BIGINT comment 'post id that was affected by the event',
		 affected_term BIGINT comment 'term id that was affected by the event',
		 affected_user BIGINT comment 'user id that was affected by the event',
		 affected_comment BIGINT comment 'comment id that was affected by the event',
		 expires BIGINT comment 'timestamp when to clean up this log entry',

		 changed_data_field VARCHAR(100),
		 changed_data_value_old LONGTEXT,
		 changed_data_value_new LONGTEXT,

		 variables LONGTEXT,

		 blobdata BLOB,

		 primary key (id),
		 key (created),
		 key (event_type),
		 key (active_user),
		 key (severity),
		 key (affected_post),
		 key (affected_term),
		 key (affected_user),
		 key (affected_comment),
		 key (expires),
		 key (changed_data_field),
    
    	 CONSTRAINT `wp_process_logs_ref` FOREIGN KEY (`process_id`) REFERENCES `wp_process_logs` (`id`) ON DELETE CASCADE

		) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, id, bigint(20) unsigned</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, process_id, bigint(20) unsigned</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, created, datetime</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, event_type, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, active_user, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, message, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, note, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, comment, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, severity, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, link_url, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, location_path, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, affected_post, bigint</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, affected_term, bigint</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, affected_user, bigint</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, affected_comment, bigint</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, expires, bigint</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, changed_data_field, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, changed_data_value_old, longtext</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, changed_data_value_new, longtext</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, variables, longtext</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, blobdata, blob</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_process_log_items&quot; (
&quot;id&quot; integer PRIMARY KEY AUTOINCREMENT,
&quot;process_id&quot; integer,
&quot;created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;event_type&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;active_user&quot; integer,
&quot;message&quot; text COLLATE NOCASE,
&quot;note&quot; text COLLATE NOCASE,
&quot;comment&quot; text COLLATE NOCASE,
&quot;severity&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;link_url&quot; text COLLATE NOCASE,
&quot;location_path&quot; text COLLATE NOCASE,
&quot;affected_post&quot; integer,
&quot;affected_term&quot; integer,
&quot;affected_user&quot; integer,
&quot;affected_comment&quot; integer,
&quot;expires&quot; integer,
&quot;changed_data_field&quot; text COLLATE NOCASE,
&quot;changed_data_value_old&quot; text COLLATE NOCASE,
&quot;changed_data_value_new&quot; text COLLATE NOCASE,
&quot;variables&quot; text COLLATE NOCASE,
&quot;blobdata&quot; blob) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__created&quot; ON &quot;wp_process_log_items&quot; (&quot;created&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__created, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__event_type&quot; ON &quot;wp_process_log_items&quot; (&quot;event_type&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__event_type, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__active_user&quot; ON &quot;wp_process_log_items&quot; (&quot;active_user&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__active_user, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__severity&quot; ON &quot;wp_process_log_items&quot; (&quot;severity&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__severity, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__affected_post&quot; ON &quot;wp_process_log_items&quot; (&quot;affected_post&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__affected_post, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__affected_term&quot; ON &quot;wp_process_log_items&quot; (&quot;affected_term&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__affected_term, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__affected_user&quot; ON &quot;wp_process_log_items&quot; (&quot;affected_user&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__affected_user, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__affected_comment&quot; ON &quot;wp_process_log_items&quot; (&quot;affected_comment&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__affected_comment, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__expires&quot; ON &quot;wp_process_log_items&quot; (&quot;expires&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__expires, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__changed_data_field&quot; ON &quot;wp_process_log_items&quot; (&quot;changed_data_field&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__changed_data_field, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__&quot; ON &quot;wp_process_log_items&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-admin/includes/upgrade.php(3280): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/process-log/classes/Database.php(280): dbDelta(Array)
#3 /wordpress/wp-content/plugins/process-log/plugin.php(107): Palasthotel\ProcessLog\Database->createTables()
#4 /wordpress/wp-content/plugins/process-log/classes/Component/Plugin.php(49): Palasthotel\ProcessLog\Plugin->onSiteActivation()
#5 /wordpress/wp-includes/class-wp-hook.php(324): Palasthotel\ProcessLog\Component\Plugin->onActivation(false)
#6 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#7 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#8 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_proces...', false)
#9 /internal/eval.php(20): activate_plugin('process-log/plu...')
#10 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS wp_process_log_items
		(
		 id bigint(20) unsigned auto_increment,
		 process_id bigint(20) unsigned,
		 created DATETIME NOT NULL,

		 event_type varchar(100) NOT NULL,
		 active_user BIGINT(20),
		 message TEXT comment 'Message from code',
		 note TEXT comment 'Comment from user that triggered event. Comparable to git commit message',
		 comment TEXT comment 'after creation comments in backend',
		 severity varchar(100) NOT NULL,
		 link_url varchar(255) comment 'link to the result of the event',
		 location_path varchar(255) comment 'where the event happend, file system path',
		 affected_post BIGINT comment 'post id that was affected by the event',
		 affected_term BIGINT comment 'term id that was affected by the event',
		 affected_user BIGINT comment 'user id that was affected by the event',
		 affected_comment BIGINT comment 'comment id that was affected by the event',
		 expires BIGINT comment 'timestamp when to clean up this log entry',

		 changed_data_field VARCHAR(100),
		 changed_data_value_old LONGTEXT,
		 changed_data_value_new LONGTEXT,

		 variables LONGTEXT,

		 blobdata BLOB,

		 primary key (id),
		 key (created),
		 key (event_type),
		 key (active_user),
		 key (severity),
		 key (affected_post),
		 key (affected_term),
		 key (affected_user),
		 key (affected_comment),
		 key (expires),
		 key (changed_data_field),
    
    	 CONSTRAINT `wp_process_logs_ref` FOREIGN KEY (`process_id`) REFERENCES `wp_process_logs` (`id`) ON DELETE CASCADE

		) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 made by activate_plugin, do_action('activate_process-log/plugin.php'), WP_Hook->do_action, WP_Hook->apply_filters, Palasthotel\ProcessLog\Component\Plugin->onActivation, Palasthotel\ProcessLog\Plugin->onSiteActivation, Palasthotel\ProcessLog\Database->createTables, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[20-May-2025 09:56:29 UTC] PHP Fatal error:  Uncaught Exception: DateTimeZone::__construct(): Unknown or bad timezone () in /wordpress/wp-content/plugins/process-log/classes/Model/DatabaseItem.php:32
Stack trace:
#0 /wordpress/wp-content/plugins/process-log/classes/Model/DatabaseItem.php(32): DateTimeZone->__construct('')
#1 /wordpress/wp-content/plugins/process-log/classes/Model/ProcessLog.php(58): Palasthotel\ProcessLog\Model\DatabaseItem->getTimestamp()
#2 /wordpress/wp-content/plugins/process-log/classes/Model/ProcessLog.php(46): Palasthotel\ProcessLog\Model\ProcessLog->__construct()
#3 /wordpress/wp-content/plugins/process-log/classes/Watcher/OptionsWatcher.php(61): Palasthotel\ProcessLog\Model\ProcessLog::build()
#4 /wordpress/wp-includes/class-wp-hook.php(324): Palasthotel\ProcessLog\Watcher\OptionsWatcher->updated('cron', Array, Array)
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-includes/option.php(1031): do_action('updated_option', 'cron', Array, Array)
#8 /wordpress/wp-includes/cron.php(1263): update_option('cron', Array, true)
#9 /wordpress/wp-includes/cron.php(312): _set_cron_array(Array, false)
#10 /wordpress/wp-content/plugins/process-log/classes/Schedule.php(30): wp_schedule_event(1747734989, 'hourly', 'process_log_cle...')
#11 /wordpress/wp-content/plugins/process-log/plugin.php(108): Palasthotel\ProcessLog\Schedule->start()
#12 /wordpress/wp-content/plugins/process-log/classes/Component/Plugin.php(49): Palasthotel\ProcessLog\Plugin->onSiteActivation()
#13 /wordpress/wp-includes/class-wp-hook.php(324): Palasthotel\ProcessLog\Component\Plugin->onActivation(false)
#14 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#15 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#16 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_proces...', false)
#17 /internal/eval.php(20): activate_plugin('process-log/plu...')
#18 {main}
  thrown in /wordpress/wp-content/plugins/process-log/classes/Model/DatabaseItem.php on line 32
[20-May-2025 09:56:29 UTC] PHP Fatal error:  Uncaught Exception: DateTimeZone::__construct(): Unknown or bad timezone () in /wordpress/wp-content/plugins/process-log/classes/Model/DatabaseItem.php:32
Stack trace:
#0 /wordpress/wp-content/plugins/process-log/classes/Model/DatabaseItem.php(32): DateTimeZone->__construct('')
#1 /wordpress/wp-content/plugins/process-log/classes/Model/ProcessLog.php(58): Palasthotel\ProcessLog\Model\DatabaseItem->getTimestamp()
#2 /wordpress/wp-content/plugins/process-log/classes/Model/ProcessLog.php(46): Palasthotel\ProcessLog\Model\ProcessLog->__construct()
#3 /wordpress/wp-content/plugins/process-log/classes/Watcher/ErrorWatcher.php(30): Palasthotel\ProcessLog\Model\ProcessLog::build()
#4 [internal function]: Palasthotel\ProcessLog\Watcher\ErrorWatcher->onError()
#5 {main}
  thrown in /wordpress/wp-content/plugins/process-log/classes/Model/DatabaseItem.php on line 32
[20-May-2025 09:56:37 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS wp_process_log_items
		(
		 id bigint(20) unsigned auto_increment,
		 process_id bigint(20) unsigned,
		 created DATETIME NOT NULL,

		 event_type varchar(100) NOT NULL,
		 active_user BIGINT(20),
		 message TEXT comment 'Message from code',
		 note TEXT comment 'Comment from user that triggered event. Comparable to git commit message',
		 comment TEXT comment 'after creation comments in backend',
		 severity varchar(100) NOT NULL,
		 link_url varchar(255) comment 'link to the result of the event',
		 location_path varchar(255) comment 'where the event happend, file system path',
		 affected_post BIGINT comment 'post id that was affected by the event',
		 affected_term BIGINT comment 'term id that was affected by the event',
		 affected_user BIGINT comment 'user id that was affected by the event',
		 affected_comment BIGINT comment 'comment id that was affected by the event',
		 expires BIGINT comment 'timestamp when to clean up this log entry',

		 changed_data_field VARCHAR(100),
		 changed_data_value_old LONGTEXT,
		 changed_data_value_new LONGTEXT,

		 variables LONGTEXT,

		 blobdata BLOB,

		 primary key (id),
		 key (created),
		 key (event_type),
		 key (active_user),
		 key (severity),
		 key (affected_post),
		 key (affected_term),
		 key (affected_user),
		 key (affected_comment),
		 key (expires),
		 key (changed_data_field),
    
    	 CONSTRAINT `wp_process_logs_ref` FOREIGN KEY (`process_id`) REFERENCES `wp_process_logs` (`id`) ON DELETE CASCADE

		) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, id, bigint(20) unsigned</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, process_id, bigint(20) unsigned</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, created, datetime</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, event_type, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, active_user, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, message, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, note, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, comment, text</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, severity, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, link_url, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, location_path, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, affected_post, bigint</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, affected_term, bigint</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, affected_user, bigint</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, affected_comment, bigint</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, expires, bigint</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, changed_data_field, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, changed_data_value_old, longtext</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, changed_data_value_new, longtext</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, variables, longtext</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, blobdata, blob</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_process_log_items&quot; (
&quot;id&quot; integer PRIMARY KEY AUTOINCREMENT,
&quot;process_id&quot; integer,
&quot;created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;event_type&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;active_user&quot; integer,
&quot;message&quot; text COLLATE NOCASE,
&quot;note&quot; text COLLATE NOCASE,
&quot;comment&quot; text COLLATE NOCASE,
&quot;severity&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;link_url&quot; text COLLATE NOCASE,
&quot;location_path&quot; text COLLATE NOCASE,
&quot;affected_post&quot; integer,
&quot;affected_term&quot; integer,
&quot;affected_user&quot; integer,
&quot;affected_comment&quot; integer,
&quot;expires&quot; integer,
&quot;changed_data_field&quot; text COLLATE NOCASE,
&quot;changed_data_value_old&quot; text COLLATE NOCASE,
&quot;changed_data_value_new&quot; text COLLATE NOCASE,
&quot;variables&quot; text COLLATE NOCASE,
&quot;blobdata&quot; blob) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__created&quot; ON &quot;wp_process_log_items&quot; (&quot;created&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__created, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__event_type&quot; ON &quot;wp_process_log_items&quot; (&quot;event_type&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__event_type, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__active_user&quot; ON &quot;wp_process_log_items&quot; (&quot;active_user&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__active_user, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__severity&quot; ON &quot;wp_process_log_items&quot; (&quot;severity&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_process_log_items, wp_process_log_items__severity, KEY</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_process_log_items__affected_post&quot; ON &quot;wp_process_log_items&quot; (&quot;affected_post&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
	
