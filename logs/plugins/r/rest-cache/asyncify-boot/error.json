[
{"message":"file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:20\n`)},constants:R,phpIniEntries:{\"openssl.cafile\":\"/internal/shared/ca-bundle.crt\",allow_url_fopen:\"1\",disable_functions:\"\"},hooks:{async beforeWordPressFiles(h){t.mountBeforeInstall&&p(h,t.mountBeforeInstall)}}});const v=await s.getPrimaryPhp();try{if(n&&!t.mountBeforeInstall&&g.writeFileSync(f,await q(v,\"/wordpress\")),t.mount&&p(v,t.mount),d=!0,u){const{php:h,reap:m}=await s.processManager.acquirePHPInstance();try{c.log(\"Running the Blueprint...\"),await x(u,h),c.log(\"Finished running the blueprint\")}finally{m()}}a===\"build-snapshot\"?(await r(t.outfile),c.log(`WordPress exported to ${t.outfile}`),process.exit(0)):a===\"run-blueprint\"?(c.log(\"Blueprint executed\"),process.exit(0)):c.log(`WordPress is running on ${l}`)}catch(h){if(!t.debug)throw h;const m=v.readFileAsText(D);throw new Error(m,{cause:h})}},async handleRequest(o){return d?await s.request(o):I.forHttpCode(502,\"WordPress is not ready yet\")}})}Q();\nn","level":"FATAL","type":"PLAYGROUND","test":"asyncify-boot","plugins":"rest-cache","details":"file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:20\n`)},constants:R,phpIniEntries:{\"openssl.cafile\":\"/internal/shared/ca-bundle.crt\",allow_url_fopen:\"1\",disable_functions:\"\"},hooks:{async beforeWordPressFiles(h){t.mountBeforeInstall&&p(h,t.mountBeforeInstall)}}});const v=await s.getPrimaryPhp();try{if(n&&!t.mountBeforeInstall&&g.writeFileSync(f,await q(v,\"/wordpress\")),t.mount&&p(v,t.mount),d=!0,u){const{php:h,reap:m}=await s.processManager.acquirePHPInstance();try{c.log(\"Running the Blueprint...\"),await x(u,h),c.log(\"Finished running the blueprint\")}finally{m()}}a===\"build-snapshot\"?(await r(t.outfile),c.log(`WordPress exported to ${t.outfile}`),process.exit(0)):a===\"run-blueprint\"?(c.log(\"Blueprint executed\"),process.exit(0)):c.log(`WordPress is running on ${l}`)}catch(h){if(!t.debug)throw h;const m=v.readFileAsText(D);throw new Error(m,{cause:h})}},async handleRequest(o){return d?await s.request(o):I.forHttpCode(502,\"WordPress is not ready yet\")}})}Q();\nn","log":"/tmp/tmp.5C7OrzvKFh"}
,
{"message":"file_get_contents(/wordpress/.htaccess): Failed to open stream: No such file or directory in /wordpress/wp-content/plugins/rest-cache/includes/class.rewrite-rule.php on line 22","level":"WARNING","type":"PHP","test":"asyncify-boot","plugins":"rest-cache","details":"[24-Dec-2024 19:19:30 UTC] PHP Warning:  file_get_contents(/wordpress/.htaccess): Failed to open stream: No such file or directory in /wordpress/wp-content/plugins/rest-cache/includes/class.rewrite-rule.php on line 22","log":"/tmp/tmp.5C7OrzvKFh"}
,
{"message":"Undefined array key \"DOCUMENT_ROOT\" in /wordpress/wp-content/plugins/rest-cache/includes/class.rewrite-rule.php on line 44","level":"WARNING","type":"PHP","test":"asyncify-boot","plugins":"rest-cache","details":"[24-Dec-2024 19:19:30 UTC] PHP Warning:  Undefined array key \"DOCUMENT_ROOT\" in /wordpress/wp-content/plugins/rest-cache/includes/class.rewrite-rule.php on line 44","log":"/tmp/tmp.5C7OrzvKFh"}
,
{"message":"file_get_contents(/wordpress/.htaccess): Failed to open stream: No such file or directory in /wordpress/wp-content/plugins/rest-cache/includes/class.rewrite-rule.php on line 61","level":"WARNING","type":"PHP","test":"asyncify-boot","plugins":"rest-cache","details":"[24-Dec-2024 19:19:30 UTC] PHP Warning:  file_get_contents(/wordpress/.htaccess): Failed to open stream: No such file or directory in /wordpress/wp-content/plugins/rest-cache/includes/class.rewrite-rule.php on line 61\n\n    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:20:788)\n    at async j (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:1:1166) {\n  [cause]: Error: Error when executing the blueprint step #0 ({\"step\":\"installPlugin\",\"pluginData\":{\"resource\":\"wordpress.org/plugins\",\"slug\":\"rest-cache\"},\"options\":{\"activate\":true}}) : \n  \"unreachable\" WASM instruction executed.\n  \n  The typical reason is a PHP function missing from the ASYNCIFY_ONLY\n  list when building PHP.wasm.\n  \n  You will need to file a new issue in the WordPress Playground repository\n  and paste this error message there:\n  \n  https://github.com/WordPress/wordpress-playground/issues/new\n  \n  If you're a core developer, the typical fix is to:\n  \n  * Isolate a minimal reproduction of the error\n  * Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository\n  * Run 'npm run fix-asyncify'\n  * Commit the changes, push to the repo, release updated NPM packages\n  \n  Below is a list of all the PHP functions found in the stack trace to\n  help with the minimal reproduction. If they're all already listed in\n  the Dockerfile, you'll need to trigger this error again with long stack\n  traces enabled. In node.js, you can do it using the --stack-trace-limit=100\n  CLI option: \n  \n      * php.wasm.__wrap_select\n      * php.wasm.RAND_poll\n      * php.wasm.rand_bytes\n      * php.wasm.rand_nopseudo_bytes\n      * php.wasm.RAND_bytes\n      * php.wasm.zif_openssl_random_pseudo_bytes\n      * php.wasm.ZEND_DO_FCALL_BY_NAME_SPEC_RETVAL_USED_HANDLER\n      * php.wasm.execute_ex\n  \n      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12099:32)\n      at async Qt (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12200:3)\n      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:20:453)\n      at async j (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:1:1166) {\n    [cause]: Error: \n    \"unreachable\" WASM instruction executed.\n    \n    The typical reason is a PHP function missing from the ASYNCIFY_ONLY\n    list when building PHP.wasm.\n    \n    You will need to file a new issue in the WordPress Playground repository\n    and paste this error message there:\n    \n    https://github.com/WordPress/wordpress-playground/issues/new\n    \n    If you're a core developer, the typical fix is to:\n    \n    * Isolate a minimal reproduction of the error\n    * Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository\n    * Run 'npm run fix-asyncify'\n    * Commit the changes, push to the repo, release updated NPM packages\n    \n    Below is a list of all the PHP functions found in the stack trace to\n    help with the minimal reproduction. If they're all already listed in\n    the Dockerfile, you'll need to trigger this error again with long stack\n    traces enabled. In node.js, you can do it using the --stack-trace-limit=100\n    CLI option: \n    \n        * php.wasm.__wrap_select\n        * php.wasm.RAND_poll\n        * php.wasm.rand_bytes\n        * php.wasm.rand_nopseudo_bytes\n        * php.wasm.RAND_bytes\n        * php.wasm.zif_openssl_random_pseudo_bytes\n        * php.wasm.ZEND_DO_FCALL_BY_NAME_SPEC_RETVAL_USED_HANDLER\n        * php.wasm.execute_ex\n    \n        at PHP.oe (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:1429:78)\n        at async PHP.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:976:17)\n        at async gr (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:31:39)\n        at async Object.at [as installPlugin] (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:877:42)\n        at async d (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12165:30)\n        at async Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12096:23)\n        at async Qt (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12200:3)\n        at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:20:453)\n        at async j (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:1:1166) {\n      cause: Error: Rethrown\n          at UnhandledRejectionsTarget.e (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:1406:19)\n          at [nodejs.internal.kHybridDispatch] (node:internal/event_target:757:20)\n          at UnhandledRejectionsTarget.dispatchEvent (node:internal/event_target:692:26)\n          at t.wasmExports.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:565:15)\n          at invoke_iiiii (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:92895:14)\n          at php.wasm.php_execute_script (wasm://wasm/php.wasm-0372e072:wasm-function[11032]:0x5fcfba)\n          at php.wasm.dynCall_ii (wasm://wasm/php.wasm-0372e072:wasm-function[12823]:0x6c1791)\n          at ret.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:92342:22)\n          at t.wasmExports.<computed> (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/universal/index.js:556:18)\n          at invoke_ii (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:92906:14) {\n        cause: RuntimeError: unreachable\n            at php.wasm.zend_std_write_property (wasm://wasm/php.wasm-0372e072:wasm-function[1271]:0xbb88c)\n            at php.wasm.zend_default_exception_new_ex (wasm://wasm/php.wasm-0372e072:wasm-function[4552]:0x2eecce)\n            at php.wasm.zend_default_exception_new (wasm://wasm/php.wasm-0372e072:wasm-function[9177]:0x56ca2a)\n            at php.wasm.object_init_ex (wasm://wasm/php.wasm-0372e072:wasm-function[204]:0x12980)\n            at php.wasm.zend_throw_exception_zstr (wasm://wasm/php.wasm-0372e072:wasm-function[3406]:0x22f1cc)\n            at php.wasm.zend_throw_exception (wasm://wasm/php.wasm-0372e072:wasm-function[232]:0x15bac)\n            at php.wasm.zif_openssl_random_pseudo_bytes (wasm://wasm/php.wasm-0372e072:wasm-function[8219]:0x4f6a56)\n            at php.wasm.ZEND_DO_FCALL_BY_NAME_SPEC_RETVAL_USED_HANDLER (wasm://wasm/php.wasm-0372e072:wasm-function[14229]:0x72897c)\n            at php.wasm.execute_ex (wasm://wasm/php.wasm-0372e072:wasm-function[12641]:0x6a6f7e)\n            at php.wasm.zend_execute (wasm://wasm/php.wasm-0372e072:wasm-function[3452]:0x233807) {\n          cause: Error\n              at Asyncify.handleSleep (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:93143:45)\n              at _emscripten_sleep (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/node/index.js:91103:44)\n              at php.wasm.__wrap_select (wasm://wasm/php.wasm-0372e072:wasm-function[1345]:0xc6766)\n              at php.wasm.RAND_poll (wasm://wasm/php.wasm-0372e072:wasm-function[6548]:0x457ab8)\n              at php.wasm.rand_bytes (wasm://wasm/php.wasm-0372e072:wasm-function[5293]:0x378d5c)\n              at php.wasm.rand_nopseudo_bytes (wasm://wasm/php.wasm-0372e072:wasm-function[10457]:0x5c5311)\n              at php.wasm.RAND_bytes (wasm://wasm/php.wasm-0372e072:wasm-function[457]:0x32db2)\n              at php.wasm.zif_openssl_random_pseudo_bytes (wasm://wasm/php.wasm-0372e072:wasm-function[8219]:0x4f6a1b)\n              at php.wasm.ZEND_DO_FCALL_BY_NAME_SPEC_RETVAL_USED_HANDLER (wasm://wasm/php.wasm-0372e072:wasm-function[14229]:0x72897c)\n              at php.wasm.execute_ex (wasm://wasm/php.wasm-0372e072:wasm-function[12641]:0x6a6f7e)\n        },\n        betterMessage: '\\n' +\n          '\"unreachable\" WASM instruction executed.\\n' +\n          '\\n' +\n          'The typical reason is a PHP function missing from the ASYNCIFY_ONLY\\n' +\n          'list when building PHP.wasm.\\n' +\n          '\\n' +\n          'You will need to file a new issue in the WordPress Playground repository\\n' +\n          'and paste this error message there:\\n' +\n          '\\n' +\n          'https://github.com/WordPress/wordpress-playground/issues/new\\n' +\n          '\\n' +\n          \"If you're a core developer, the typical fix is to:\\n\" +\n          '\\n' +\n          '* Isolate a minimal reproduction of the error\\n' +\n          '* Add a reproduction of the error to php-asyncify.spec.ts in the WordPress Playground repository\\n' +\n          \"* Run 'npm run fix-asyncify'\\n\" +\n          '* Commit the changes, push to the repo, release updated NPM packages\\n' +\n          '\\n' +\n          'Below is a list of all the PHP functions found in the stack trace to\\n' +\n          \"help with the minimal reproduction. If they're all already listed in\\n\" +\n          \"the Dockerfile, you'll need to trigger this error again with long stack\\n\" +\n          'traces enabled. In node.js, you can do it using the --stack-trace-limit=100\\n' +\n          'CLI option: \\n' +\n          '\\n' +\n          '    * php.wasm.__wrap_select\\n' +\n          '    * php.wasm.RAND_poll\\n' +\n          '    * php.wasm.rand_bytes\\n' +\n          '    * php.wasm.rand_nopseudo_bytes\\n' +\n          '    * php.wasm.RAND_bytes\\n' +\n          '    * php.wasm.zif_openssl_random_pseudo_bytes\\n' +\n          '    * php.wasm.ZEND_DO_FCALL_BY_NAME_SPEC_RETVAL_USED_HANDLER\\n' +\n          '    * php.wasm.execute_ex\\n'\n      }\n    }\n  }\n}\n\n","log":"/tmp/tmp.5C7OrzvKFh"}
]
