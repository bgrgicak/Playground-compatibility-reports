[
{"message":"file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n","level":"FATAL","type":"PLAYGROUND","test":"asyncify-boot","plugin":"liingo-words","details":"file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n","log":"/tmp/tmp.epADkwHdUp"}
,
{"message":"SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.","level":"FATAL","type":"SQL","test":"asyncify-boot","plugin":"liingo-words","details":"[01-May-2025 14:25:29 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>CREATE TABLE IF NOT EXISTS wp_LIR_flags (\r\n                      posts_id mediumint(8) UNSIGNED NOT NULL,\r\n                      name varchar(255) NOT NULL,\r\n                      value smallint(1) NOT NULL,\r\n                      PRIMARY KEY (posts_id, name),\r\n                      FOREIGN KEY (posts_id)\r\n                         REFERENCES wp_LIR_posts (id)\r\n                         ON UPDATE CASCADE ON DELETE CASCADE\r\n                   ) ENGINE=InnoDB DEFAULT CHARSET=utf8</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_LIR_flags, posts_id, mediumint(8) UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_LIR_flags, name, varchar(255)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_LIR_flags, value, smallint(1)</li>\n<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_LIR_flags&quot; (\n&quot;posts_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;name&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;value&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\nPRIMARY KEY (&quot;posts_id&quot;, &quot;name&quot;)) | (no parameters)</li>\n<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_LIR_flags__&quot; ON &quot;wp_LIR_flags&quot; (&quot;&quot;) | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_LIR_flags, wp_LIR_flags__, </li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-admin/includes/upgrade.php(3280): WP_SQLite_DB->query('CREATE TABLE IF...')\n#2 /wordpress/wp-content/plugins/library-instruction-recorder/library-instruction-recorder.php(183): dbDelta(Array)\n#3 /wordpress/wp-includes/class-wp-hook.php(324): LIR::activationHook(false)\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_librar...', false)\n#7 /internal/eval.php(20): activate_plugin('library-instruc...')\n#8 {main}</pre>\n for query CREATE TABLE IF NOT EXISTS wp_LIR_flags (\r\n                      posts_id mediumint(8) UNSIGNED NOT NULL,\r\n                      name varchar(255) NOT NULL,\r\n                      value smallint(1) NOT NULL,\r\n                      PRIMARY KEY (posts_id, name),\r\n                      FOREIGN KEY (posts_id)\r\n                         REFERENCES wp_LIR_posts (id)\r\n                         ON UPDATE CASCADE ON DELETE CASCADE\r\n                   ) ENGINE=InnoDB DEFAULT CHARSET=utf8 made by activate_plugin, do_action('activate_library-instruction-recorder/library-instruction-recorder.php'), WP_Hook->do_action, WP_Hook->apply_filters, LIR::activationHook, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error","log":"/logs/plugins/l/liingo-words/error.json"}
,
{"message":"SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.","level":"FATAL","type":"SQL","test":"asyncify-boot","plugin":"liingo-words","details":"[01-May-2025 14:25:38 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>CREATE TABLE IF NOT EXISTS wp_LIR_flags (\r\n                      posts_id mediumint(8) UNSIGNED NOT NULL,\r\n                      name varchar(255) NOT NULL,\r\n                      value smallint(1) NOT NULL,\r\n                      PRIMARY KEY (posts_id, name),\r\n                      FOREIGN KEY (posts_id)\r\n                         REFERENCES wp_LIR_posts (id)\r\n                         ON UPDATE CASCADE ON DELETE CASCADE\r\n                   ) ENGINE=InnoDB DEFAULT CHARSET=utf8</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_LIR_flags, posts_id, mediumint(8) UNSIGNED</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_LIR_flags, name, varchar(255)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_LIR_flags, value, smallint(1)</li>\n<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_LIR_flags&quot; (\n&quot;posts_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\n&quot;name&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,\n&quot;value&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,\nPRIMARY KEY (&quot;posts_id&quot;, &quot;name&quot;)) | (no parameters)</li>\n<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_LIR_flags__&quot; ON &quot;wp_LIR_flags&quot; (&quot;&quot;) | (no parameters)</li>\n<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)\n\t\t\t\tVALUES (:table, :column, :datatype)\n\t\t\t\tON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype\n\t\t\t | parameters: wp_LIR_flags, wp_LIR_flags__, </li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-admin/includes/upgrade.php(3280): WP_SQLite_DB->query('CREATE TABLE IF...')\n#2 /wordpress/wp-content/plugins/library-instruction-recorder/library-instruction-recorder.php(183): dbDelta(Array)\n#3 /wordpress/wp-includes/class-wp-hook.php(324): LIR::activationHook(false)\n#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_librar...', false)\n#7 /internal/eval.php(20): activate_plugin('library-instruc...')\n#8 {main}</pre>\n for query CREATE TABLE IF NOT EXISTS wp_LIR_flags (\r\n                      posts_id mediumint(8) UNSIGNED NOT NULL,\r\n                      name varchar(255) NOT NULL,\r\n                      value smallint(1) NOT NULL,\r\n                      PRIMARY KEY (posts_id, name),\r\n                      FOREIGN KEY (posts_id)\r\n                         REFERENCES wp_LIR_posts (id)\r\n                         ON UPDATE CASCADE ON DELETE CASCADE\r\n                   ) ENGINE=InnoDB DEFAULT CHARSET=utf8 made by activate_plugin, do_action('activate_library-instruction-recorder/library-instruction-recorder.php'), WP_Hook->do_action, WP_Hook->apply_filters, LIR::activationHook, dbDelta, WP_SQLite_DB->query, WP_SQLite_DB->print_error","log":"/logs/plugins/l/liingo-words/error.json"}
,
{"message":"Unknown drop type: procedure.","level":"FATAL","type":"SQL","test":"asyncify-boot","plugin":"liingo-words","details":"[01-May-2025 14:26:55 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>drop procedure if exists lightningimport_create_db_objects;</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown drop type: procedure.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-content/plugins/lightning-import/lightningimport_setup.php(44): WP_SQLite_DB->query('drop procedure ...')\n#2 /wordpress/wp-includes/class-wp-hook.php(324): lightningimport_plugin_activation(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_lightn...', false)\n#6 /internal/eval.php(20): activate_plugin('lightning-impor...')\n#7 {main}</pre>\n for query drop procedure if exists lightningimport_create_db_objects; made by activate_plugin, do_action('activate_lightning-import/lightningimport_setup.php'), WP_Hook->do_action, WP_Hook->apply_filters, lightningimport_plugin_activation, WP_SQLite_DB->query, WP_SQLite_DB->print_error","log":"/logs/plugins/l/liingo-words/error.json"}
,
{"message":"Unknown create type: procedure.","level":"FATAL","type":"SQL","test":"asyncify-boot","plugin":"liingo-words","details":"[01-May-2025 14:26:55 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>create procedure lightningimport_create_db_objects (in _delete_existing_tables bit(1))\nbegin\n\t\n\tif _delete_existing_tables = 1 then\t\t\n\t\tdrop table if exists lightningimport_product_attributes;      \n\t\tdrop table if exists lightningimport_product_attribute_mapping; \t\t\n\tend if;    \n\t\n    /*Holds unique combinations of product attribute values for searching*/\n\tcreate table if not exists `lightningimport_product_attributes` (\n\t\t`product_attribute_id` bigint not null auto_increment\t\n\t\t,`post_id` bigint null\n\t\t,`sku` varchar(100) not null\n\t\t,`f1` varchar(100) null\n        ,`f2` varchar(100) null\n        ,`f3` varchar(100) null\n\t\t,`f4` varchar(100) null\n\t\t,`f5` varchar(100) null\n\t\t,`f6` varchar(100) null\n\t\t,`f7` varchar(100) null\n\t\t,`f8` varchar(100) null\n\t\t, primary key(`product_attribute_id`)\t\t\n\t\t,index(`sku`)\n\t\t,index(`post_id`)\n\t\t,UNIQUE KEY (`sku`(15),`f1`(10), `f2`(10), `f3`(10), `f4`(10))\n\t);\n\t\n\t/*Holds names for product attribute columns to allow for dynamic naming of searchable columns*/\t\n\tcreate table if not exists `lightningimport_product_attribute_mapping` (\n\t\t`product_attribute_mapping_id` bigint not null auto_increment\t\t\n\t\t,`columnname` varchar(255) not null\n\t\t,`columnorder` bigint not null\n        ,`attributename` varchar(255) null \n\t\t,`attributedescription` varchar(255) null\t\t\t\n\t\t, primary key(`product_attribute_mapping_id`)\n\t);\t\t\n\nCREATE TABLE if not exists `lightningimport_temp` (\n`import_id` bigint(20) NOT NULL AUTO_INCREMENT,\n`PostMeta_Sku` varchar(255) NOT NULL,\n`PostTitle` text,\n`PostContent` longtext,\n`PostExcerpt` text,\n`PostContentFiltered` longtext,\n`PostMeta_RegularPrice` varchar(255) DEFAULT NULL,\n`PostMeta_SalePrice` varchar(255) DEFAULT NULL,\n`PostMeta_Weight` varchar(255) DEFAULT NULL,\n`PostMeta_Length` varchar(255) DEFAULT NULL,\n`PostMeta_Width` varchar(255) DEFAULT NULL,\n`PostMeta_Height` varchar(255) DEFAULT NULL,\n`PostMeta_Price` varchar(255) DEFAULT NULL,\n`PostMeta_Stock` varchar(255) DEFAULT NULL,\n`PostMeta_Image` varchar(255) DEFAULT NULL,\n`RequestBatchId` varchar(255) DEFAULT NULL,\nPRIMARY KEY (`import_id`),\nKEY `PostMeta_Sku` (`PostMeta_Sku`)\n) ENGINE=InnoDB AUTO_INCREMENT=397 DEFAULT CHARSET=latin1;\n\nCREATE TABLE if not exists `lightningimport_sku` (\n`sku` varchar(255) NOT NULL,\n`post_id` bigint(20) NOT NULL,\n`image` varchar(255) DEFAULT NULL,\nPRIMARY KEY (`sku`),\nUNIQUE KEY `post_id` (`post_id`),\nKEY `image` (`image`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\t\n\t\n\tif _delete_existing_tables = 1 then\t\t\n\t\t/*Populate the attribute mapping with the column names from the product attributes table*/\n\t\tinsert lightningimport_product_attribute_mapping(\n\t\t\tcolumnname\n\t\t\t,columnorder\n\t\t)\n\t\tselect concat('f',cast(option_id as char)),option_id FROM wp_options\n\t\tWHERE option_id <= 8;\n\tend if;\n\nend;</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown create type: procedure.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-content/plugins/lightning-import/lightningimport_setup.php(45): WP_SQLite_DB->query('create procedur...')\n#2 /wordpress/wp-includes/class-wp-hook.php(324): lightningimport_plugin_activation(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_lightn...', false)\n#6 /internal/eval.php(20): activate_plugin('lightning-impor...')\n#7 {main}</pre>\n for query create procedure lightningimport_create_db_objects (in _delete_existing_tables bit(1))\nbegin\n\t\n\tif _delete_existing_tables = 1 then\t\t\n\t\tdrop table if exists lightningimport_product_attributes;      \n\t\tdrop table if exists lightningimport_product_attribute_mapping; \t\t\n\tend if;    \n\t\n    /*Holds unique combinations of product attribute values for searching*/\n\tcreate table if not exists `lightningimport_product_attributes` (\n\t\t`product_attribute_id` bigint not null auto_increment\t\n\t\t,`post_id` bigint null\n\t\t,`sku` varchar(100) not null\n\t\t,`f1` varchar(100) null\n        ,`f2` varchar(100) null\n        ,`f3` varchar(100) null\n\t\t,`f4` varchar(100) null\n\t\t,`f5` varchar(100) null\n\t\t,`f6` varchar(100) null\n\t\t,`f7` varchar(100) null\n\t\t,`f8` varchar(100) null\n\t\t, primary key(`product_attribute_id`)\t\t\n\t\t,index(`sku`)\n\t\t,index(`post_id`)\n\t\t,UNIQUE KEY (`sku`(15),`f1`(10), `f2`(10), `f3`(10), `f4`(10))\n\t);\n\t\n\t/*Holds names for product attribute columns to allow for dynamic naming of searchable columns*/\t\n\tcreate table if not exists `lightningimport_product_attribute_mapping` (\n\t\t`product_attribute_mapping_id` bigint not null auto_increment\t\t\n\t\t,`columnname` varchar(255) not null\n\t\t,`columnorder` bigint not null\n        ,`attributename` varchar(255) null \n\t\t,`attributedescription` varchar(255) null\t\t\t\n\t\t, primary key(`product_attribute_mapping_id`)\n\t);\t\t\n\nCREATE TABLE if not exists `lightningimport_temp` (\n`import_id` bigint(20) NOT NULL AUTO_INCREMENT,\n`PostMeta_Sku` varchar(255) NOT NULL,\n`PostTitle` text,\n`PostContent` longtext,\n`PostExcerpt` text,\n`PostContentFiltered` longtext,\n`PostMeta_RegularPrice` varchar(255) DEFAULT NULL,\n`PostMeta_SalePrice` varchar(255) DEFAULT NULL,\n`PostMeta_Weight` varchar(255) DEFAULT NULL,\n`PostMeta_Length` varchar(255) DEFAULT NULL,\n`PostMeta_Width` varchar(255) DEFAULT NULL,\n`PostMeta_Height` varchar(255) DEFAULT NULL,\n`PostMeta_Price` varchar(255) DEFAULT NULL,\n`PostMeta_Stock` varchar(255) DEFAULT NULL,\n`PostMeta_Image` varchar(255) DEFAULT NULL,\n`RequestBatchId` varchar(255) DEFAULT NULL,\nPRIMARY KEY (`import_id`),\nKEY `PostMeta_Sku` (`PostMeta_Sku`)\n) ENGINE=InnoDB AUTO_INCREMENT=397 DEFAULT CHARSET=latin1;\n\nCREATE TABLE if not exists `lightningimport_sku` (\n`sku` varchar(255) NOT NULL,\n`post_id` bigint(20) NOT NULL,\n`image` varchar(255) DEFAULT NULL,\nPRIMARY KEY (`sku`),\nUNIQUE KEY `post_id` (`post_id`),\nKEY `image` (`image`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\t\n\t\n\tif _delete_existing_tables = 1 then\t\t\n\t\t/*Populate the attribute mapping with the column names from the product attributes table*/\n\t\tinsert lightningimport_product_attribute_mapping(\n\t\t\tcolumnname\n\t\t\t,columnorder\n\t\t)\n\t\tselect concat('f',cast(option_id as char)),option_id FROM wp_options\n\t\tWHERE option_id <= 8;\n\tend if;\n\nend; made by activate_plugin, do_action('activate_lightning-import/lightningimport_setup.php'), WP_Hook->do_action, WP_Hook->apply_filters, lightningimport_plugin_activation, WP_SQLite_DB->query, WP_SQLite_DB->print_error","log":"/logs/plugins/l/liingo-words/error.json"}
,
{"message":"Unknown drop type: procedure.","level":"FATAL","type":"SQL","test":"asyncify-boot","plugin":"liingo-words","details":"[01-May-2025 14:27:05 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>drop procedure if exists lightningimport_create_db_objects;</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown drop type: procedure.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-content/plugins/lightning-import/lightningimport_setup.php(44): WP_SQLite_DB->query('drop procedure ...')\n#2 /wordpress/wp-includes/class-wp-hook.php(324): lightningimport_plugin_activation(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_lightn...', false)\n#6 /internal/eval.php(20): activate_plugin('lightning-impor...')\n#7 {main}</pre>\n for query drop procedure if exists lightningimport_create_db_objects; made by activate_plugin, do_action('activate_lightning-import/lightningimport_setup.php'), WP_Hook->do_action, WP_Hook->apply_filters, lightningimport_plugin_activation, WP_SQLite_DB->query, WP_SQLite_DB->print_error","log":"/logs/plugins/l/liingo-words/error.json"}
,
{"message":"Unknown create type: procedure.","level":"FATAL","type":"SQL","test":"asyncify-boot","plugin":"liingo-words","details":"[01-May-2025 14:27:05 UTC] WordPress database error <div style=\"clear:both\">&nbsp;</div>\n<div class=\"queries\" style=\"clear:both;margin-bottom:2px;border:red dotted thin;\">\n<p>MySQL query:</p>\n<p>create procedure lightningimport_create_db_objects (in _delete_existing_tables bit(1))\nbegin\n\t\n\tif _delete_existing_tables = 1 then\t\t\n\t\tdrop table if exists lightningimport_product_attributes;      \n\t\tdrop table if exists lightningimport_product_attribute_mapping; \t\t\n\tend if;    \n\t\n    /*Holds unique combinations of product attribute values for searching*/\n\tcreate table if not exists `lightningimport_product_attributes` (\n\t\t`product_attribute_id` bigint not null auto_increment\t\n\t\t,`post_id` bigint null\n\t\t,`sku` varchar(100) not null\n\t\t,`f1` varchar(100) null\n        ,`f2` varchar(100) null\n        ,`f3` varchar(100) null\n\t\t,`f4` varchar(100) null\n\t\t,`f5` varchar(100) null\n\t\t,`f6` varchar(100) null\n\t\t,`f7` varchar(100) null\n\t\t,`f8` varchar(100) null\n\t\t, primary key(`product_attribute_id`)\t\t\n\t\t,index(`sku`)\n\t\t,index(`post_id`)\n\t\t,UNIQUE KEY (`sku`(15),`f1`(10), `f2`(10), `f3`(10), `f4`(10))\n\t);\n\t\n\t/*Holds names for product attribute columns to allow for dynamic naming of searchable columns*/\t\n\tcreate table if not exists `lightningimport_product_attribute_mapping` (\n\t\t`product_attribute_mapping_id` bigint not null auto_increment\t\t\n\t\t,`columnname` varchar(255) not null\n\t\t,`columnorder` bigint not null\n        ,`attributename` varchar(255) null \n\t\t,`attributedescription` varchar(255) null\t\t\t\n\t\t, primary key(`product_attribute_mapping_id`)\n\t);\t\t\n\nCREATE TABLE if not exists `lightningimport_temp` (\n`import_id` bigint(20) NOT NULL AUTO_INCREMENT,\n`PostMeta_Sku` varchar(255) NOT NULL,\n`PostTitle` text,\n`PostContent` longtext,\n`PostExcerpt` text,\n`PostContentFiltered` longtext,\n`PostMeta_RegularPrice` varchar(255) DEFAULT NULL,\n`PostMeta_SalePrice` varchar(255) DEFAULT NULL,\n`PostMeta_Weight` varchar(255) DEFAULT NULL,\n`PostMeta_Length` varchar(255) DEFAULT NULL,\n`PostMeta_Width` varchar(255) DEFAULT NULL,\n`PostMeta_Height` varchar(255) DEFAULT NULL,\n`PostMeta_Price` varchar(255) DEFAULT NULL,\n`PostMeta_Stock` varchar(255) DEFAULT NULL,\n`PostMeta_Image` varchar(255) DEFAULT NULL,\n`RequestBatchId` varchar(255) DEFAULT NULL,\nPRIMARY KEY (`import_id`),\nKEY `PostMeta_Sku` (`PostMeta_Sku`)\n) ENGINE=InnoDB AUTO_INCREMENT=397 DEFAULT CHARSET=latin1;\n\nCREATE TABLE if not exists `lightningimport_sku` (\n`sku` varchar(255) NOT NULL,\n`post_id` bigint(20) NOT NULL,\n`image` varchar(255) DEFAULT NULL,\nPRIMARY KEY (`sku`),\nUNIQUE KEY `post_id` (`post_id`),\nKEY `image` (`image`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\t\n\t\n\tif _delete_existing_tables = 1 then\t\t\n\t\t/*Populate the attribute mapping with the column names from the product attributes table*/\n\t\tinsert lightningimport_product_attribute_mapping(\n\t\t\tcolumnname\n\t\t\t,columnorder\n\t\t)\n\t\tselect concat('f',cast(option_id as char)),option_id FROM wp_options\n\t\tWHERE option_id <= 8;\n\tend if;\n\nend;</p>\n<p>Queries made or created this session were:</p>\n<ol>\n<li>Executing: BEGIN | (no parameters)</li>\n<li>Executing: ROLLBACK | (no parameters)</li>\n</ol>\n</div>\n<div style=\"clear:both;margin-bottom:2px;border:red dotted thin;\" class=\"error_message\" style=\"border-bottom:dotted blue thin;\">\nError occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown create type: procedure.\n</div>\n<p>Backtrace:</p>\n<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()\n#1 /wordpress/wp-content/plugins/lightning-import/lightningimport_setup.php(45): WP_SQLite_DB->query('create procedur...')\n#2 /wordpress/wp-includes/class-wp-hook.php(324): lightningimport_plugin_activation(false)\n#3 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)\n#4 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)\n#5 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_lightn...', false)\n#6 /internal/eval.php(20): activate_plugin('lightning-impor...')\n#7 {main}</pre>\n for query create procedure lightningimport_create_db_objects (in _delete_existing_tables bit(1))\nbegin\n\t\n\tif _delete_existing_tables = 1 then\t\t\n\t\tdrop table if exists lightningimport_product_attributes;      \n\t\tdrop table if exists lightningimport_product_attribute_mapping; \t\t\n\tend if;    \n\t\n    /*Holds unique combinations of product attribute values for searching*/\n\tcreate table if not exists `lightningimport_product_attributes` (\n\t\t`product_attribute_id` bigint not null auto_increment\t\n\t\t,`post_id` bigint null\n\t\t,`sku` varchar(100) not null\n\t\t,`f1` varchar(100) null\n        ,`f2` varchar(100) null\n        ,`f3` varchar(100) null\n\t\t,`f4` varchar(100) null\n\t\t,`f5` varchar(100) null\n\t\t,`f6` varchar(100) null\n\t\t,`f7` varchar(100) null\n\t\t,`f8` varchar(100) null\n\t\t, primary key(`product_attribute_id`)\t\t\n\t\t,index(`sku`)\n\t\t,index(`post_id`)\n\t\t,UNIQUE KEY (`sku`(15),`f1`(10), `f2`(10), `f3`(10), `f4`(10))\n\t);\n\t\n\t/*Holds names for product attribute columns to allow for dynamic naming of searchable columns*/\t\n\tcreate table if not exists `lightningimport_product_attribute_mapping` (\n\t\t`product_attribute_mapping_id` bigint not null auto_increment\t\t\n\t\t,`columnname` varchar(255) not null\n\t\t,`columnorder` bigint not null\n        ,`attributename` varchar(255) null \n\t\t,`attributedescription` varchar(255) null\t\t\t\n\t\t, primary key(`product_attribute_mapping_id`)\n\t);\t\t\n\nCREATE TABLE if not exists `lightningimport_temp` (\n`import_id` bigint(20) NOT NULL AUTO_INCREMENT,\n`PostMeta_Sku` varchar(255) NOT NULL,\n`PostTitle` text,\n`PostContent` longtext,\n`PostExcerpt` text,\n`PostContentFiltered` longtext,\n`PostMeta_RegularPrice` varchar(255) DEFAULT NULL,\n`PostMeta_SalePrice` varchar(255) DEFAULT NULL,\n`PostMeta_Weight` varchar(255) DEFAULT NULL,\n`PostMeta_Length` varchar(255) DEFAULT NULL,\n`PostMeta_Width` varchar(255) DEFAULT NULL,\n`PostMeta_Height` varchar(255) DEFAULT NULL,\n`PostMeta_Price` varchar(255) DEFAULT NULL,\n`PostMeta_Stock` varchar(255) DEFAULT NULL,\n`PostMeta_Image` varchar(255) DEFAULT NULL,\n`RequestBatchId` varchar(255) DEFAULT NULL,\nPRIMARY KEY (`import_id`),\nKEY `PostMeta_Sku` (`PostMeta_Sku`)\n) ENGINE=InnoDB AUTO_INCREMENT=397 DEFAULT CHARSET=latin1;\n\nCREATE TABLE if not exists `lightningimport_sku` (\n`sku` varchar(255) NOT NULL,\n`post_id` bigint(20) NOT NULL,\n`image` varchar(255) DEFAULT NULL,\nPRIMARY KEY (`sku`),\nUNIQUE KEY `post_id` (`post_id`),\nKEY `image` (`image`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\t\n\t\n\tif _delete_existing_tables = 1 then\t\t\n\t\t/*Populate the attribute mapping with the column names from the product attributes table*/\n\t\tinsert lightningimport_product_attribute_mapping(\n\t\t\tcolumnname\n\t\t\t,columnorder\n\t\t)\n\t\tselect concat('f',cast(option_id as char)),option_id FROM wp_options\n\t\tWHERE option_id <= 8;\n\tend if;\n\nend; made by activate_plugin, do_action('activate_lightning-import/lightningimport_setup.php'), WP_Hook->do_action, WP_Hook->apply_filters, lightningimport_plugin_activation, WP_SQLite_DB->query, WP_SQLite_DB->print_error\n\n    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n  [cause]: Error: Error when executing the blueprint step #1 ({\"step\":\"installPlugin\",\"pluginData\":{\"resource\":\"wordpress.org/plugins\",\"slug\":\"liingo-words\"},\"options\":{\"activate\":true}}) : Could not download \"https://downloads.wordpress.org/plugin/liingo-words.latest-stable.zip\".\n  \t\t\t\tCheck if the URL is correct and the server is reachable.\n  \t\t\t\tIf it is reachable, the server might be blocking the request.\n  \t\t\t\tCheck the browser console and network tabs for more information.\n  \n  \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n  \n  \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n  \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n  \t\t\t\tcross-origin file downloads. Learn more about CORS at\n  \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n  \n  \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n  \t\t\t\tHere's how to do that:\n  \n  \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n  \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n  \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n  \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n  \n  \t\t\t\tThe resulting URL should look like this:\n  \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n  \n  \t\t\t\tError:\n  \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/liingo-words.latest-stable.zip\"\n      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12449:19)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)\n      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)\n      at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n      at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n    [cause]: Error: Could not download \"https://downloads.wordpress.org/plugin/liingo-words.latest-stable.zip\".\n    \t\t\t\tCheck if the URL is correct and the server is reachable.\n    \t\t\t\tIf it is reachable, the server might be blocking the request.\n    \t\t\t\tCheck the browser console and network tabs for more information.\n    \n    \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n    \n    \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n    \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n    \t\t\t\tcross-origin file downloads. Learn more about CORS at\n    \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n    \n    \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n    \t\t\t\tHere's how to do that:\n    \n    \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n    \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n    \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n    \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n    \n    \t\t\t\tThe resulting URL should look like this:\n    \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n    \n    \t\t\t\tError:\n    \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/liingo-words.latest-stable.zip\"\n        at Ct.resolve (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:1472:13)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async _.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/util/index.js:45:14)\n  }\n}\n\n","log":"/logs/plugins/l/liingo-words/error.json"}
]
