file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237
        throw new Error(y, { cause: u });
              ^

Error: [10-May-2025 20:47:49 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>insert into wp_wmail_newsletter set `wmail_subject` = 'Sample Subject', `wmail_content` = 'This is sample mail content, Can add HTML content here.', `wmail_status` = 'YES', `wmail_date` = CURDATE()</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: insert into `wp_wmail_newsletter` set `wmail_subject` = 'Sample Subject' , `wmail_content` = 'This is sample mail content, Can add HTML content here.' , `wmail_status` = 'YES' , `wmail_date` = CURDATE ( ) | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 near "set": syntax error
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 'HY000', Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('insert into wp_...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('insert into wp_...')
#3 /wordpress/wp-includes/class-wpdb.php(3146): WP_SQLite_DB->query('insert into wp_...')
#4 /wordpress/wp-content/plugins/wp-email-newsletter/wpm_functions.php(106): wpdb->get_results('insert into wp_...')
#5 /wordpress/wp-includes/class-wp-hook.php(324): wmail_mail_activation(false)
#6 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#7 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#8 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wp-ema...', false)
#9 /internal/eval.php(20): activate_plugin('wp-email-newsle...')
#10 {main}</pre>
 for query insert into wp_wmail_newsletter set `wmail_subject` = 'Sample Subject', `wmail_content` = 'This is sample mail content, Can add HTML content here.', `wmail_status` = 'YES', `wmail_date` = CURDATE() made by activate_plugin, do_action('activate_wp-email-newsletter/wpm_functions.php'), WP_Hook->do_action, WP_Hook->apply_filters, wmail_mail_activation, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[10-May-2025 20:47:49 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>insert into wp_wmail_newsletter set `wmail_subject` = 'Sample HTML Mail', `wmail_content` = '<strong style="color: #990000"> Email newsletter</strong><p>Email newsletter plugin have option to send HTML Mails/Newsletters to registered user, Comment author, Subscriber and Users who contacted you. Sending email is much cheaper than most other forms of communication. Email marketing has proven very successful for those who do it right. This plugin is very useful those who need to send Newsletters to users who subscribed to your blogs.</p> <strong style="color: #990000">Advantage of this plugin</strong><ol> <li>No coding knowledge required to setup this plugin.</li> <li>Very easy installation and setup.</li><li>Option to send email newsletter to registered user.</li> <li>Option to setup email subscription box and option to send email newsletter to subscriber.</li> <li>Automatic welcome email to new subscriber.</li><li>Admin email notification for every new subscriber.</li> </ol><strong style="color: #990000"></strong><br>.', `wmail_status` = 'YES', `wmail_date` = CURDATE()</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: insert into `wp_wmail_newsletter` set `wmail_subject` = 'Sample HTML Mail' , `wmail_content` = '&lt;strong style=&quot;color: #990000&quot;&gt; Email newsletter&lt;/strong&gt;&lt;p&gt;Email newsletter plugin have option to send HTML Mails/Newsletters to registered user, Comment author, Subscriber and Users who contacted you. Sending email is much cheaper than most other forms of communication. Email marketing has proven very successful for those who do it right. This plugin is very useful those who need to send Newsletters to users who subscribed to your blogs.&lt;/p&gt; &lt;strong style=&quot;color: #990000&quot;&gt;Advantage of this plugin&lt;/strong&gt;&lt;ol&gt; &lt;li&gt;No coding knowledge required to setup this plugin.&lt;/li&gt; &lt;li&gt;Very easy installation and setup.&lt;/li&gt;&lt;li&gt;Option to send email newsletter to registered user.&lt;/li&gt; &lt;li&gt;Option to setup email subscription box and option to send email newsletter to subscriber.&lt;/li&gt; &lt;li&gt;Automatic welcome email to new subscriber.&lt;/li&gt;&lt;li&gt;Admin email notification for every new subscriber.&lt;/li&gt; &lt;/ol&gt;&lt;strong style=&quot;color: #990000&quot;&gt;&lt;/strong&gt;&lt;br&gt;.' , `wmail_status` = 'YES' , `wmail_date` = CURDATE ( ) | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
SQLSTATE[HY000]: General error: 1 near "set": syntax error
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(683): WP_SQLite_Driver->new_driver_exception('SQLSTATE[HY000]...', 'HY000', Object(PDOException))
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('insert into wp_...')
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('insert into wp_...')
#3 /wordpress/wp-includes/class-wpdb.php(3146): WP_SQLite_DB->query('insert into wp_...')
#4 /wordpress/wp-content/plugins/wp-email-newsletter/wpm_functions.php(122): wpdb->get_results('insert into wp_...')
#5 /wordpress/wp-includes/class-wp-hook.php(324): wmail_mail_activation(false)
#6 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#7 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#8 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wp-ema...', false)
#9 /internal/eval.php(20): activate_plugin('wp-email-newsle...')
#10 {main}</pre>
 for query insert into wp_wmail_newsletter set `wmail_subject` = 'Sample HTML Mail', `wmail_content` = '<strong style="color: #990000"> Email newsletter</strong><p>Email newsletter plugin have option to send HTML Mails/Newsletters to registered user, Comment author, Subscriber and Users who contacted you. Sending email is much cheaper than most other forms of communication. Email marketing has proven very successful for those who do it right. This plugin is very useful those who need to send Newsletters to users who subscribed to your blogs.</p> <strong style="color: #990000">Advantage of this plugin</strong><ol> <li>No coding knowledge required to setup this plugin.</li> <li>Very easy installation and setup.</li><li>Option to send email newsletter to registered user.</li> <li>Option to setup email subscription box and option to send email newsletter to subscriber.</li> <li>Automatic welcome email to new subscriber.</li><li>Admin email notification for every new subscriber.</li> </ol><strong style="color: #990000"></strong><br>.', `wmail_status` = 'YES', `wmail_date` = CURDATE() made by activate_plugin, do_action('activate_wp-email-newsletter/wpm_functions.php'), WP_Hook->do_action, WP_Hook->apply_filters, wmail_mail_activation, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[10-May-2025 20:47:49 UTC] PHP Fatal error:  Uncaught Error: Undefined constant "mail_plugin_url" in /wordpress/wp-content/plugins/wp-email-newsletter/wpm_functions.php:135
Stack trace:
#0 /wordpress/wp-includes/class-wp-hook.php(324): wmail_mail_activation(false)
#1 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#2 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#3 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wp-ema...', false)
#4 /internal/eval.php(20): activate_plugin('wp-email-newsle...')
#5 {main}
  thrown in /wordpress/wp-content/plugins/wp-email-newsletter/wpm_functions.php on line 135
[10-May-2025 20:47:57 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>insert into wp_wmail_newsletter set `wmail_subject` = 'Sample Subject', `wmail_content` = 'This is sample mail content, Can add HTML content here.', `wmail_status` = 'YES', `wmail_date` = CURDATE()</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: insert into wp_wmail_newsletter set `wmail_subject` = :param0 , `wmail_content` = :param1 , `wmail_status` = :param2 , `wmail_date` = CURDATE() | parameters: Sample Subject, This is sample mail content, Can add HTML content here., YES</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[HY000]: General error: 1 near "set": syntax error.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-includes/class-wpdb.php(3146): WP_SQLite_DB->query('insert into wp_...')
#2 /wordpress/wp-content/plugins/wp-email-newsletter/wpm_functions.php(106): wpdb->get_results('insert into wp_...')
#3 /wordpress/wp-includes/class-wp-hook.php(324): wmail_mail_activation(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wp-ema...', false)
#7 /internal/eval.php(20): activate_plugin('wp-email-newsle...')
#8 {main}</pre>
 for query insert into wp_wmail_newsletter set `wmail_subject` = 'Sample Subject', `wmail_content` = 'This is sample mail content, Can add HTML content here.', `wmail_status` = 'YES', `wmail_date` = CURDATE() made by activate_plugin, do_action('activate_wp-email-newsletter/wpm_functions.php'), WP_Hook->do_action, WP_Hook->apply_filters, wmail_mail_activation, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[10-May-2025 20:47:57 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>insert into wp_wmail_newsletter set `wmail_subject` = 'Sample HTML Mail', `wmail_content` = '<strong style="color: #990000"> Email newsletter</strong><p>Email newsletter plugin have option to send HTML Mails/Newsletters to registered user, Comment author, Subscriber and Users who contacted you. Sending email is much cheaper than most other forms of communication. Email marketing has proven very successful for those who do it right. This plugin is very useful those who need to send Newsletters to users who subscribed to your blogs.</p> <strong style="color: #990000">Advantage of this plugin</strong><ol> <li>No coding knowledge required to setup this plugin.</li> <li>Very easy installation and setup.</li><li>Option to send email newsletter to registered user.</li> <li>Option to setup email subscription box and option to send email newsletter to subscriber.</li> <li>Automatic welcome email to new subscriber.</li><li>Admin email notification for every new subscriber.</li> </ol><strong style="color: #990000"></strong><br>.', `wmail_status` = 'YES', `wmail_date` = CURDATE()</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: insert into wp_wmail_newsletter set `wmail_subject` = :param0 , `wmail_content` = :param1 , `wmail_status` = :param2 , `wmail_date` = CURDATE() | parameters: Sample HTML Mail, &lt;strong style=&quot;color: #990000&quot;&gt; Email newsletter&lt;/strong&gt;&lt;p&gt;Email newsletter plugin have option to send HTML Mails/Newsletters to registered user, Comment author, Subscriber and Users who contacted you. Sending email is much cheaper than most other forms of communication. Email marketing has proven very successful for those who do it right. This plugin is very useful those who need to send Newsletters to users who subscribed to your blogs.&lt;/p&gt; &lt;strong style=&quot;color: #990000&quot;&gt;Advantage of this plugin&lt;/strong&gt;&lt;ol&gt; &lt;li&gt;No coding knowledge required to setup this plugin.&lt;/li&gt; &lt;li&gt;Very easy installation and setup.&lt;/li&gt;&lt;li&gt;Option to send email newsletter to registered user.&lt;/li&gt; &lt;li&gt;Option to setup email subscription box and option to send email newsletter to subscriber.&lt;/li&gt; &lt;li&gt;Automatic welcome email to new subscriber.&lt;/li&gt;&lt;li&gt;Admin email notification for every new subscriber.&lt;/li&gt; &lt;/ol&gt;&lt;strong style=&quot;color: #990000&quot;&gt;&lt;/strong&gt;&lt;br&gt;., YES</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[HY000]: General error: 1 near "set": syntax error.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-includes/class-wpdb.php(3146): WP_SQLite_DB->query('insert into wp_...')
#2 /wordpress/wp-content/plugins/wp-email-newsletter/wpm_functions.php(122): wpdb->get_results('insert into wp_...')
#3 /wordpress/wp-includes/class-wp-hook.php(324): wmail_mail_activation(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wp-ema...', false)
#7 /internal/eval.php(20): activate_plugin('wp-email-newsle...')
#8 {main}</pre>
 for query insert into wp_wmail_newsletter set `wmail_subject` = 'Sample HTML Mail', `wmail_content` = '<strong style="color: #990000"> Email newsletter</strong><p>Email newsletter plugin have option to send HTML Mails/Newsletters to registered user, Comment author, Subscriber and Users who contacted you. Sending email is much cheaper than most other forms of communication. Email marketing has proven very successful for those who do it right. This plugin is very useful those who need to send Newsletters to users who subscribed to your blogs.</p> <strong style="color: #990000">Advantage of this plugin</strong><ol> <li>No coding knowledge required to setup this plugin.</li> <li>Very easy installation and setup.</li><li>Option to send email newsletter to registered user.</li> <li>Option to setup email subscription box and option to send email newsletter to subscriber.</li> <li>Automatic welcome email to new subscriber.</li><li>Admin email notification for every new subscriber.</li> </ol><strong style="color: #990000"></strong><br>.', `wmail_status` = 'YES', `wmail_date` = CURDATE() made by activate_plugin, do_action('activate_wp-email-newsletter/wpm_functions.php'), WP_Hook->do_action, WP_Hook->apply_filters, wmail_mail_activation, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[10-May-2025 20:47:57 UTC] PHP Fatal error:  Uncaught Error: Undefined constant "mail_plugin_url" in /wordpress/wp-content/plugins/wp-email-newsletter/wpm_functions.php:135
Stack trace:
#0 /wordpress/wp-includes/class-wp-hook.php(324): wmail_mail_activation(false)
#1 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#2 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#3 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wp-ema...', false)
#4 /internal/eval.php(20): activate_plugin('wp-email-newsle...')
#5 {main}
  thrown in /wordpress/wp-content/plugins/wp-email-newsletter/wpm_functions.php on line 135
[10-May-2025 20:48:05 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>insert into wp_wmail_newsletter set `wmail_subject` = 'Sample Subject', `wmail_content` = 'This is sample mail content, Can add HTML content here.', `wmail_status` = 'YES', `wmail_date` = CURDATE()</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: insert into wp_wmail_newsletter set `wmail_subject` = :param0 , `wmail_content` = :param1 , `wmail_status` = :param2 , `wmail_date` = CURDATE() | parameters: Sample Subject, This is sample mail content, Can add HTML content here., YES</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[HY000]: General error: 1 near "set": syntax error.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-includes/class-wpdb.php(3146): WP_SQLite_DB->query('insert into wp_...')
#2 /wordpress/wp-content/plugins/wp-email-newsletter/wpm_functions.php(106): wpdb->get_results('insert into wp_...')
#3 /wordpress/wp-includes/class-wp-hook.php(324): wmail_mail_activation(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wp-ema...', false)
#7 /internal/eval.php(20): activate_plugin('wp-email-newsle...')
#8 {main}</pre>
 for query insert into wp_wmail_newsletter set `wmail_subject` = 'Sample Subject', `wmail_content` = 'This is sample mail content, Can add HTML content here.', `wmail_status` = 'YES', `wmail_date` = CURDATE() made by activate_plugin, do_action('activate_wp-email-newsletter/wpm_functions.php'), WP_Hook->do_action, WP_Hook->apply_filters, wmail_mail_activation, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[10-May-2025 20:48:05 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>insert into wp_wmail_newsletter set `wmail_subject` = 'Sample HTML Mail', `wmail_content` = '<strong style="color: #990000"> Email newsletter</strong><p>Email newsletter plugin have option to send HTML Mails/Newsletters to registered user, Comment author, Subscriber and Users who contacted you. Sending email is much cheaper than most other forms of communication. Email marketing has proven very successful for those who do it right. This plugin is very useful those who need to send Newsletters to users who subscribed to your blogs.</p> <strong style="color: #990000">Advantage of this plugin</strong><ol> <li>No coding knowledge required to setup this plugin.</li> <li>Very easy installation and setup.</li><li>Option to send email newsletter to registered user.</li> <li>Option to setup email subscription box and option to send email newsletter to subscriber.</li> <li>Automatic welcome email to new subscriber.</li><li>Admin email notification for every new subscriber.</li> </ol><strong style="color: #990000"></strong><br>.', `wmail_status` = 'YES', `wmail_date` = CURDATE()</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: insert into wp_wmail_newsletter set `wmail_subject` = :param0 , `wmail_content` = :param1 , `wmail_status` = :param2 , `wmail_date` = CURDATE() | parameters: Sample HTML Mail, &lt;strong style=&quot;color: #990000&quot;&gt; Email newsletter&lt;/strong&gt;&lt;p&gt;Email newsletter plugin have option to send HTML Mails/Newsletters to registered user, Comment author, Subscriber and Users who contacted you. Sending email is much cheaper than most other forms of communication. Email marketing has proven very successful for those who do it right. This plugin is very useful those who need to send Newsletters to users who subscribed to your blogs.&lt;/p&gt; &lt;strong style=&quot;color: #990000&quot;&gt;Advantage of this plugin&lt;/strong&gt;&lt;ol&gt; &lt;li&gt;No coding knowledge required to setup this plugin.&lt;/li&gt; &lt;li&gt;Very easy installation and setup.&lt;/li&gt;&lt;li&gt;Option to send email newsletter to registered user.&lt;/li&gt; &lt;li&gt;Option to setup email subscription box and option to send email newsletter to subscriber.&lt;/li&gt; &lt;li&gt;Automatic welcome email to new subscriber.&lt;/li&gt;&lt;li&gt;Admin email notification for every new subscriber.&lt;/li&gt; &lt;/ol&gt;&lt;strong style=&quot;color: #990000&quot;&gt;&lt;/strong&gt;&lt;br&gt;., YES</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[HY000]: General error: 1 near "set": syntax error.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-includes/class-wpdb.php(3146): WP_SQLite_DB->query('insert into wp_...')
#2 /wordpress/wp-content/plugins/wp-email-newsletter/wpm_functions.php(122): wpdb->get_results('insert into wp_...')
#3 /wordpress/wp-includes/class-wp-hook.php(324): wmail_mail_activation(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wp-ema...', false)
#7 /internal/eval.php(20): activate_plugin('wp-email-newsle...')
#8 {main}</pre>
 for query insert into wp_wmail_newsletter set `wmail_subject` = 'Sample HTML Mail', `wmail_content` = '<strong style="color: #990000"> Email newsletter</strong><p>Email newsletter plugin have option to send HTML Mails/Newsletters to registered user, Comment author, Subscriber and Users who contacted you. Sending email is much cheaper than most other forms of communication. Email marketing has proven very successful for those who do it right. This plugin is very useful those who need to send Newsletters to users who subscribed to your blogs.</p> <strong style="color: #990000">Advantage of this plugin</strong><ol> <li>No coding knowledge required to setup this plugin.</li> <li>Very easy installation and setup.</li><li>Option to send email newsletter to registered user.</li> <li>Option to setup email subscription box and option to send email newsletter to subscriber.</li> <li>Automatic welcome email to new subscriber.</li><li>Admin email notification for every new subscriber.</li> </ol><strong style="color: #990000"></strong><br>.', `wmail_status` = 'YES', `wmail_date` = CURDATE() made by activate_plugin, do_action('activate_wp-email-newsletter/wpm_functions.php'), WP_Hook->do_action, WP_Hook->apply_filters, wmail_mail_activation, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[10-May-2025 20:48:05 UTC] PHP Fatal error:  Uncaught Error: Undefined constant "mail_plugin_url" in /wordpress/wp-content/plugins/wp-email-newsletter/wpm_functions.php:135
Stack trace:
#0 /wordpress/wp-includes/class-wp-hook.php(324): wmail_mail_activation(false)
#1 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#2 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#3 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wp-ema...', false)
#4 /internal/eval.php(20): activate_plugin('wp-email-newsle...')
#5 {main}
  thrown in /wordpress/wp-content/plugins/wp-email-newsletter/wpm_functions.php on line 135
[10-May-2025 20:49:40 UTC] PHP Deprecated:  Required parameter $filesizeInBytes follows optional parameter $unit in /wordpress/wp-content/plugins/wp-instantbackup/WP-InstantBackup.php on line 1158
[10-May-2025 20:49:41 UTC] PHP Deprecated:  Required parameter $filesizeInBytes follows optional parameter $unit in /wordpress/wp-content/plugins/wp-instantbackup/WP-InstantBackup.php on line 1158
[10-May-2025 20:49:49 UTC] PHP Deprecated:  Required parameter $filesizeInBytes follows optional parameter $unit in /wordpress/wp-content/plugins/wp-instantbackup/WP-InstantBackup.php on line 1158
[10-May-2025 20:49:50 UTC] PHP Deprecated:  Required parameter $filesizeInBytes follows optional parameter $unit in /wordpress/wp-content/plugins/wp-instantbackup/WP-InstantBackup.php on line 1158
[10-May-2025 20:49:58 UTC] PHP Deprecated:  Required parameter $filesizeInBytes follows optional parameter $unit in /wordpress/wp-content/plugins/wp-instantbackup/WP-InstantBackup.php on line 1158
[10-May-2025 20:49:59 UTC] PHP Deprecated:  Required parameter $filesizeInBytes follows optional parameter $unit in /wordpress/wp-content/plugins/wp-instantbackup/WP-InstantBackup.php on line 1158
[10-May-2025 20:54:14 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/wp-mobile-themes/wp-mobile-themes.php on line 15
[10-May-2025 20:54:14 UTC] PHP Deprecated:  Function get_current_theme is <strong>deprecated</strong> since version 3.4.0! Use wp_get_theme() instead. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:14 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/wp-mobile-themes/wp-mobile-themes.php on line 19
[10-May-2025 20:54:14 UTC] PHP Deprecated:  Function get_current_theme is <strong>deprecated</strong> since version 3.4.0! Use wp_get_theme() instead. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:14 UTC] PHP Deprecated:  Function load_plugin_textdomain was called with an argument that is <strong>deprecated</strong> since version 2.7.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:15 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/wp-mobile-themes/wp-mobile-themes.php on line 15
[10-May-2025 20:54:15 UTC] PHP Deprecated:  Function get_current_theme is <strong>deprecated</strong> since version 3.4.0! Use wp_get_theme() instead. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:15 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/wp-mobile-themes/wp-mobile-themes.php on line 19
[10-May-2025 20:54:15 UTC] PHP Deprecated:  Function get_current_theme is <strong>deprecated</strong> since version 3.4.0! Use wp_get_theme() instead. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:15 UTC] PHP Deprecated:  Function load_plugin_textdomain was called with an argument that is <strong>deprecated</strong> since version 2.7.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:22 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/wp-mobile-themes/wp-mobile-themes.php on line 15
[10-May-2025 20:54:22 UTC] PHP Deprecated:  Function get_current_theme is <strong>deprecated</strong> since version 3.4.0! Use wp_get_theme() instead. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:22 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/wp-mobile-themes/wp-mobile-themes.php on line 19
[10-May-2025 20:54:22 UTC] PHP Deprecated:  Function get_current_theme is <strong>deprecated</strong> since version 3.4.0! Use wp_get_theme() instead. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:22 UTC] PHP Deprecated:  Function load_plugin_textdomain was called with an argument that is <strong>deprecated</strong> since version 2.7.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:23 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/wp-mobile-themes/wp-mobile-themes.php on line 15
[10-May-2025 20:54:23 UTC] PHP Deprecated:  Function get_current_theme is <strong>deprecated</strong> since version 3.4.0! Use wp_get_theme() instead. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:23 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/wp-mobile-themes/wp-mobile-themes.php on line 19
[10-May-2025 20:54:23 UTC] PHP Deprecated:  Function get_current_theme is <strong>deprecated</strong> since version 3.4.0! Use wp_get_theme() instead. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:23 UTC] PHP Deprecated:  Function load_plugin_textdomain was called with an argument that is <strong>deprecated</strong> since version 2.7.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:31 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/wp-mobile-themes/wp-mobile-themes.php on line 15
[10-May-2025 20:54:31 UTC] PHP Deprecated:  Function get_current_theme is <strong>deprecated</strong> since version 3.4.0! Use wp_get_theme() instead. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:31 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/wp-mobile-themes/wp-mobile-themes.php on line 19
[10-May-2025 20:54:31 UTC] PHP Deprecated:  Function get_current_theme is <strong>deprecated</strong> since version 3.4.0! Use wp_get_theme() instead. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:31 UTC] PHP Deprecated:  Function load_plugin_textdomain was called with an argument that is <strong>deprecated</strong> since version 2.7.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:32 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/wp-mobile-themes/wp-mobile-themes.php on line 15
[10-May-2025 20:54:32 UTC] PHP Deprecated:  Function get_current_theme is <strong>deprecated</strong> since version 3.4.0! Use wp_get_theme() instead. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:32 UTC] PHP Warning:  Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/wp-mobile-themes/wp-mobile-themes.php on line 19
[10-May-2025 20:54:32 UTC] PHP Deprecated:  Function get_current_theme is <strong>deprecated</strong> since version 3.4.0! Use wp_get_theme() instead. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:54:32 UTC] PHP Deprecated:  Function load_plugin_textdomain was called with an argument that is <strong>deprecated</strong> since version 2.7.0 with no alternative available. in /wordpress/wp-includes/functions.php on line 6121
[10-May-2025 20:55:37 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>
            CREATE TRIGGER after_insert_blacklist_row
            AFTER INSERT ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by adding the sum of valid fields:
                UPDATE wp_options
                SET option_value = CAST(option_value AS UNSIGNED) + (
                    (CASE WHEN NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN 1 ELSE 0 END)
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
        </p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createTrigger"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(848): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('\n            CR...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('\n            CR...')
#4 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(266): WP_SQLite_DB->query('\n            CR...')
#5 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(350): WC_Blacklist_Manager_DB->create_trigger()
#6 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#10 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#11 {main}</pre>
 for query 
            CREATE TRIGGER after_insert_blacklist_row
            AFTER INSERT ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by adding the sum of valid fields:
                UPDATE wp_options
                SET option_value = CAST(option_value AS UNSIGNED) + (
                    (CASE WHEN NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN 1 ELSE 0 END)
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
         made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[10-May-2025 20:55:37 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>
            CREATE TRIGGER after_delete_blacklist_row
            AFTER DELETE ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by subtracting the sum of valid fields from the deleted row:
                UPDATE wp_options
                SET option_value = IF(
                    CAST(option_value AS UNSIGNED) >= (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    CAST(option_value AS UNSIGNED) - (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    0
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
        </p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createTrigger"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(848): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('\n            CR...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('\n            CR...')
#4 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(342): WP_SQLite_DB->query('\n            CR...')
#5 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(351): WC_Blacklist_Manager_DB->create_delete_trigger()
#6 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#10 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#11 {main}</pre>
 for query 
            CREATE TRIGGER after_delete_blacklist_row
            AFTER DELETE ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by subtracting the sum of valid fields from the deleted row:
                UPDATE wp_options
                SET option_value = IF(
                    CAST(option_value AS UNSIGNED) >= (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    CAST(option_value AS UNSIGNED) - (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    0
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
         made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_delete_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[10-May-2025 20:55:47 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>DROP TRIGGER IF EXISTS after_insert_blacklist_row</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown drop type: TRIGGER.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(214): WP_SQLite_DB->query('DROP TRIGGER IF...')
#2 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(350): WC_Blacklist_Manager_DB->create_trigger()
#3 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#7 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#8 {main}</pre>
 for query DROP TRIGGER IF EXISTS after_insert_blacklist_row made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[10-May-2025 20:55:48 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>
            CREATE TRIGGER after_insert_blacklist_row
            AFTER INSERT ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by adding the sum of valid fields:
                UPDATE wp_options
                SET option_value = CAST(option_value AS UNSIGNED) + (
                    (CASE WHEN NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN 1 ELSE 0 END)
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
        </p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown create type: TRIGGER.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(266): WP_SQLite_DB->query('\n            CR...')
#2 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(350): WC_Blacklist_Manager_DB->create_trigger()
#3 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#7 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#8 {main}</pre>
 for query 
            CREATE TRIGGER after_insert_blacklist_row
            AFTER INSERT ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by adding the sum of valid fields:
                UPDATE wp_options
                SET option_value = CAST(option_value AS UNSIGNED) + (
                    (CASE WHEN NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN 1 ELSE 0 END)
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
         made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[10-May-2025 20:55:48 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>DROP TRIGGER IF EXISTS after_delete_blacklist_row</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown drop type: TRIGGER.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(279): WP_SQLite_DB->query('DROP TRIGGER IF...')
#2 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(351): WC_Blacklist_Manager_DB->create_delete_trigger()
#3 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#7 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#8 {main}</pre>
 for query DROP TRIGGER IF EXISTS after_delete_blacklist_row made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_delete_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[10-May-2025 20:55:48 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>
            CREATE TRIGGER after_delete_blacklist_row
            AFTER DELETE ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by subtracting the sum of valid fields from the deleted row:
                UPDATE wp_options
                SET option_value = IF(
                    CAST(option_value AS UNSIGNED) >= (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    CAST(option_value AS UNSIGNED) - (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    0
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
        </p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown create type: TRIGGER.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(342): WP_SQLite_DB->query('\n            CR...')
#2 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(351): WC_Blacklist_Manager_DB->create_delete_trigger()
#3 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#7 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#8 {main}</pre>
 for query 
            CREATE TRIGGER after_delete_blacklist_row
            AFTER DELETE ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by subtracting the sum of valid fields from the deleted row:
                UPDATE wp_options
                SET option_value = IF(
                    CAST(option_value AS UNSIGNED) >= (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    CAST(option_value AS UNSIGNED) - (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    0
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
         made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_delete_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[10-May-2025 20:55:57 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>DROP TRIGGER IF EXISTS after_insert_blacklist_row</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown drop type: TRIGGER.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(214): WP_SQLite_DB->query('DROP TRIGGER IF...')
#2 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(350): WC_Blacklist_Manager_DB->create_trigger()
#3 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#7 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#8 {main}</pre>
 for query DROP TRIGGER IF EXISTS after_insert_blacklist_row made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[10-May-2025 20:55:57 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>
            CREATE TRIGGER after_insert_blacklist_row
            AFTER INSERT ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by adding the sum of valid fields:
                UPDATE wp_options
                SET option_value = CAST(option_value AS UNSIGNED) + (
                    (CASE WHEN NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN 1 ELSE 0 END)
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
        </p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown create type: TRIGGER.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(266): WP_SQLite_DB->query('\n            CR...')
#2 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(350): WC_Blacklist_Manager_DB->create_trigger()
#3 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#7 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#8 {main}</pre>
 for query 
            CREATE TRIGGER after_insert_blacklist_row
            AFTER INSERT ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by adding the sum of valid fields:
                UPDATE wp_options
                SET option_value = CAST(option_value AS UNSIGNED) + (
                    (CASE WHEN NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN 1 ELSE 0 END)
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
         made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[10-May-2025 20:55:57 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>DROP TRIGGER IF EXISTS after_delete_blacklist_row</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown drop type: TRIGGER.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(279): WP_SQLite_DB->query('DROP TRIGGER IF...')
#2 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(351): WC_Blacklist_Manager_DB->create_delete_trigger()
#3 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#7 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#8 {main}</pre>
 for query DROP TRIGGER IF EXISTS after_delete_blacklist_row made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_delete_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[10-May-2025 20:55:57 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>
            CREATE TRIGGER after_delete_blacklist_row
            AFTER DELETE ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by subtracting the sum of valid fields from the deleted row:
                UPDATE wp_options
                SET option_value = IF(
                    CAST(option_value AS UNSIGNED) >= (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    CAST(option_value AS UNSIGNED) - (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    0
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
        </p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown create type: TRIGGER.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(342): WP_SQLite_DB->query('\n            CR...')
#2 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(351): WC_Blacklist_Manager_DB->create_delete_trigger()
#3 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#7 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#8 {main}</pre>
 for query 
            CREATE TRIGGER after_delete_blacklist_row
            AFTER DELETE ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by subtracting the sum of valid fields from the deleted row:
                UPDATE wp_options
                SET option_value = IF(
                    CAST(option_value AS UNSIGNED) >= (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    CAST(option_value AS UNSIGNED) - (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    0
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
         made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_delete_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error

    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237:15)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)
    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {
  [cause]: Error: Error when executing the blueprint step #1 ({"step":"installPlugin","pluginData":{"resource":"wordpress.org/plugins","slug":"wp-profile"},"options":{"activate":true}}) : Could not download "https://downloads.wordpress.org/plugin/wp-profile.latest-stable.zip".
  				Check if the URL is correct and the server is reachable.
  				If it is reachable, the server might be blocking the request.
  				Check the browser console and network tabs for more information.
  
  				## Does the console show the error "No 'Access-Control-Allow-Origin' header"?
  
  				This means the server that hosts your file does not allow requests from other sites
  				(cross-origin requests, or CORS).	You need to move the asset to a server that allows
  				cross-origin file downloads. Learn more about CORS at
  				https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.
  
  				If your file is on GitHub, load it from "raw.githubusercontent.com".
  				Here's how to do that:
  
  				1. Start with the original GitHub URL of the file. For example:
  				https://github.com/username/repository/blob/branch/filename.
  				2. Replace "github.com" with "raw.githubusercontent.com".
  				3. Remove the "/blob/" part of the URL.
  
  				The resulting URL should look like this:
  				https://raw.githubusercontent.com/username/repository/branch/filename
  
  				Error:
  				Error: Could not download "https://downloads.wordpress.org/plugin/wp-profile.latest-stable.zip"
      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12449:19)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)
      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)
      at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)
      at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {
    [cause]: Error: Could not download "https://downloads.wordpress.org/plugin/wp-profile.latest-stable.zip".
    				Check if the URL is correct and the server is reachable.
    				If it is reachable, the server might be blocking the request.
    				Check the browser console and network tabs for more information.
    
    				## Does the console show the error "No 'Access-Control-Allow-Origin' header"?
    
    				This means the server that hosts your file does not allow requests from other sites
    				(cross-origin requests, or CORS).	You need to move the asset to a server that allows
    				cross-origin file downloads. Learn more about CORS at
    				https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.
    
    				If your file is on GitHub, load it from "raw.githubusercontent.com".
    				Here's how to do that:
    
    				1. Start with the original GitHub URL of the file. For example:
    				https://github.com/username/repository/blob/branch/filename.
    				2. Replace "github.com" with "raw.githubusercontent.com".
    				3. Remove the "/blob/" part of the URL.
    
    				The resulting URL should look like this:
    				https://raw.githubusercontent.com/username/repository/branch/filename
    
    				Error:
    				Error: Could not download "https://downloads.wordpress.org/plugin/wp-profile.latest-stable.zip"
        at Ct.resolve (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:1472:13)
        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
        at async _.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/util/index.js:45:14)
  }
}

Node.js v23.11.0
