file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237
        throw new Error(y, { cause: u });
              ^

Error: [02-Jun-2025 13:41:15 UTC] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163
Stack trace:
#0 /wordpress/wp-includes/class-wp-widget-factory.php(62): WP_Widget->__construct()
#1 /wordpress/wp-includes/widgets.php(123): WP_Widget_Factory->register('NR_Widget_Month...')
#2 /wordpress/wp-content/plugins/wp-month-calendar/wp-month-calendar.php(235): register_widget('NR_Widget_Month...')
#3 /wordpress/wp-includes/class-wp-hook.php(324): nr_widget_init_action('')
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')
#7 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')
#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#10 /wordpress/wp-settings.php(727): do_action('init')
#11 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#12 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#13 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#14 {main}
  thrown in /wordpress/wp-includes/class-wp-widget.php on line 163
[02-Jun-2025 13:41:24 UTC] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163
Stack trace:
#0 /wordpress/wp-includes/class-wp-widget-factory.php(62): WP_Widget->__construct()
#1 /wordpress/wp-includes/widgets.php(123): WP_Widget_Factory->register('NR_Widget_Month...')
#2 /wordpress/wp-content/plugins/wp-month-calendar/wp-month-calendar.php(235): register_widget('NR_Widget_Month...')
#3 /wordpress/wp-includes/class-wp-hook.php(324): nr_widget_init_action('')
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')
#7 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')
#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#10 /wordpress/wp-settings.php(727): do_action('init')
#11 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#12 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#13 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#14 {main}
  thrown in /wordpress/wp-includes/class-wp-widget.php on line 163
[02-Jun-2025 13:41:32 UTC] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function WP_Widget::__construct(), 0 passed in /wordpress/wp-includes/class-wp-widget-factory.php on line 62 and at least 2 expected in /wordpress/wp-includes/class-wp-widget.php:163
Stack trace:
#0 /wordpress/wp-includes/class-wp-widget-factory.php(62): WP_Widget->__construct()
#1 /wordpress/wp-includes/widgets.php(123): WP_Widget_Factory->register('NR_Widget_Month...')
#2 /wordpress/wp-content/plugins/wp-month-calendar/wp-month-calendar.php(235): register_widget('NR_Widget_Month...')
#3 /wordpress/wp-includes/class-wp-hook.php(324): nr_widget_init_action('')
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-includes/widgets.php(1870): do_action('widgets_init')
#7 /wordpress/wp-includes/class-wp-hook.php(324): wp_widgets_init('')
#8 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters(NULL, Array)
#9 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#10 /wordpress/wp-settings.php(727): do_action('init')
#11 /wordpress/wp-config.php(102): require_once('/wordpress/wp-s...')
#12 /wordpress/wp-load.php(50): require_once('/wordpress/wp-c...')
#13 /internal/eval.php(3): require_once('/wordpress/wp-l...')
#14 {main}
  thrown in /wordpress/wp-includes/class-wp-widget.php on line 163
[02-Jun-2025 13:43:24 UTC] PHP Warning:  copy(/wordpress/.htaccess): Failed to open stream: No such file or directory in /wordpress/wp-content/plugins/wp-performance-score-booster/wp-performance-score-booster.php on line 368
[02-Jun-2025 13:43:32 UTC] PHP Warning:  copy(/wordpress/.htaccess): Failed to open stream: No such file or directory in /wordpress/wp-content/plugins/wp-performance-score-booster/wp-performance-score-booster.php on line 368
[02-Jun-2025 13:43:41 UTC] PHP Warning:  copy(/wordpress/.htaccess): Failed to open stream: No such file or directory in /wordpress/wp-content/plugins/wp-performance-score-booster/wp-performance-score-booster.php on line 368
[02-Jun-2025 13:43:51 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function create_function() in /wordpress/wp-content/plugins/wp-plugininstaller/wp-plugininstaller.php:263
Stack trace:
#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()
#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('wp-plugininstal...')
#2 /internal/eval.php(20): activate_plugin('wp-plugininstal...')
#3 {main}
  thrown in /wordpress/wp-content/plugins/wp-plugininstaller/wp-plugininstaller.php on line 263
[02-Jun-2025 13:43:59 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function create_function() in /wordpress/wp-content/plugins/wp-plugininstaller/wp-plugininstaller.php:263
Stack trace:
#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()
#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('wp-plugininstal...')
#2 /internal/eval.php(20): activate_plugin('wp-plugininstal...')
#3 {main}
  thrown in /wordpress/wp-content/plugins/wp-plugininstaller/wp-plugininstaller.php on line 263
[02-Jun-2025 13:44:06 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function create_function() in /wordpress/wp-content/plugins/wp-plugininstaller/wp-plugininstaller.php:263
Stack trace:
#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()
#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('wp-plugininstal...')
#2 /internal/eval.php(20): activate_plugin('wp-plugininstal...')
#3 {main}
  thrown in /wordpress/wp-content/plugins/wp-plugininstaller/wp-plugininstaller.php on line 263
[02-Jun-2025 13:46:24 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function create_function() in /wordpress/wp-content/plugins/wwwfap-disable-search/wwwfap-disable-search.php:36
Stack trace:
#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()
#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('wwwfap-disable-...')
#2 /internal/eval.php(20): activate_plugin('wwwfap-disable-...')
#3 {main}
  thrown in /wordpress/wp-content/plugins/wwwfap-disable-search/wwwfap-disable-search.php on line 36
[02-Jun-2025 13:46:31 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function create_function() in /wordpress/wp-content/plugins/wwwfap-disable-search/wwwfap-disable-search.php:36
Stack trace:
#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()
#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('wwwfap-disable-...')
#2 /internal/eval.php(20): activate_plugin('wwwfap-disable-...')
#3 {main}
  thrown in /wordpress/wp-content/plugins/wwwfap-disable-search/wwwfap-disable-search.php on line 36
[02-Jun-2025 13:46:39 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function create_function() in /wordpress/wp-content/plugins/wwwfap-disable-search/wwwfap-disable-search.php:36
Stack trace:
#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()
#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('wwwfap-disable-...')
#2 /internal/eval.php(20): activate_plugin('wwwfap-disable-...')
#3 {main}
  thrown in /wordpress/wp-content/plugins/wwwfap-disable-search/wwwfap-disable-search.php on line 36
[02-Jun-2025 13:47:48 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS `wp_wcfm_marketplace_orders` (
															`ID` bigint(20) NOT NULL AUTO_INCREMENT,
															`vendor_id` bigint(20) NOT NULL,
															`order_id` bigint(20) NOT NULL,
															`customer_id` bigint(20) NOT NULL,
															`payment_method` varchar(255) NOT NULL,
															`product_id` bigint(20) NOT NULL,
															`variation_id` bigint(20) NOT NULL DEFAULT 0,
															`quantity` bigint(20) NOT NULL DEFAULT 1,
															`product_price` varchar(255) NULL DEFAULT 0,
															`purchase_price` varchar(20) NOT NULL DEFAULT 0,
															`item_id` bigint(20) NOT NULL,
															`item_type` varchar(255) NULL,
															`item_sub_total` varchar(255) NULL DEFAULT 0,
															`item_total` varchar(255) NULL DEFAULT 0,
															`shipping` varchar(255) NOT NULL DEFAULT 0,
															`tax` varchar(255) NOT NULL DEFAULT 0,
															`shipping_tax_amount` varchar(255) NOT NULL DEFAULT 0,
															`commission_amount` varchar(255) NOT NULL DEFAULT 0,
															`discount_amount` varchar(255) NOT NULL DEFAULT 0,
															`discount_type` varchar(255) NOT NULL,
															`other_amount` varchar(255) NOT NULL DEFAULT 0,
															`other_amount_type` varchar(255) NOT NULL,
															`withdrawal_id` bigint(20) NOT NULL DEFAULT 0,
															`refunded_id` bigint(20) NOT NULL DEFAULT 0,
															`refunded_amount` varchar(255) NOT NULL DEFAULT 0,
															`withdraw_charges` varchar(255) NOT NULL DEFAULT 0,
															`total_commission` varchar(255) NOT NULL DEFAULT 0,
															`order_status` varchar(255) NOT NULL,
															`shipping_status` varchar(255) NOT NULL DEFAULT 'pending',
															`commission_status` varchar(100) NOT NULL DEFAULT 'pending',
															`withdraw_status` varchar(100) NOT NULL DEFAULT 'pending',
															`refund_status` varchar(100) NOT NULL DEFAULT 'pending',
															`is_refunded` tinyint(1) NOT NULL default 0,
															`is_partially_refunded` tinyint(1) NOT NULL default 0,
															`is_withdrawable` tinyint(1) NOT NULL default 0,
															`is_auto_withdrawal` tinyint(1) NOT NULL default 0,
															`is_trashed` tinyint(1) NOT NULL default 0,			
															`commission_paid_date` timestamp NULL,
															`created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,				
															PRIMARY KEY (`ID`),
															CONSTRAINT marketplace_orders UNIQUE (order_id, vendor_id, item_id)
															) ;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, ID, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, vendor_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, order_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, customer_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, payment_method, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, product_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, variation_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, quantity, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, product_price, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, purchase_price, varchar(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, item_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, item_type, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, item_sub_total, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, item_total, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, shipping, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, tax, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, shipping_tax_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, commission_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, discount_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, discount_type, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, other_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, other_amount_type, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, withdrawal_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, refunded_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, refunded_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, withdraw_charges, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, total_commission, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, order_status, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, shipping_status, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, commission_status, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, withdraw_status, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, refund_status, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, is_refunded, tinyint(1)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, is_partially_refunded, tinyint(1)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, is_withdrawable, tinyint(1)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, is_auto_withdrawal, tinyint(1)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, is_trashed, tinyint(1)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, commission_paid_date, timestamp</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, created, timestamp</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_wcfm_marketplace_orders&quot; (
&quot;ID&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;vendor_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;order_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;customer_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;payment_method&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;product_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;variation_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;quantity&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 1,
&quot;product_price&quot; text DEFAULT 0 COLLATE NOCASE,
&quot;purchase_price&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;item_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;item_type&quot; text COLLATE NOCASE,
&quot;item_sub_total&quot; text DEFAULT 0 COLLATE NOCASE,
&quot;item_total&quot; text DEFAULT 0 COLLATE NOCASE,
&quot;shipping&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;tax&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;shipping_tax_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;commission_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;discount_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;discount_type&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;other_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;other_amount_type&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;withdrawal_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;refunded_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;refunded_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;withdraw_charges&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;total_commission&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;order_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;shipping_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 'pending' COLLATE NOCASE,
&quot;commission_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 'pending' COLLATE NOCASE,
&quot;withdraw_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 'pending' COLLATE NOCASE,
&quot;refund_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 'pending' COLLATE NOCASE,
&quot;is_refunded&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;is_partially_refunded&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;is_withdrawable&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;is_auto_withdrawal&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;is_trashed&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;commission_paid_date&quot; text COLLATE NOCASE,
&quot;created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT CURRENT_TIMESTAMP COLLATE NOCASE) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_wcfm_marketplace_orders__&quot; ON &quot;wp_wcfm_marketplace_orders&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, wp_wcfm_marketplace_orders__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-multivendor-marketplace-migration/helpers/class-wcfmmg-install.php(271): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/wc-multivendor-marketplace-migration/helpers/class-wcfmmg-install.php(21): WCFMmg_Install->wcfmmg_create_tables()
#3 /wordpress/wp-content/plugins/wc-multivendor-marketplace-migration/core/class-wcfmmg.php(135): WCFMmg_Install->__construct()
#4 /wordpress/wp-includes/class-wp-hook.php(324): WCFMmg::activate_wcfmmg(false)
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-mul...', false)
#8 /internal/eval.php(20): activate_plugin('wc-multivendor-...')
#9 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS `wp_wcfm_marketplace_orders` (
															`ID` bigint(20) NOT NULL AUTO_INCREMENT,
															`vendor_id` bigint(20) NOT NULL,
															`order_id` bigint(20) NOT NULL,
															`customer_id` bigint(20) NOT NULL,
															`payment_method` varchar(255) NOT NULL,
															`product_id` bigint(20) NOT NULL,
															`variation_id` bigint(20) NOT NULL DEFAULT 0,
															`quantity` bigint(20) NOT NULL DEFAULT 1,
															`product_price` varchar(255) NULL DEFAULT 0,
															`purchase_price` varchar(20) NOT NULL DEFAULT 0,
															`item_id` bigint(20) NOT NULL,
															`item_type` varchar(255) NULL,
															`item_sub_total` varchar(255) NULL DEFAULT 0,
															`item_total` varchar(255) NULL DEFAULT 0,
															`shipping` varchar(255) NOT NULL DEFAULT 0,
															`tax` varchar(255) NOT NULL DEFAULT 0,
															`shipping_tax_amount` varchar(255) NOT NULL DEFAULT 0,
															`commission_amount` varchar(255) NOT NULL DEFAULT 0,
															`discount_amount` varchar(255) NOT NULL DEFAULT 0,
															`discount_type` varchar(255) NOT NULL,
															`other_amount` varchar(255) NOT NULL DEFAULT 0,
															`other_amount_type` varchar(255) NOT NULL,
															`withdrawal_id` bigint(20) NOT NULL DEFAULT 0,
															`refunded_id` bigint(20) NOT NULL DEFAULT 0,
															`refunded_amount` varchar(255) NOT NULL DEFAULT 0,
															`withdraw_charges` varchar(255) NOT NULL DEFAULT 0,
															`total_commission` varchar(255) NOT NULL DEFAULT 0,
															`order_status` varchar(255) NOT NULL,
															`shipping_status` varchar(255) NOT NULL DEFAULT 'pending',
															`commission_status` varchar(100) NOT NULL DEFAULT 'pending',
															`withdraw_status` varchar(100) NOT NULL DEFAULT 'pending',
															`refund_status` varchar(100) NOT NULL DEFAULT 'pending',
															`is_refunded` tinyint(1) NOT NULL default 0,
															`is_partially_refunded` tinyint(1) NOT NULL default 0,
															`is_withdrawable` tinyint(1) NOT NULL default 0,
															`is_auto_withdrawal` tinyint(1) NOT NULL default 0,
															`is_trashed` tinyint(1) NOT NULL default 0,			
															`commission_paid_date` timestamp NULL,
															`created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,				
															PRIMARY KEY (`ID`),
															CONSTRAINT marketplace_orders UNIQUE (order_id, vendor_id, item_id)
															) ; made by activate_plugin, do_action('activate_wc-multivendor-marketplace-migration/wc-multivendor-marketplace-migration.php'), WP_Hook->do_action, WP_Hook->apply_filters, WCFMmg::activate_wcfmmg, WCFMmg_Install->__construct, WCFMmg_Install->wcfmmg_create_tables, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[02-Jun-2025 13:47:48 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS `wp_wcfm_marketplace_product_multivendor` (
															`ID` bigint(20) NOT NULL AUTO_INCREMENT,
															`product_id` bigint(20) NOT NULL,
															`parent_product_id` bigint(20) NOT NULL,
															`vendor_id` bigint(20) NOT NULL,
															`product_price` varchar(100) NOT NULL default 0,
															`created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,				
															PRIMARY KEY (`ID`),
															CONSTRAINT marketplace_product_multivendor UNIQUE (product_id, parent_product_id, vendor_id)
															) ;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_product_multivendor, ID, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_product_multivendor, product_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_product_multivendor, parent_product_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_product_multivendor, vendor_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_product_multivendor, product_price, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_product_multivendor, created, timestamp</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_wcfm_marketplace_product_multivendor&quot; (
&quot;ID&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;product_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;parent_product_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;vendor_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;product_price&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT CURRENT_TIMESTAMP COLLATE NOCASE) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_wcfm_marketplace_product_multivendor__&quot; ON &quot;wp_wcfm_marketplace_product_multivendor&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_product_multivendor, wp_wcfm_marketplace_product_multivendor__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-multivendor-marketplace-migration/helpers/class-wcfmmg-install.php(271): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/wc-multivendor-marketplace-migration/helpers/class-wcfmmg-install.php(21): WCFMmg_Install->wcfmmg_create_tables()
#3 /wordpress/wp-content/plugins/wc-multivendor-marketplace-migration/core/class-wcfmmg.php(135): WCFMmg_Install->__construct()
#4 /wordpress/wp-includes/class-wp-hook.php(324): WCFMmg::activate_wcfmmg(false)
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-mul...', false)
#8 /internal/eval.php(20): activate_plugin('wc-multivendor-...')
#9 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS `wp_wcfm_marketplace_product_multivendor` (
															`ID` bigint(20) NOT NULL AUTO_INCREMENT,
															`product_id` bigint(20) NOT NULL,
															`parent_product_id` bigint(20) NOT NULL,
															`vendor_id` bigint(20) NOT NULL,
															`product_price` varchar(100) NOT NULL default 0,
															`created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,				
															PRIMARY KEY (`ID`),
															CONSTRAINT marketplace_product_multivendor UNIQUE (product_id, parent_product_id, vendor_id)
															) ; made by activate_plugin, do_action('activate_wc-multivendor-marketplace-migration/wc-multivendor-marketplace-migration.php'), WP_Hook->do_action, WP_Hook->apply_filters, WCFMmg::activate_wcfmmg, WCFMmg_Install->__construct, WCFMmg_Install->wcfmmg_create_tables, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[02-Jun-2025 13:47:57 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS `wp_wcfm_marketplace_orders` (
															`ID` bigint(20) NOT NULL AUTO_INCREMENT,
															`vendor_id` bigint(20) NOT NULL,
															`order_id` bigint(20) NOT NULL,
															`customer_id` bigint(20) NOT NULL,
															`payment_method` varchar(255) NOT NULL,
															`product_id` bigint(20) NOT NULL,
															`variation_id` bigint(20) NOT NULL DEFAULT 0,
															`quantity` bigint(20) NOT NULL DEFAULT 1,
															`product_price` varchar(255) NULL DEFAULT 0,
															`purchase_price` varchar(20) NOT NULL DEFAULT 0,
															`item_id` bigint(20) NOT NULL,
															`item_type` varchar(255) NULL,
															`item_sub_total` varchar(255) NULL DEFAULT 0,
															`item_total` varchar(255) NULL DEFAULT 0,
															`shipping` varchar(255) NOT NULL DEFAULT 0,
															`tax` varchar(255) NOT NULL DEFAULT 0,
															`shipping_tax_amount` varchar(255) NOT NULL DEFAULT 0,
															`commission_amount` varchar(255) NOT NULL DEFAULT 0,
															`discount_amount` varchar(255) NOT NULL DEFAULT 0,
															`discount_type` varchar(255) NOT NULL,
															`other_amount` varchar(255) NOT NULL DEFAULT 0,
															`other_amount_type` varchar(255) NOT NULL,
															`withdrawal_id` bigint(20) NOT NULL DEFAULT 0,
															`refunded_id` bigint(20) NOT NULL DEFAULT 0,
															`refunded_amount` varchar(255) NOT NULL DEFAULT 0,
															`withdraw_charges` varchar(255) NOT NULL DEFAULT 0,
															`total_commission` varchar(255) NOT NULL DEFAULT 0,
															`order_status` varchar(255) NOT NULL,
															`shipping_status` varchar(255) NOT NULL DEFAULT 'pending',
															`commission_status` varchar(100) NOT NULL DEFAULT 'pending',
															`withdraw_status` varchar(100) NOT NULL DEFAULT 'pending',
															`refund_status` varchar(100) NOT NULL DEFAULT 'pending',
															`is_refunded` tinyint(1) NOT NULL default 0,
															`is_partially_refunded` tinyint(1) NOT NULL default 0,
															`is_withdrawable` tinyint(1) NOT NULL default 0,
															`is_auto_withdrawal` tinyint(1) NOT NULL default 0,
															`is_trashed` tinyint(1) NOT NULL default 0,			
															`commission_paid_date` timestamp NULL,
															`created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,				
															PRIMARY KEY (`ID`),
															CONSTRAINT marketplace_orders UNIQUE (order_id, vendor_id, item_id)
															) ;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, ID, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, vendor_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, order_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, customer_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, payment_method, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, product_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, variation_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, quantity, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, product_price, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, purchase_price, varchar(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, item_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, item_type, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, item_sub_total, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, item_total, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, shipping, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, tax, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, shipping_tax_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, commission_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, discount_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, discount_type, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, other_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, other_amount_type, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, withdrawal_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, refunded_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, refunded_amount, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, withdraw_charges, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, total_commission, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, order_status, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, shipping_status, varchar(255)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, commission_status, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, withdraw_status, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, refund_status, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, is_refunded, tinyint(1)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, is_partially_refunded, tinyint(1)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, is_withdrawable, tinyint(1)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, is_auto_withdrawal, tinyint(1)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, is_trashed, tinyint(1)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, commission_paid_date, timestamp</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, created, timestamp</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_wcfm_marketplace_orders&quot; (
&quot;ID&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;vendor_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;order_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;customer_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;payment_method&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;product_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;variation_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;quantity&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 1,
&quot;product_price&quot; text DEFAULT 0 COLLATE NOCASE,
&quot;purchase_price&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;item_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;item_type&quot; text COLLATE NOCASE,
&quot;item_sub_total&quot; text DEFAULT 0 COLLATE NOCASE,
&quot;item_total&quot; text DEFAULT 0 COLLATE NOCASE,
&quot;shipping&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;tax&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;shipping_tax_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;commission_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;discount_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;discount_type&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;other_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;other_amount_type&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;withdrawal_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;refunded_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;refunded_amount&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;withdraw_charges&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;total_commission&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;order_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT '' COLLATE NOCASE,
&quot;shipping_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 'pending' COLLATE NOCASE,
&quot;commission_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 'pending' COLLATE NOCASE,
&quot;withdraw_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 'pending' COLLATE NOCASE,
&quot;refund_status&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 'pending' COLLATE NOCASE,
&quot;is_refunded&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;is_partially_refunded&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;is_withdrawable&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;is_auto_withdrawal&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;is_trashed&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;commission_paid_date&quot; text COLLATE NOCASE,
&quot;created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT CURRENT_TIMESTAMP COLLATE NOCASE) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_wcfm_marketplace_orders__&quot; ON &quot;wp_wcfm_marketplace_orders&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_orders, wp_wcfm_marketplace_orders__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-multivendor-marketplace-migration/helpers/class-wcfmmg-install.php(271): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/wc-multivendor-marketplace-migration/helpers/class-wcfmmg-install.php(21): WCFMmg_Install->wcfmmg_create_tables()
#3 /wordpress/wp-content/plugins/wc-multivendor-marketplace-migration/core/class-wcfmmg.php(135): WCFMmg_Install->__construct()
#4 /wordpress/wp-includes/class-wp-hook.php(324): WCFMmg::activate_wcfmmg(false)
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-mul...', false)
#8 /internal/eval.php(20): activate_plugin('wc-multivendor-...')
#9 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS `wp_wcfm_marketplace_orders` (
															`ID` bigint(20) NOT NULL AUTO_INCREMENT,
															`vendor_id` bigint(20) NOT NULL,
															`order_id` bigint(20) NOT NULL,
															`customer_id` bigint(20) NOT NULL,
															`payment_method` varchar(255) NOT NULL,
															`product_id` bigint(20) NOT NULL,
															`variation_id` bigint(20) NOT NULL DEFAULT 0,
															`quantity` bigint(20) NOT NULL DEFAULT 1,
															`product_price` varchar(255) NULL DEFAULT 0,
															`purchase_price` varchar(20) NOT NULL DEFAULT 0,
															`item_id` bigint(20) NOT NULL,
															`item_type` varchar(255) NULL,
															`item_sub_total` varchar(255) NULL DEFAULT 0,
															`item_total` varchar(255) NULL DEFAULT 0,
															`shipping` varchar(255) NOT NULL DEFAULT 0,
															`tax` varchar(255) NOT NULL DEFAULT 0,
															`shipping_tax_amount` varchar(255) NOT NULL DEFAULT 0,
															`commission_amount` varchar(255) NOT NULL DEFAULT 0,
															`discount_amount` varchar(255) NOT NULL DEFAULT 0,
															`discount_type` varchar(255) NOT NULL,
															`other_amount` varchar(255) NOT NULL DEFAULT 0,
															`other_amount_type` varchar(255) NOT NULL,
															`withdrawal_id` bigint(20) NOT NULL DEFAULT 0,
															`refunded_id` bigint(20) NOT NULL DEFAULT 0,
															`refunded_amount` varchar(255) NOT NULL DEFAULT 0,
															`withdraw_charges` varchar(255) NOT NULL DEFAULT 0,
															`total_commission` varchar(255) NOT NULL DEFAULT 0,
															`order_status` varchar(255) NOT NULL,
															`shipping_status` varchar(255) NOT NULL DEFAULT 'pending',
															`commission_status` varchar(100) NOT NULL DEFAULT 'pending',
															`withdraw_status` varchar(100) NOT NULL DEFAULT 'pending',
															`refund_status` varchar(100) NOT NULL DEFAULT 'pending',
															`is_refunded` tinyint(1) NOT NULL default 0,
															`is_partially_refunded` tinyint(1) NOT NULL default 0,
															`is_withdrawable` tinyint(1) NOT NULL default 0,
															`is_auto_withdrawal` tinyint(1) NOT NULL default 0,
															`is_trashed` tinyint(1) NOT NULL default 0,			
															`commission_paid_date` timestamp NULL,
															`created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,				
															PRIMARY KEY (`ID`),
															CONSTRAINT marketplace_orders UNIQUE (order_id, vendor_id, item_id)
															) ; made by activate_plugin, do_action('activate_wc-multivendor-marketplace-migration/wc-multivendor-marketplace-migration.php'), WP_Hook->do_action, WP_Hook->apply_filters, WCFMmg::activate_wcfmmg, WCFMmg_Install->__construct, WCFMmg_Install->wcfmmg_create_tables, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[02-Jun-2025 13:47:57 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>CREATE TABLE IF NOT EXISTS `wp_wcfm_marketplace_product_multivendor` (
															`ID` bigint(20) NOT NULL AUTO_INCREMENT,
															`product_id` bigint(20) NOT NULL,
															`parent_product_id` bigint(20) NOT NULL,
															`vendor_id` bigint(20) NOT NULL,
															`product_price` varchar(100) NOT NULL default 0,
															`created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,				
															PRIMARY KEY (`ID`),
															CONSTRAINT marketplace_product_multivendor UNIQUE (product_id, parent_product_id, vendor_id)
															) ;</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_product_multivendor, ID, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_product_multivendor, product_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_product_multivendor, parent_product_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_product_multivendor, vendor_id, bigint(20)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_product_multivendor, product_price, varchar(100)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_product_multivendor, created, timestamp</li>
<li>Executing: CREATE TABLE IF NOT EXISTS &quot;wp_wcfm_marketplace_product_multivendor&quot; (
&quot;ID&quot; integer PRIMARY KEY AUTOINCREMENT NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;product_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;parent_product_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;vendor_id&quot; integer NOT NULL ON CONFLICT REPLACE DEFAULT 0,
&quot;product_price&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT 0 COLLATE NOCASE,
&quot;created&quot; text NOT NULL ON CONFLICT REPLACE DEFAULT CURRENT_TIMESTAMP COLLATE NOCASE) | (no parameters)</li>
<li>Executing: CREATE  INDEX IF NOT EXISTS &quot;wp_wcfm_marketplace_product_multivendor__&quot; ON &quot;wp_wcfm_marketplace_product_multivendor&quot; (&quot;&quot;) | (no parameters)</li>
<li>Executing: INSERT INTO _mysql_data_types_cache (`table`, `column_or_index`, `mysql_type`)
				VALUES (:table, :column, :datatype)
				ON CONFLICT(`table`, `column_or_index`) DO UPDATE SET `mysql_type` = :datatype
			 | parameters: wp_wcfm_marketplace_product_multivendor, wp_wcfm_marketplace_product_multivendor__, </li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: SQLSTATE[23000]: Integrity constraint violation: 19 NOT NULL constraint failed: _mysql_data_types_cache.mysql_type.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-multivendor-marketplace-migration/helpers/class-wcfmmg-install.php(271): WP_SQLite_DB->query('CREATE TABLE IF...')
#2 /wordpress/wp-content/plugins/wc-multivendor-marketplace-migration/helpers/class-wcfmmg-install.php(21): WCFMmg_Install->wcfmmg_create_tables()
#3 /wordpress/wp-content/plugins/wc-multivendor-marketplace-migration/core/class-wcfmmg.php(135): WCFMmg_Install->__construct()
#4 /wordpress/wp-includes/class-wp-hook.php(324): WCFMmg::activate_wcfmmg(false)
#5 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#6 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#7 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-mul...', false)
#8 /internal/eval.php(20): activate_plugin('wc-multivendor-...')
#9 {main}</pre>
 for query CREATE TABLE IF NOT EXISTS `wp_wcfm_marketplace_product_multivendor` (
															`ID` bigint(20) NOT NULL AUTO_INCREMENT,
															`product_id` bigint(20) NOT NULL,
															`parent_product_id` bigint(20) NOT NULL,
															`vendor_id` bigint(20) NOT NULL,
															`product_price` varchar(100) NOT NULL default 0,
															`created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,				
															PRIMARY KEY (`ID`),
															CONSTRAINT marketplace_product_multivendor UNIQUE (product_id, parent_product_id, vendor_id)
															) ; made by activate_plugin, do_action('activate_wc-multivendor-marketplace-migration/wc-multivendor-marketplace-migration.php'), WP_Hook->do_action, WP_Hook->apply_filters, WCFMmg::activate_wcfmmg, WCFMmg_Install->__construct, WCFMmg_Install->wcfmmg_create_tables, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[02-Jun-2025 13:49:27 UTC] PHP Fatal error:  Uncaught Error: Call to undefined function create_function() in /wordpress/wp-content/plugins/wehewehe/index.php:315
Stack trace:
#0 /wordpress/wp-admin/includes/plugin.php(2387): include_once()
#1 /wordpress/wp-admin/includes/plugin.php(673): plugin_sandbox_scrape('wehewehe/index....')
#2 /internal/eval.php(20): activate_plugin('wehewehe/index...
