[
  {
    "message": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "level": "FATAL",
    "type": "PLAYGROUND",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "log": "/tmp/tmp.Rpm3DEPjgl"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:04 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:04 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:04 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:05 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:05 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:05 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:13 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:13 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:13 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:14 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:14 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:14 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:22 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:22 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:22 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:23 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:23 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:23 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:31:14 UTC] PHP Warning:  Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:31:24 UTC] PHP Warning:  Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:31:32 UTC] PHP Warning:  Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:15 UTC] PHP Fatal error:  Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:24 UTC] PHP Fatal error:  Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "level": "FATAL",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:32 UTC] PHP Fatal error:  Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:41 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:41 UTC] PHP Deprecated:  Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:42 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:49 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:49 UTC] PHP Deprecated:  Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:50 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:58 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:58 UTC] PHP Deprecated:  Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "ast-sqlite-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:58 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269\n\n    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n  [cause]: Error: Error when executing the blueprint step #5 ({\"step\":\"installPlugin\",\"pluginData\":{\"resource\":\"wordpress.org/plugins\",\"slug\":\"wp-digg\"},\"options\":{\"activate\":true}}) : Could not download \"https://downloads.wordpress.org/plugin/wp-digg.latest-stable.zip\".\n  \t\t\t\tCheck if the URL is correct and the server is reachable.\n  \t\t\t\tIf it is reachable, the server might be blocking the request.\n  \t\t\t\tCheck the browser console and network tabs for more information.\n  \n  \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n  \n  \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n  \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n  \t\t\t\tcross-origin file downloads. Learn more about CORS at\n  \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n  \n  \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n  \t\t\t\tHere's how to do that:\n  \n  \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n  \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n  \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n  \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n  \n  \t\t\t\tThe resulting URL should look like this:\n  \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n  \n  \t\t\t\tError:\n  \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/wp-digg.latest-stable.zip\"\n      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12449:19)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)\n      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)\n      at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n      at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n    [cause]: Error: Could not download \"https://downloads.wordpress.org/plugin/wp-digg.latest-stable.zip\".\n    \t\t\t\tCheck if the URL is correct and the server is reachable.\n    \t\t\t\tIf it is reachable, the server might be blocking the request.\n    \t\t\t\tCheck the browser console and network tabs for more information.\n    \n    \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n    \n    \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n    \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n    \t\t\t\tcross-origin file downloads. Learn more about CORS at\n    \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n    \n    \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n    \t\t\t\tHere's how to do that:\n    \n    \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n    \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n    \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n    \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n    \n    \t\t\t\tThe resulting URL should look like this:\n    \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n    \n    \t\t\t\tError:\n    \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/wp-digg.latest-stable.zip\"\n        at Ct.resolve (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:1472:13)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async _.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/util/index.js:45:14)\n  }\n}\n\n",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "level": "FATAL",
    "type": "PLAYGROUND",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "log": "/tmp/tmp.GLPuJxSJfQ"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:04 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:04 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:04 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:05 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:05 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:05 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:13 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:13 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:13 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:14 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:14 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:14 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:22 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:22 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:22 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:23 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:23 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:23 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:31:14 UTC] PHP Warning:  Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:31:24 UTC] PHP Warning:  Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:31:32 UTC] PHP Warning:  Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:15 UTC] PHP Fatal error:  Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:24 UTC] PHP Fatal error:  Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "level": "FATAL",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:32 UTC] PHP Fatal error:  Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:41 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:41 UTC] PHP Deprecated:  Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:42 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:49 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:49 UTC] PHP Deprecated:  Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:50 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:58 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:58 UTC] PHP Deprecated:  Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "asyncify-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:58 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269\n\n    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n  [cause]: Error: Error when executing the blueprint step #1 ({\"step\":\"installPlugin\",\"pluginData\":{\"resource\":\"wordpress.org/plugins\",\"slug\":\"wp-digg\"},\"options\":{\"activate\":true}}) : Could not download \"https://downloads.wordpress.org/plugin/wp-digg.latest-stable.zip\".\n  \t\t\t\tCheck if the URL is correct and the server is reachable.\n  \t\t\t\tIf it is reachable, the server might be blocking the request.\n  \t\t\t\tCheck the browser console and network tabs for more information.\n  \n  \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n  \n  \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n  \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n  \t\t\t\tcross-origin file downloads. Learn more about CORS at\n  \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n  \n  \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n  \t\t\t\tHere's how to do that:\n  \n  \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n  \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n  \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n  \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n  \n  \t\t\t\tThe resulting URL should look like this:\n  \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n  \n  \t\t\t\tError:\n  \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/wp-digg.latest-stable.zip\"\n      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12449:19)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)\n      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)\n      at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n      at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n    [cause]: Error: Could not download \"https://downloads.wordpress.org/plugin/wp-digg.latest-stable.zip\".\n    \t\t\t\tCheck if the URL is correct and the server is reachable.\n    \t\t\t\tIf it is reachable, the server might be blocking the request.\n    \t\t\t\tCheck the browser console and network tabs for more information.\n    \n    \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n    \n    \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n    \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n    \t\t\t\tcross-origin file downloads. Learn more about CORS at\n    \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n    \n    \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n    \t\t\t\tHere's how to do that:\n    \n    \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n    \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n    \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n    \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n    \n    \t\t\t\tThe resulting URL should look like this:\n    \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n    \n    \t\t\t\tError:\n    \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/wp-digg.latest-stable.zip\"\n        at Ct.resolve (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:1472:13)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async _.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/util/index.js:45:14)\n  }\n}\n\n",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "level": "FATAL",
    "type": "PLAYGROUND",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237\n        throw new Error(y, { cause: u });\n              ^\n",
    "log": "/tmp/tmp.MOgrA5EuW9"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:04 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:04 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:04 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:05 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:05 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:05 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:13 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:13 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:13 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:14 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:14 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:14 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:22 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:22 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:22 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:23 UTC] PHP Warning:  define(): Argument #3 ($case_insensitive) is ignored since declaration of case-insensitive constants is no longer supported in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 10",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:23 UTC] PHP Warning:  Private methods cannot be final as they are never overridden by other classes in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/Abstracts/Plugin.php on line 375",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "level": "NOTICE",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:30:23 UTC] PHP Notice:  spl_autoload_register(): Argument #2 ($do_throw) has been ignored, spl_autoload_register() will always throw in /wordpress/wp-content/plugins/wp-autoloader/lib/WPAutoloader/AutoLoad.php on line 250",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:31:14 UTC] PHP Warning:  Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:31:24 UTC] PHP Warning:  Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:31:32 UTC] PHP Warning:  Undefined array key \"action\" in /wordpress/wp-content/plugins/wprecovery/index.php on line 115",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:15 UTC] PHP Fatal error:  Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:24 UTC] PHP Fatal error:  Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "level": "FATAL",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:32 UTC] PHP Fatal error:  Declaration of bv48fv_data_settings::data($refresh = false) must be compatible with & bv48fv_base::data($data = null, $slug = null) in /wordpress/wp-content/plugins/wp-boilerplate/library/base/data/settings.php on line 215",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:41 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:41 UTC] PHP Deprecated:  Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:42 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:49 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:49 UTC] PHP Deprecated:  Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:50 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:58 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "level": "DEPRECATED",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:58 UTC] PHP Deprecated:  Function get_page_by_title is <strong>deprecated</strong> since version 6.2.0! Use WP_Query instead. in /wordpress/wp-includes/functions.php on line 6121",
    "log": "/logs/plugins/w/wp-digg/error.json"
  },
  {
    "message": "Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269",
    "level": "WARNING",
    "type": "PHP",
    "test": "jspi-boot",
    "plugin": "wp-digg",
    "details": "[29-Apr-2025 22:32:58 UTC] PHP Warning:  Undefined variable $user_id in /wordpress/wp-content/plugins/wp-client-file-share/index.php on line 269\n\n    at Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n    at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n  [cause]: Error: Error when executing the blueprint step #1 ({\"step\":\"installPlugin\",\"pluginData\":{\"resource\":\"wordpress.org/plugins\",\"slug\":\"wp-digg\"},\"options\":{\"activate\":true}}) : Could not download \"https://downloads.wordpress.org/plugin/wp-digg.latest-stable.zip\".\n  \t\t\t\tCheck if the URL is correct and the server is reachable.\n  \t\t\t\tIf it is reachable, the server might be blocking the request.\n  \t\t\t\tCheck the browser console and network tabs for more information.\n  \n  \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n  \n  \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n  \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n  \t\t\t\tcross-origin file downloads. Learn more about CORS at\n  \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n  \n  \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n  \t\t\t\tHere's how to do that:\n  \n  \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n  \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n  \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n  \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n  \n  \t\t\t\tThe resulting URL should look like this:\n  \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n  \n  \t\t\t\tError:\n  \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/wp-digg.latest-stable.zip\"\n      at Object.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12449:19)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async ms (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:12552:3)\n      at async Object.onBind (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:227:48)\n      at async V (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:64:10)\n      at async ja (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/cli.js:8161:12) {\n    [cause]: Error: Could not download \"https://downloads.wordpress.org/plugin/wp-digg.latest-stable.zip\".\n    \t\t\t\tCheck if the URL is correct and the server is reachable.\n    \t\t\t\tIf it is reachable, the server might be blocking the request.\n    \t\t\t\tCheck the browser console and network tabs for more information.\n    \n    \t\t\t\t## Does the console show the error \"No 'Access-Control-Allow-Origin' header\"?\n    \n    \t\t\t\tThis means the server that hosts your file does not allow requests from other sites\n    \t\t\t\t(cross-origin requests, or CORS).\tYou need to move the asset to a server that allows\n    \t\t\t\tcross-origin file downloads. Learn more about CORS at\n    \t\t\t\thttps://developer.mozilla.org/en-US/docs/Web/HTTP/CORS.\n    \n    \t\t\t\tIf your file is on GitHub, load it from \"raw.githubusercontent.com\".\n    \t\t\t\tHere's how to do that:\n    \n    \t\t\t\t1. Start with the original GitHub URL of the file. For example:\n    \t\t\t\thttps://github.com/username/repository/blob/branch/filename.\n    \t\t\t\t2. Replace \"github.com\" with \"raw.githubusercontent.com\".\n    \t\t\t\t3. Remove the \"/blob/\" part of the URL.\n    \n    \t\t\t\tThe resulting URL should look like this:\n    \t\t\t\thttps://raw.githubusercontent.com/username/repository/branch/filename\n    \n    \t\t\t\tError:\n    \t\t\t\tError: Could not download \"https://downloads.wordpress.org/plugin/wp-digg.latest-stable.zip\"\n        at Ct.resolve (file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/blueprints/index.js:1472:13)\n        at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n        at async _.run (file:///home/runner/work/playground-tester/playground-tester/node_modules/@php-wasm/util/index.js:45:14)\n  }\n}\n\n",
    "log": "/logs/plugins/w/wp-digg/error.json"
  }
]
