file:///home/runner/work/playground-tester/playground-tester/node_modules/@wp-playground/cli/index.js:237
        throw new Error(y, { cause: u });
              ^

Error: [01-Jun-2025 07:27:41 UTC] PHP Warning:  mkdir(): File exists in /wordpress/wp-content/plugins/wp-dump/wp-dump.php on line 73
[01-Jun-2025 07:27:49 UTC] PHP Warning:  mkdir(): File exists in /wordpress/wp-content/plugins/wp-dump/wp-dump.php on line 73
[01-Jun-2025 07:27:58 UTC] PHP Warning:  mkdir(): File exists in /wordpress/wp-content/plugins/wp-dump/wp-dump.php on line 73
[01-Jun-2025 07:30:09 UTC] E_DEPRECATED: Required parameter $dirpath follows optional parameter $required_size in /wordpress/wp-content/plugins/wps-backup/includes/data_actions/wpsc_class_data_management.php on line 397
[01-Jun-2025 07:30:09 UTC] E_DEPRECATED: Required parameter $filename follows optional parameter $required_size in /wordpress/wp-content/plugins/wps-backup/includes/data_actions/wpsc_class_data_management.php on line 397
[01-Jun-2025 07:30:10 UTC] E_DEPRECATED: Required parameter $dirpath follows optional parameter $required_size in /wordpress/wp-content/plugins/wps-backup/includes/data_actions/wpsc_class_data_management.php on line 397
[01-Jun-2025 07:30:10 UTC] E_DEPRECATED: Required parameter $filename follows optional parameter $required_size in /wordpress/wp-content/plugins/wps-backup/includes/data_actions/wpsc_class_data_management.php on line 397
[01-Jun-2025 07:30:18 UTC] E_DEPRECATED: Required parameter $dirpath follows optional parameter $required_size in /wordpress/wp-content/plugins/wps-backup/includes/data_actions/wpsc_class_data_management.php on line 397
[01-Jun-2025 07:30:18 UTC] E_DEPRECATED: Required parameter $filename follows optional parameter $required_size in /wordpress/wp-content/plugins/wps-backup/includes/data_actions/wpsc_class_data_management.php on line 397
[01-Jun-2025 07:30:18 UTC] E_DEPRECATED: Required parameter $dirpath follows optional parameter $required_size in /wordpress/wp-content/plugins/wps-backup/includes/data_actions/wpsc_class_data_management.php on line 397
[01-Jun-2025 07:30:18 UTC] E_DEPRECATED: Required parameter $filename follows optional parameter $required_size in /wordpress/wp-content/plugins/wps-backup/includes/data_actions/wpsc_class_data_management.php on line 397
[01-Jun-2025 07:30:26 UTC] E_DEPRECATED: Required parameter $dirpath follows optional parameter $required_size in /wordpress/wp-content/plugins/wps-backup/includes/data_actions/wpsc_class_data_management.php on line 397
[01-Jun-2025 07:30:26 UTC] E_DEPRECATED: Required parameter $filename follows optional parameter $required_size in /wordpress/wp-content/plugins/wps-backup/includes/data_actions/wpsc_class_data_management.php on line 397
[01-Jun-2025 07:30:27 UTC] E_DEPRECATED: Required parameter $dirpath follows optional parameter $required_size in /wordpress/wp-content/plugins/wps-backup/includes/data_actions/wpsc_class_data_management.php on line 397
[01-Jun-2025 07:30:27 UTC] E_DEPRECATED: Required parameter $filename follows optional parameter $required_size in /wordpress/wp-content/plugins/wps-backup/includes/data_actions/wpsc_class_data_management.php on line 397
[01-Jun-2025 07:33:18 UTC] E_USER_DEPRECATED: Function register_sidebar_widget is deprecated since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121
[01-Jun-2025 07:33:18 UTC] E_USER_DEPRECATED: Function register_widget_control is deprecated since version 2.8.0! Use wp_register_widget_control() instead. in /wordpress/wp-includes/functions.php on line 6121
[01-Jun-2025 07:33:27 UTC] E_USER_DEPRECATED: Function register_sidebar_widget is deprecated since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121
[01-Jun-2025 07:33:27 UTC] E_USER_DEPRECATED: Function register_widget_control is deprecated since version 2.8.0! Use wp_register_widget_control() instead. in /wordpress/wp-includes/functions.php on line 6121
[01-Jun-2025 07:33:36 UTC] E_USER_DEPRECATED: Function register_sidebar_widget is deprecated since version 2.8.0! Use wp_register_sidebar_widget() instead. in /wordpress/wp-includes/functions.php on line 6121
[01-Jun-2025 07:33:36 UTC] E_USER_DEPRECATED: Function register_widget_control is deprecated since version 2.8.0! Use wp_register_widget_control() instead. in /wordpress/wp-includes/functions.php on line 6121
[01-Jun-2025 07:34:10 UTC] E_WARNING: Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/watermark-reloaded/watermark-reloaded.php on line 466
[01-Jun-2025 07:34:10 UTC] E_WARNING: Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/watermark-reloaded/watermark-reloaded.php on line 467
[01-Jun-2025 07:34:19 UTC] E_WARNING: Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/watermark-reloaded/watermark-reloaded.php on line 466
[01-Jun-2025 07:34:19 UTC] E_WARNING: Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/watermark-reloaded/watermark-reloaded.php on line 467
[01-Jun-2025 07:34:28 UTC] E_WARNING: Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/watermark-reloaded/watermark-reloaded.php on line 466
[01-Jun-2025 07:34:28 UTC] E_WARNING: Trying to access array offset on value of type bool in /wordpress/wp-content/plugins/watermark-reloaded/watermark-reloaded.php on line 467
[01-Jun-2025 07:34:38 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>
            CREATE TRIGGER after_insert_blacklist_row
            AFTER INSERT ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by adding the sum of valid fields:
                UPDATE wp_options
                SET option_value = CAST(option_value AS UNSIGNED) + (
                    (CASE WHEN NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN 1 ELSE 0 END)
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
        </p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createTrigger"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('\n            CR...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('\n            CR...')
#4 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(266): WP_SQLite_DB->query('\n            CR...')
#5 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(350): WC_Blacklist_Manager_DB->create_trigger()
#6 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#10 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#11 {main}</pre>
 for query 
            CREATE TRIGGER after_insert_blacklist_row
            AFTER INSERT ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by adding the sum of valid fields:
                UPDATE wp_options
                SET option_value = CAST(option_value AS UNSIGNED) + (
                    (CASE WHEN NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN 1 ELSE 0 END)
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
         made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[01-Jun-2025 07:34:39 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>
            CREATE TRIGGER after_delete_blacklist_row
            AFTER DELETE ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by subtracting the sum of valid fields from the deleted row:
                UPDATE wp_options
                SET option_value = IF(
                    CAST(option_value AS UNSIGNED) >= (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    CAST(option_value AS UNSIGNED) - (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    0
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
        </p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN IMMEDIATE | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
MySQL query not supported. Cause: statement type: "createStatement" > "createTrigger"
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(887): WP_SQLite_Driver->new_not_supported_exception('statement type:...')
#1 /internal/shared/sqlite-database-integration/wp-includes/sqlite-ast/class-wp-sqlite-driver.php(669): WP_SQLite_Driver->execute_mysql_query(Object(WP_Parser_Node))
#2 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(491): WP_SQLite_Driver->query('\n            CR...')
#3 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(432): WP_SQLite_DB->_do_query('\n            CR...')
#4 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(342): WP_SQLite_DB->query('\n            CR...')
#5 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(351): WC_Blacklist_Manager_DB->create_delete_trigger()
#6 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#7 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#8 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#9 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#10 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#11 {main}</pre>
 for query 
            CREATE TRIGGER after_delete_blacklist_row
            AFTER DELETE ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by subtracting the sum of valid fields from the deleted row:
                UPDATE wp_options
                SET option_value = IF(
                    CAST(option_value AS UNSIGNED) >= (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    CAST(option_value AS UNSIGNED) - (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    0
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
         made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_delete_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[01-Jun-2025 07:34:48 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>DROP TRIGGER IF EXISTS after_insert_blacklist_row</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown drop type: TRIGGER.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(214): WP_SQLite_DB->query('DROP TRIGGER IF...')
#2 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(350): WC_Blacklist_Manager_DB->create_trigger()
#3 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#7 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#8 {main}</pre>
 for query DROP TRIGGER IF EXISTS after_insert_blacklist_row made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[01-Jun-2025 07:34:48 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>
            CREATE TRIGGER after_insert_blacklist_row
            AFTER INSERT ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by adding the sum of valid fields:
                UPDATE wp_options
                SET option_value = CAST(option_value AS UNSIGNED) + (
                    (CASE WHEN NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN 1 ELSE 0 END)
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
        </p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown create type: TRIGGER.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(266): WP_SQLite_DB->query('\n            CR...')
#2 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(350): WC_Blacklist_Manager_DB->create_trigger()
#3 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#7 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#8 {main}</pre>
 for query 
            CREATE TRIGGER after_insert_blacklist_row
            AFTER INSERT ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by adding the sum of valid fields:
                UPDATE wp_options
                SET option_value = CAST(option_value AS UNSIGNED) + (
                    (CASE WHEN NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN 1 ELSE 0 END)
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
         made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[01-Jun-2025 07:34:48 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>DROP TRIGGER IF EXISTS after_delete_blacklist_row</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown drop type: TRIGGER.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(279): WP_SQLite_DB->query('DROP TRIGGER IF...')
#2 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(351): WC_Blacklist_Manager_DB->create_delete_trigger()
#3 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#7 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#8 {main}</pre>
 for query DROP TRIGGER IF EXISTS after_delete_blacklist_row made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_delete_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[01-Jun-2025 07:34:48 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>
            CREATE TRIGGER after_delete_blacklist_row
            AFTER DELETE ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by subtracting the sum of valid fields from the deleted row:
                UPDATE wp_options
                SET option_value = IF(
                    CAST(option_value AS UNSIGNED) >= (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    CAST(option_value AS UNSIGNED) - (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    0
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
        </p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown create type: TRIGGER.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(342): WP_SQLite_DB->query('\n            CR...')
#2 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(351): WC_Blacklist_Manager_DB->create_delete_trigger()
#3 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#7 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#8 {main}</pre>
 for query 
            CREATE TRIGGER after_delete_blacklist_row
            AFTER DELETE ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by subtracting the sum of valid fields from the deleted row:
                UPDATE wp_options
                SET option_value = IF(
                    CAST(option_value AS UNSIGNED) >= (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    CAST(option_value AS UNSIGNED) - (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    0
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
         made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_delete_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[01-Jun-2025 07:34:57 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>DROP TRIGGER IF EXISTS after_insert_blacklist_row</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown drop type: TRIGGER.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(214): WP_SQLite_DB->query('DROP TRIGGER IF...')
#2 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(350): WC_Blacklist_Manager_DB->create_trigger()
#3 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#7 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#8 {main}</pre>
 for query DROP TRIGGER IF EXISTS after_insert_blacklist_row made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[01-Jun-2025 07:34:57 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>
            CREATE TRIGGER after_insert_blacklist_row
            AFTER INSERT ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by adding the sum of valid fields:
                UPDATE wp_options
                SET option_value = CAST(option_value AS UNSIGNED) + (
                    (CASE WHEN NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN 1 ELSE 0 END)
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
        </p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown create type: TRIGGER.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(266): WP_SQLite_DB->query('\n            CR...')
#2 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(350): WC_Blacklist_Manager_DB->create_trigger()
#3 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#7 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#8 {main}</pre>
 for query 
            CREATE TRIGGER after_insert_blacklist_row
            AFTER INSERT ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = CAST(option_value AS UNSIGNED) + 1
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by adding the sum of valid fields:
                UPDATE wp_options
                SET option_value = CAST(option_value AS UNSIGNED) + (
                    (CASE WHEN NEW.first_name IS NOT NULL AND TRIM(NEW.first_name) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.phone_number IS NOT NULL AND TRIM(NEW.phone_number) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.email_address IS NOT NULL AND TRIM(NEW.email_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.ip_address IS NOT NULL AND TRIM(NEW.ip_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.customer_address IS NOT NULL AND TRIM(NEW.customer_address) <> '' THEN 1 ELSE 0 END) +
                    (CASE WHEN NEW.domain IS NOT NULL AND TRIM(NEW.domain) <> '' THEN 1 ELSE 0 END)
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
         made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[01-Jun-2025 07:34:57 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>DROP TRIGGER IF EXISTS after_delete_blacklist_row</p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown drop type: TRIGGER.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(279): WP_SQLite_DB->query('DROP TRIGGER IF...')
#2 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(351): WC_Blacklist_Manager_DB->create_delete_trigger()
#3 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#7 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#8 {main}</pre>
 for query DROP TRIGGER IF EXISTS after_delete_blacklist_row made by activate_plugin, do_action('activate_wc-blacklist-manager/wc-blacklist-manager.php'), WP_Hook->do_action, WP_Hook->apply_filters, WC_Blacklist_Manager_DB->activate, WC_Blacklist_Manager_DB->create_delete_trigger, WP_SQLite_DB->query, WP_SQLite_DB->print_error
[01-Jun-2025 07:34:57 UTC] WordPress database error <div style="clear:both">&nbsp;</div>
<div class="queries" style="clear:both;margin-bottom:2px;border:red dotted thin;">
<p>MySQL query:</p>
<p>
            CREATE TRIGGER after_delete_blacklist_row
            AFTER DELETE ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by subtracting the sum of valid fields from the deleted row:
                UPDATE wp_options
                SET option_value = IF(
                    CAST(option_value AS UNSIGNED) >= (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    CAST(option_value AS UNSIGNED) - (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    0
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
        </p>
<p>Queries made or created this session were:</p>
<ol>
<li>Executing: BEGIN | (no parameters)</li>
<li>Executing: ROLLBACK | (no parameters)</li>
</ol>
</div>
<div style="clear:both;margin-bottom:2px;border:red dotted thin;" class="error_message" style="border-bottom:dotted blue thin;">
Error occurred at line 4117 in Function <code>handle_error</code>. Error message was: Unknown create type: TRIGGER.
</div>
<p>Backtrace:</p>
<pre>#0 /internal/shared/sqlite-database-integration/wp-includes/sqlite/class-wp-sqlite-db.php(287): WP_SQLite_Translator->get_error_message()
#1 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(342): WP_SQLite_DB->query('\n            CR...')
#2 /wordpress/wp-content/plugins/wc-blacklist-manager/inc/cores/yobm-wc-blacklist-manager-database.php(351): WC_Blacklist_Manager_DB->create_delete_trigger()
#3 /wordpress/wp-includes/class-wp-hook.php(324): WC_Blacklist_Manager_DB->activate(false)
#4 /wordpress/wp-includes/class-wp-hook.php(348): WP_Hook->apply_filters('', Array)
#5 /wordpress/wp-includes/plugin.php(517): WP_Hook->do_action(Array)
#6 /wordpress/wp-admin/includes/plugin.php(703): do_action('activate_wc-bla...', false)
#7 /internal/eval.php(20): activate_plugin('wc-blacklist-ma...')
#8 {main}</pre>
 for query 
            CREATE TRIGGER after_delete_blacklist_row
            AFTER DELETE ON wp_wc_blacklist
            FOR EACH ROW
            BEGIN
                -- Update individual counters:
                IF OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_name';
                END IF;
                IF OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_phone';
                END IF;
                IF OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_email';
                END IF;
                IF OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_ip';
                END IF;
                IF OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_address';
                END IF;
                IF OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN
                    UPDATE wp_options
                    SET option_value = IF(CAST(option_value AS UNSIGNED) > 0, CAST(option_value AS UNSIGNED) - 1, 0)
                    WHERE option_name = 'wc_blacklist_sum_domain';
                END IF;
                -- Update the total counter by subtracting the sum of valid fields from the deleted row:
                UPDATE wp_options
                SET option_value = IF(
                    CAST(option_value AS UNSIGNED) >= (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    CAST(option_value AS UNSIGNED) - (
                        (CASE WHEN OLD.first_name IS NOT NULL AND TRIM(OLD.first_name) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.phone_number IS NOT NULL AND TRIM(OLD.phone_number) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.email_address IS NOT NULL AND TRIM(OLD.email_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.ip_address IS NOT NULL AND TRIM(OLD.ip_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.customer_address IS NOT NULL AND TRIM(OLD.customer_address) <> '' THEN 1 ELSE 0 END) +
                        (CASE WHEN OLD.domain IS NOT NULL AND TRIM(OLD.domain) <> '' THEN 1 ELSE 0 END)
                    ),
                    0
                )
                WHERE option_name = 'wc_blacklist_sum_total';
            END;
 
Node.js v23.11.0
